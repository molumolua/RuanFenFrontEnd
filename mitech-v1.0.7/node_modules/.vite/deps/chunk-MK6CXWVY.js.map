{
  "version": 3,
  "sources": ["../../d3-timer/src/timer.js", "../../d3-timer/src/timeout.js", "../../d3-timer/src/interval.js", "../../d3-timer/src/index.js", "../../@antv/event-emitter/src/index.ts", "../../@antv/g-base/src/event/graph-event.ts", "../../@antv/path-util/src/parse-path-string.ts", "../../@antv/path-util/src/parse-path.ts", "../../@antv/path-util/node_modules/@antv/matrix-util/src/index.ts", "../../@antv/path-util/node_modules/@antv/matrix-util/src/ext.ts", "../../@antv/path-util/src/catmull-rom-2-bezier.ts", "../../@antv/path-util/src/fill-path-by-diff.ts", "../../@antv/path-util/src/path-intersection.ts", "../../@antv/path-util/src/path-2-absolute.ts", "../../@antv/path-util/src/process/arc-2-cubic.ts", "../../@antv/path-util/src/get-arc-params.ts", "../../@antv/path-util/src/path-2-segments.ts", "../../@antv/path-util/src/get-line-intersect.ts", "../../@antv/path-util/src/point-in-polygon.ts", "../../@antv/path-util/src/is-polygons-intersect.ts", "../../@antv/g-base/src/util/path.ts", "../../@antv/g-base/src/util/util.ts", "../../@antv/g-base/src/abstract/base.ts", "../../detect-browser/es/index.js", "../../@antv/g-base/src/abstract/element.ts", "../../@antv/g-base/src/util/matrix.ts", "../../@antv/g-base/src/abstract/container.ts", "../../@antv/g-base/src/animate/timeline.ts", "../../d3-color/src/define.js", "../../d3-color/src/color.js", "../../d3-color/src/math.js", "../../d3-color/src/lab.js", "../../d3-color/src/cubehelix.js", "../../d3-interpolate/src/basis.js", "../../d3-interpolate/src/basisClosed.js", "../../d3-interpolate/src/constant.js", "../../d3-interpolate/src/color.js", "../../d3-interpolate/src/rgb.js", "../../d3-interpolate/src/numberArray.js", "../../d3-interpolate/src/array.js", "../../d3-interpolate/src/date.js", "../../d3-interpolate/src/number.js", "../../d3-interpolate/src/object.js", "../../d3-interpolate/src/string.js", "../../d3-interpolate/src/value.js", "../../d3-interpolate/src/transform/decompose.js", "../../d3-interpolate/src/transform/parse.js", "../../d3-interpolate/src/transform/index.js", "../../d3-interpolate/src/zoom.js", "../../d3-interpolate/src/hsl.js", "../../d3-interpolate/src/hcl.js", "../../d3-interpolate/src/cubehelix.js", "../../d3-ease/src/index.js", "../../d3-ease/src/linear.js", "../../d3-ease/src/quad.js", "../../d3-ease/src/cubic.js", "../../d3-ease/src/poly.js", "../../d3-ease/src/sin.js", "../../d3-ease/src/math.js", "../../d3-ease/src/exp.js", "../../d3-ease/src/circle.js", "../../d3-ease/src/bounce.js", "../../d3-ease/src/back.js", "../../d3-ease/src/elastic.js", "../../@antv/g-base/src/animate/register.ts", "../../@antv/g-base/src/util/color.ts", "../../@antv/g-base/src/event/event-contoller.ts", "../../@antv/g-base/src/abstract/canvas.ts", "../../@antv/g-base/src/abstract/group.ts", "../../@antv/g-base/src/abstract/shape.ts", "../../@antv/g-base/src/bbox/register.ts", "../../@antv/g-base/src/bbox/rect.ts", "../../@antv/g-base/src/bbox/circle.ts", "../../@antv/g-math/src/util.ts", "../../@antv/g-math/src/line.ts", "../../@antv/g-math/src/bezier.ts", "../../@antv/g-math/src/quadratic.ts", "../../@antv/g-math/src/cubic.ts", "../../@antv/g-math/src/ellipse.ts", "../../@antv/g-math/src/arc.ts", "../../@antv/g-math/src/segments.ts", "../../@antv/g-math/src/polyline.ts", "../../@antv/g-base/src/bbox/util.ts", "../../@antv/g-base/src/bbox/polyline.ts", "../../@antv/g-base/src/bbox/polygon.ts", "../../@antv/g-base/src/util/offscreen.ts", "../../@antv/g-base/src/util/text.ts", "../../@antv/g-base/src/bbox/text.ts", "../../@antv/g-base/src/bbox/path.ts", "../../@antv/g-base/src/bbox/line.ts", "../../@antv/g-base/src/bbox/ellipse.ts", "../../@antv/g-base/src/bbox/index.ts", "../../@antv/g-canvas/src/util/hit.ts", "../../@antv/g-canvas/src/shape/index.ts", "../../@antv/g-canvas/src/util/util.ts", "../../@antv/g-canvas/src/util/draw.ts", "../../@antv/g-canvas/src/util/parse.ts", "../../@antv/g-canvas/src/util/arc-params.ts", "../../@antv/g-canvas/src/util/arrow.ts", "../../@antv/g-canvas/src/group.ts", "../../@antv/g-canvas/src/shape/base.ts", "../../@antv/g-canvas/src/shape/circle.ts", "../../@antv/g-canvas/src/shape/ellipse.ts", "../../@antv/g-canvas/src/shape/image.ts", "../../@antv/g-canvas/src/util/in-stroke/line.ts", "../../@antv/g-canvas/src/shape/line.ts", "../../@antv/g-canvas/src/shape/marker.ts", "../../@antv/g-canvas/src/shape/path.ts", "../../@antv/g-canvas/src/util/in-path/point-in-path.ts", "../../@antv/g-canvas/src/util/in-path/polygon.ts", "../../@antv/g-canvas/src/util/path.ts", "../../@antv/g-canvas/src/util/in-stroke/arc.ts", "../../@antv/g-canvas/src/util/in-stroke/polyline.ts", "../../@antv/g-canvas/src/shape/polygon.ts", "../../@antv/g-canvas/src/shape/polyline.ts", "../../@antv/g-canvas/src/util/in-stroke/rect.ts", "../../@antv/g-canvas/src/util/in-stroke/rect-radius.ts", "../../@antv/g-canvas/src/shape/rect.ts", "../../@antv/g-canvas/src/shape/text.ts", "../../@antv/g-canvas/src/canvas.ts", "../../@antv/g-canvas/src/index.ts", "../../@antv/g-svg/src/constant.ts", "../../@antv/g-svg/src/util/dom.ts", "../../@antv/g-svg/src/util/svg.ts", "../../@antv/g-svg/src/util/draw.ts", "../../@antv/g-svg/src/shape/index.ts", "../../@antv/g-svg/src/group.ts", "../../@antv/g-svg/src/shape/base.ts", "../../@antv/g-svg/src/shape/circle.ts", "../../@antv/g-svg/src/shape/dom.ts", "../../@antv/g-svg/src/shape/ellipse.ts", "../../@antv/g-svg/src/shape/image.ts", "../../@antv/g-svg/src/shape/line.ts", "../../@antv/g-svg/src/shape/marker/index.ts", "../../@antv/g-svg/src/shape/marker/symbols.ts", "../../@antv/g-svg/src/shape/path.ts", "../../@antv/g-svg/src/shape/polygon.ts", "../../@antv/g-svg/src/shape/polyline.ts", "../../@antv/g-svg/src/shape/rect.ts", "../../@antv/g-svg/src/util/format.ts", "../../@antv/g-svg/src/shape/text.ts", "../../@antv/g-svg/src/defs/index.ts", "../../@antv/g-svg/src/defs/gradient.ts", "../../@antv/g-svg/src/defs/shadow.ts", "../../@antv/g-svg/src/defs/arrow.ts", "../../@antv/g-svg/src/defs/clip.ts", "../../@antv/g-svg/src/defs/pattern.ts", "../../@antv/g-svg/src/canvas.ts", "../../@antv/g-svg/src/index.ts", "../../@antv/dom-util/src/create-dom.ts", "../../@antv/dom-util/src/add-event-listener.ts", "../../@antv/dom-util/src/get-style.ts", "../../@antv/dom-util/src/get-height.ts", "../../@antv/dom-util/src/get-outer-height.ts", "../../@antv/dom-util/src/get-width.ts", "../../@antv/dom-util/src/get-outer-width.ts", "../../@antv/dom-util/src/modify-css.ts", "../../@antv/scale/src/base.ts", "../../@antv/scale/src/tick-method/register.ts", "../../@antv/scale/src/category/base.ts", "../../@antv/scale/src/category/time.ts", "../../@antv/scale/src/util/time.ts", "../../fecha/src/fecha.ts", "../../@antv/scale/src/util/bisector.ts", "../../@antv/scale/src/continuous/base.ts", "../../@antv/scale/src/continuous/linear.ts", "../../@antv/scale/src/util/math.ts", "../../@antv/scale/src/continuous/log.ts", "../../@antv/scale/src/continuous/pow.ts", "../../@antv/scale/src/continuous/time.ts", "../../@antv/scale/src/continuous/quantize.ts", "../../@antv/scale/src/continuous/quantile.ts", "../../@antv/scale/src/factory.ts", "../../@antv/scale/src/identity/index.ts", "../../@antv/scale/src/tick-method/cat.ts", "../../@antv/scale/src/tick-method/d3-linear.ts", "../../@antv/scale/src/util/d3-linear.ts", "../../@antv/scale/src/util/interval.ts", "../../@antv/scale/src/util/strict-limit.ts", "../../@antv/scale/src/tick-method/linear.ts", "../../@antv/scale/src/util/extended.ts", "../../@antv/scale/src/util/pretty-number.ts", "../../@antv/scale/src/tick-method/log.ts", "../../@antv/scale/src/util/pretty.ts", "../../@antv/scale/src/tick-method/pow.ts", "../../@antv/scale/src/tick-method/quantile.ts", "../../@antv/scale/src/tick-method/r-prettry.ts", "../../@antv/scale/src/tick-method/time.ts", "../../@antv/scale/src/tick-method/time-cat.ts", "../../@antv/scale/src/tick-method/time-pretty.ts", "../../@antv/scale/src/tick-method/index.ts", "../../@antv/scale/src/index.ts"],
  "sourcesContent": ["var frame = 0, // is an animation frame pending?\r\n    timeout = 0, // is a timeout pending?\r\n    interval = 0, // are any timers active?\r\n    pokeDelay = 1000, // how frequently we check for clock skew\r\n    taskHead,\r\n    taskTail,\r\n    clockLast = 0,\r\n    clockNow = 0,\r\n    clockSkew = 0,\r\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\r\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\r\n\r\nexport function now() {\r\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\r\n}\r\n\r\nfunction clearNow() {\r\n  clockNow = 0;\r\n}\r\n\r\nexport function Timer() {\r\n  this._call =\r\n  this._time =\r\n  this._next = null;\r\n}\r\n\r\nTimer.prototype = timer.prototype = {\r\n  constructor: Timer,\r\n  restart: function(callback, delay, time) {\r\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\r\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\r\n    if (!this._next && taskTail !== this) {\r\n      if (taskTail) taskTail._next = this;\r\n      else taskHead = this;\r\n      taskTail = this;\r\n    }\r\n    this._call = callback;\r\n    this._time = time;\r\n    sleep();\r\n  },\r\n  stop: function() {\r\n    if (this._call) {\r\n      this._call = null;\r\n      this._time = Infinity;\r\n      sleep();\r\n    }\r\n  }\r\n};\r\n\r\nexport function timer(callback, delay, time) {\r\n  var t = new Timer;\r\n  t.restart(callback, delay, time);\r\n  return t;\r\n}\r\n\r\nexport function timerFlush() {\r\n  now(); // Get the current time, if not already set.\r\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\r\n  var t = taskHead, e;\r\n  while (t) {\r\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\r\n    t = t._next;\r\n  }\r\n  --frame;\r\n}\r\n\r\nfunction wake() {\r\n  clockNow = (clockLast = clock.now()) + clockSkew;\r\n  frame = timeout = 0;\r\n  try {\r\n    timerFlush();\r\n  } finally {\r\n    frame = 0;\r\n    nap();\r\n    clockNow = 0;\r\n  }\r\n}\r\n\r\nfunction poke() {\r\n  var now = clock.now(), delay = now - clockLast;\r\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\r\n}\r\n\r\nfunction nap() {\r\n  var t0, t1 = taskHead, t2, time = Infinity;\r\n  while (t1) {\r\n    if (t1._call) {\r\n      if (time > t1._time) time = t1._time;\r\n      t0 = t1, t1 = t1._next;\r\n    } else {\r\n      t2 = t1._next, t1._next = null;\r\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\r\n    }\r\n  }\r\n  taskTail = t0;\r\n  sleep(time);\r\n}\r\n\r\nfunction sleep(time) {\r\n  if (frame) return; // Soonest alarm already set, or will be.\r\n  if (timeout) timeout = clearTimeout(timeout);\r\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\r\n  if (delay > 24) {\r\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\r\n    if (interval) interval = clearInterval(interval);\r\n  } else {\r\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\r\n    frame = 1, setFrame(wake);\r\n  }\r\n}\r\n", "import {Timer} from \"./timer.js\";\r\n\r\nexport default function(callback, delay, time) {\r\n  var t = new Timer;\r\n  delay = delay == null ? 0 : +delay;\r\n  t.restart(function(elapsed) {\r\n    t.stop();\r\n    callback(elapsed + delay);\r\n  }, delay, time);\r\n  return t;\r\n}\r\n", "import {Timer, now} from \"./timer.js\";\r\n\r\nexport default function(callback, delay, time) {\r\n  var t = new Timer, total = delay;\r\n  if (delay == null) return t.restart(callback, delay, time), t;\r\n  delay = +delay, time = time == null ? now() : +time;\r\n  t.restart(function tick(elapsed) {\r\n    elapsed += total;\r\n    t.restart(tick, total += delay, time);\r\n    callback(elapsed);\r\n  }, delay, time);\r\n  return t;\r\n}\r\n", "export {\r\n  now,\r\n  timer,\r\n  timerFlush\r\n} from \"./timer.js\";\r\n\r\nexport {\r\n  default as timeout\r\n} from \"./timeout.js\";\r\n\r\nexport {\r\n  default as interval\r\n} from \"./interval.js\";\r\n", "interface EventType {\r\n  readonly callback: Function;\r\n  readonly once: boolean;\r\n}\r\n\r\ntype EventsType = Record<string, EventType[]>;\r\n\r\nconst WILDCARD = '*';\r\n\r\n/* event-emitter */\r\nexport default class EventEmitter {\r\n  private _events: EventsType = {};\r\n\r\n  /**\r\n   * 监听一个事件\r\n   * @param evt\r\n   * @param callback\r\n   * @param once\r\n   */\r\n  on(evt: string, callback: Function, once?: boolean) {\r\n    if (!this._events[evt]) {\r\n      this._events[evt] = [];\r\n    }\r\n    this._events[evt].push({\r\n      callback,\r\n      once: !!once,\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 监听一个事件一次\r\n   * @param evt\r\n   * @param callback\r\n   */\r\n  once(evt: string, callback: Function) {\r\n    return this.on(evt, callback, true);\r\n  }\r\n\r\n  /**\r\n   * 触发一个事件\r\n   * @param evt\r\n   * @param args\r\n   */\r\n  emit(evt: string, ...args: any[]) {\r\n    const events = this._events[evt] || [];\r\n    const wildcardEvents = this._events[WILDCARD] || [];\r\n\r\n    // 实际的处理 emit 方法\r\n    const doEmit = (es: EventType[]) => {\r\n      let length = es.length;\r\n      for (let i = 0; i < length; i++) {\r\n        if (!es[i]) {\r\n          continue;\r\n        }\r\n        const { callback, once } = es[i];\r\n\r\n        if (once) {\r\n          es.splice(i, 1);\r\n\r\n          if (es.length === 0) {\r\n            delete this._events[evt];\r\n          }\r\n\r\n          length--;\r\n          i--;\r\n        }\r\n\r\n        callback.apply(this, args);\r\n      }\r\n    };\r\n\r\n    doEmit(events);\r\n    doEmit(wildcardEvents);\r\n  }\r\n\r\n  /**\r\n   * 取消监听一个事件，或者一个channel\r\n   * @param evt\r\n   * @param callback\r\n   */\r\n  off(evt?: string, callback?: Function) {\r\n    if (!evt) {\r\n      // evt 为空全部清除\r\n      this._events = {};\r\n    } else {\r\n      if (!callback) {\r\n        // evt 存在，callback 为空，清除事件所有方法\r\n        delete this._events[evt];\r\n      } else {\r\n        // evt 存在，callback 存在，清除匹配的\r\n        const events = this._events[evt] || [];\r\n\r\n        let length = events.length;\r\n        for (let i = 0; i < length; i++) {\r\n          if (events[i].callback === callback) {\r\n            events.splice(i, 1);\r\n            length--;\r\n            i--;\r\n          }\r\n        }\r\n\r\n        if (events.length === 0) {\r\n          delete this._events[evt];\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /* 当前所有的事件 */\r\n  getEvents() {\r\n    return this._events;\r\n  }\r\n}\r\n", "import { IShape } from '../interfaces';\r\nimport { LooseObject } from '../types';\r\n\r\nclass GraphEvent {\r\n  /**\r\n   * 事件类型\r\n   * @type {string}\r\n   */\r\n  type: string;\r\n  /**\r\n   * 事件名称\r\n   * @type {string}\r\n   */\r\n  name: string;\r\n  /**\r\n   * 画布上的位置 x\r\n   * @type {number}\r\n   */\r\n  x: number;\r\n  /**\r\n   * 画布上的位置 y\r\n   * @type {number}\r\n   */\r\n  y: number;\r\n  /**\r\n   * 窗口上的位置 x\r\n   * @type {number}\r\n   */\r\n  clientX: number;\r\n  /**\r\n   * 窗口上的位置 y\r\n   * @type {number}\r\n   */\r\n  clientY: number;\r\n  /**\r\n   * 是否允许冒泡\r\n   * @type {boolean}\r\n   */\r\n  bubbles: boolean = true;\r\n  /**\r\n   * 触发对象\r\n   * @type {object}\r\n   */\r\n  target: LooseObject = null;\r\n  /**\r\n   * 监听对象\r\n   * @type {object}\r\n   */\r\n  currentTarget: LooseObject = null;\r\n  /**\r\n   * 委托对象\r\n   * @type {object}\r\n   */\r\n  delegateTarget: LooseObject = null;\r\n  /**\r\n   * 委托事件监听对象的代理对象，即 ev.delegateObject = ev.currentTarget.get('delegateObject')\r\n   * @type {object}\r\n   */\r\n  delegateObject: object = null;\r\n  /**\r\n   * 是否阻止了原生事件\r\n   * @type {boolean}\r\n   */\r\n  defaultPrevented: boolean = false;\r\n  /**\r\n   * 是否阻止传播（向上冒泡）\r\n   * @type {boolean}\r\n   */\r\n  propagationStopped: boolean = false;\r\n  /**\r\n   * 触发事件的图形\r\n   * @type {IShape}\r\n   */\r\n  shape: IShape = null;\r\n  /**\r\n   * 开始触发事件的图形\r\n   * @type {IShape}\r\n   */\r\n  fromShape: IShape = null;\r\n  /**\r\n   * 事件结束时的触发图形\r\n   * @type {IShape}\r\n   */\r\n  toShape: IShape = null;\r\n\r\n  /**\r\n   * 触发时的时间\r\n   * @type {number}\r\n   */\r\n  timeStamp: number;\r\n\r\n  /**\r\n   * 触发时的对象\r\n   * @type {object}\r\n   */\r\n  originalEvent: Event;\r\n\r\n  // 触发事件的路径\r\n  propagationPath: any[] = [];\r\n\r\n  constructor(type, event) {\r\n    this.type = type;\r\n    this.name = type;\r\n    this.originalEvent = event;\r\n    this.timeStamp = event.timeStamp;\r\n  }\r\n\r\n  /**\r\n   * 阻止浏览器默认的行为\r\n   */\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n    if (this.originalEvent.preventDefault) {\r\n      this.originalEvent.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 阻止冒泡\r\n   */\r\n  stopPropagation() {\r\n    this.propagationStopped = true;\r\n  }\r\n\r\n  toString() {\r\n    const type = this.type;\r\n    return `[Event (type=${type})]`;\r\n  }\r\n\r\n  save() {}\r\n\r\n  restore() {}\r\n}\r\n\r\nexport default GraphEvent;\r\n", "import { isArray } from '@antv/util';\r\n\r\nconst SPACES = '\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029';\r\nconst PATH_COMMAND = new RegExp('([a-z])[' + SPACES + ',]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[' + SPACES + ']*,?[' + SPACES + ']*)+)', 'ig');\r\nconst PATH_VALUES = new RegExp('(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[' + SPACES + ']*,?[' + SPACES + ']*', 'ig');\r\n\r\n// Parses given path string into an array of arrays of path segments\r\nexport default function parsePathString(pathString: string) {\r\n  if (!pathString) {\r\n    return null;\r\n  }\r\n\r\n  if (isArray(pathString)) {\r\n    return pathString;\r\n  }\r\n  const paramCounts = {\r\n    a: 7,\r\n    c: 6,\r\n    o: 2,\r\n    h: 1,\r\n    l: 2,\r\n    m: 2,\r\n    r: 4,\r\n    q: 4,\r\n    s: 4,\r\n    t: 2,\r\n    v: 1,\r\n    u: 3,\r\n    z: 0,\r\n  };\r\n  const data = [];\r\n\r\n  String(pathString).replace(PATH_COMMAND, function (a, b, c) {\r\n    const params = [];\r\n    let name = b.toLowerCase();\r\n    c.replace(PATH_VALUES, function (a, b) {\r\n      b && params.push(+b);\r\n    });\r\n    if (name === 'm' && params.length > 2) {\r\n      data.push([ b ].concat(params.splice(0, 2)));\r\n      name = 'l';\r\n      b = b === 'm' ? 'l' : 'L';\r\n    }\r\n    if (name === 'o' && params.length === 1) {\r\n      data.push([ b, params[0] ]);\r\n    }\r\n    if (name === 'r') {\r\n      data.push([ b ].concat(params));\r\n    } else {\r\n      while (params.length >= paramCounts[name]) {\r\n        data.push([ b ].concat(params.splice(0, paramCounts[name])));\r\n        if (!paramCounts[name]) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return '';\r\n  });\r\n\r\n  return data;\r\n}\r\n", "import { each, isArray, isString } from '@antv/util';\r\n\r\nconst regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/ig;\r\nconst regexDot = /[^\\s\\,]+/ig;\r\n\r\nfunction parsePath(p: string): string[] {\r\n  let path = p || [] as string | string[];\r\n  if (isArray(path)) {\r\n    return path;\r\n  }\r\n\r\n  if (isString(path)) {\r\n    path = path.match(regexTags);\r\n    each(path, (item, index) => {\r\n      // @ts-ignore\r\n      item = item.match(regexDot);\r\n      if (item[0].length > 1) {\r\n        const tag = item[0].charAt(0);\r\n        // @ts-ignore\r\n        item.splice(1, 0, item[0].substr(1));\r\n        // @ts-ignore\r\n        item[0] = tag;\r\n      }\r\n      // @ts-ignore\r\n      each(item, function (sub, i) {\r\n        if (!isNaN(sub)) {\r\n          // @ts-ignore\r\n          item[i] = +sub;\r\n        }\r\n      });\r\n      // @ts-ignore\r\n      path[index] = item;\r\n    });\r\n    return path;\r\n  }\r\n}\r\n\r\nexport default parsePath;\r\n", "import { mat3, vec2, vec3 } from 'gl-matrix';\r\nimport * as ext from './ext';\r\n\r\nexport { mat3, vec2, vec3, ext };\r\n", "/**\r\n * @description 扩展方法，提供 gl-matrix 为提供的方法\r\n * */\r\nimport { mat3, vec2 } from 'gl-matrix';\r\n\r\ntype mat3Type = [number, number, number, number, number, number, number, number, number];\r\n\r\nexport function leftTranslate(out, a, v) {\r\n  const transMat: mat3Type = [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\r\n  mat3.fromTranslation(transMat, v);\r\n  return mat3.multiply(out, transMat, a);\r\n}\r\n\r\nexport function leftRotate(out, a, rad) {\r\n  const rotateMat: mat3Type = [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\r\n  mat3.fromRotation(rotateMat, rad);\r\n  return mat3.multiply(out, rotateMat, a);\r\n}\r\n\r\nexport function leftScale(out, a, v) {\r\n  const scaleMat: mat3Type = [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\r\n  mat3.fromScaling(scaleMat, v);\r\n  return mat3.multiply(out, scaleMat, a);\r\n}\r\n\r\nfunction leftMultiply(out, a, a1) {\r\n  return mat3.multiply(out, a1, a);\r\n}\r\n/**\r\n * 根据 actions 来做 transform\r\n * @param m\r\n * @param actions\r\n */\r\nexport function transform(m: number[], actions: any[][]) {\r\n  const matrix = m ? [].concat(m) : [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\r\n\r\n  for (let i = 0, len = actions.length; i < len; i++) {\r\n    const action = actions[i];\r\n    switch (action[0]) {\r\n      case 't':\r\n        leftTranslate(matrix, matrix, [ action[1], action[2] ]);\r\n        break;\r\n      case 's':\r\n        leftScale(matrix, matrix, [ action[1], action[2] ]);\r\n        break;\r\n      case 'r':\r\n        leftRotate(matrix, matrix, action[1]);\r\n        break;\r\n      case 'm':\r\n        leftMultiply(matrix, matrix, action[1]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return matrix;\r\n}\r\n\r\n/**\r\n * 向量 v1 到 向量 v2 夹角的方向\r\n * @param  {Array} v1 向量\r\n * @param  {Array} v2 向量\r\n * @return {Boolean} >= 0 顺时针 < 0 逆时针\r\n */\r\nexport function direction(v1: number[], v2: number[]): number {\r\n  return v1[0] * v2[1] - v2[0] * v1[1];\r\n}\r\n\r\n/**\r\n * 二维向量 v1 到 v2 的夹角\r\n * @param v1\r\n * @param v2\r\n * @param direct\r\n */\r\nexport function angleTo(v1: [number, number], v2: [number, number], direct: boolean): number {\r\n  const ang = vec2.angle(v1, v2);\r\n  const angleLargeThanPI = direction(v1, v2) >= 0;\r\n  if (direct) {\r\n    if (angleLargeThanPI) {\r\n      return Math.PI * 2 - ang;\r\n    }\r\n    return ang;\r\n  }\r\n\r\n  if (angleLargeThanPI) {\r\n    return ang;\r\n  }\r\n  return Math.PI * 2 - ang;\r\n}\r\n\r\n/**\r\n * 计算二维向量的垂直向量\r\n * @param out\r\n * @param v\r\n * @param flag\r\n */\r\nexport function vertical(out: number[], v: number[], flag: boolean): number[] {\r\n  if (flag) {\r\n    out[0] = v[1];\r\n    out[1] = -1 * v[0];\r\n  } else {\r\n    out[0] = -1 * v[1];\r\n    out[1] = v[0];\r\n  }\r\n\r\n  return out;\r\n}\r\n", "import { vec2 } from '@antv/matrix-util';\r\nimport type { PathCommand } from './types';\r\n\r\ntype Pos = [number, number];\r\n\r\nfunction smoothBezier(points: Pos[], smooth: number, isLoop: boolean, constraint: Pos[]) {\r\n  const cps: vec2[] = [];\r\n  const hasConstraint = !!constraint;\r\n\r\n  let prevPoint: Pos;\r\n  let nextPoint: Pos;\r\n  let min: vec2;\r\n  let max: vec2;\r\n  let nextCp0: vec2;\r\n  let cp1: vec2;\r\n  let cp0: vec2;\r\n\r\n  if (hasConstraint) {\r\n    [ min, max ] = constraint;\r\n    for (let i = 0, l = points.length; i < l; i += 1) {\r\n      const point = points[i];\r\n      min = vec2.min([ 0, 0 ], min, point);\r\n      max = vec2.max([ 0, 0 ], max, point);\r\n    }\r\n  }\r\n\r\n  for (let i = 0, len = points.length; i < len; i += 1) {\r\n    const point = points[i];\r\n    if (i === 0 && !isLoop) {\r\n      cp0 = point;\r\n    } else if (i === len - 1 && !isLoop) {\r\n      cp1 = point;\r\n      cps.push(cp0);\r\n      cps.push(cp1);\r\n    } else {\r\n      const prevIdx = [ i ? i - 1 : len - 1, i - 1 ][isLoop ? 0 : 1];\r\n      prevPoint = points[prevIdx];\r\n      nextPoint = points[isLoop ? (i + 1) % len : i + 1];\r\n\r\n      let v: vec2 = [ 0, 0 ];\r\n      v = vec2.sub(v, nextPoint, prevPoint);\r\n      v = vec2.scale(v, v, smooth);\r\n\r\n      let d0 = vec2.distance(point, prevPoint);\r\n      let d1 = vec2.distance(point, nextPoint);\r\n\r\n      const sum = d0 + d1;\r\n      if (sum !== 0) {\r\n        d0 /= sum;\r\n        d1 /= sum;\r\n      }\r\n\r\n      let v1 = vec2.scale([ 0, 0 ], v, -d0);\r\n      let v2 = vec2.scale([ 0, 0 ], v, d1);\r\n\r\n      cp1 = vec2.add([ 0, 0 ], point, v1);\r\n      nextCp0 = vec2.add([ 0, 0 ], point, v2);\r\n\r\n      // 下一个控制点必须在这个点和下一个点之间\r\n      nextCp0 = vec2.min([ 0, 0 ], nextCp0, vec2.max([ 0, 0 ], nextPoint, point));\r\n      nextCp0 = vec2.max([ 0, 0 ], nextCp0, vec2.min([ 0, 0 ], nextPoint, point));\r\n\r\n      // 重新计算 cp1 的值\r\n      v1 = vec2.sub([ 0, 0 ], nextCp0, point);\r\n      v1 = vec2.scale([ 0, 0 ], v1, -d0 / d1);\r\n      cp1 = vec2.add([ 0, 0 ], point, v1);\r\n\r\n      // 上一个控制点必须要在上一个点和这一个点之间\r\n      cp1 = vec2.min([ 0, 0 ], cp1, vec2.max([ 0, 0 ], prevPoint, point));\r\n      cp1 = vec2.max([ 0, 0 ], cp1, vec2.min([ 0, 0 ], prevPoint, point));\r\n\r\n      // 重新计算 nextCp0 的值\r\n      v2 = vec2.sub([ 0, 0 ], point, cp1);\r\n      v2 = vec2.scale([ 0, 0 ], v2, d1 / d0);\r\n      nextCp0 = vec2.add([ 0, 0 ], point, v2);\r\n\r\n      if (hasConstraint) {\r\n        cp1 = vec2.max([ 0, 0 ], cp1, min);\r\n        cp1 = vec2.min([ 0, 0 ], cp1, max);\r\n        nextCp0 = vec2.max([ 0, 0 ], nextCp0, min);\r\n        nextCp0 = vec2.min([ 0, 0 ], nextCp0, max);\r\n      }\r\n\r\n      cps.push(cp0);\r\n      cps.push(cp1);\r\n      cp0 = nextCp0;\r\n    }\r\n  }\r\n\r\n  if (isLoop) {\r\n    cps.push(cps.shift());\r\n  }\r\n\r\n  return cps;\r\n}\r\n\r\n/**\r\n * create bezier spline from catmull rom spline\r\n * @param {Array} crp Catmull Rom Points\r\n * @param {boolean} z Spline is loop\r\n * @param {Array} constraint Constraint\r\n */\r\nfunction catmullRom2Bezier(\r\n  crp: number[],\r\n  z: boolean = false,\r\n  constraint: Pos[] = [\r\n    [ 0, 0 ],\r\n    [ 1, 1 ],\r\n  ]\r\n): PathCommand[] {\r\n  const isLoop = !!z;\r\n  const pointList: Pos[] = [];\r\n  for (let i = 0, l = crp.length; i < l; i += 2) {\r\n    pointList.push([ crp[i], crp[i + 1] ]);\r\n  }\r\n\r\n  const controlPointList = smoothBezier(pointList, 0.4, isLoop, constraint);\r\n  const len = pointList.length;\r\n  const d1: PathCommand[] = [];\r\n\r\n  let cp1: vec2;\r\n  let cp2: vec2;\r\n  let p: Pos;\r\n\r\n  for (let i = 0; i < len - 1; i += 1) {\r\n    cp1 = controlPointList[i * 2];\r\n    cp2 = controlPointList[i * 2 + 1];\r\n    p = pointList[i + 1];\r\n\r\n    d1.push([ 'C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1] ]);\r\n  }\r\n\r\n  if (isLoop) {\r\n    cp1 = controlPointList[len];\r\n    cp2 = controlPointList[len + 1];\r\n    [ p ] = pointList;\r\n\r\n    d1.push([ 'C', cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1] ]);\r\n  }\r\n  return d1;\r\n}\r\n\r\nexport default catmullRom2Bezier;\r\n", "import { isEqual } from '@antv/util';\r\n\r\nexport interface DiffType {\r\n  type: string;\r\n  min: number;\r\n}\r\n\r\nfunction getMinDiff(del: number, add: number, modify: number): DiffType {\r\n  let type = null;\r\n  let min = modify;\r\n  if (add < min) {\r\n    min = add;\r\n    type = 'add';\r\n  }\r\n  if (del < min) {\r\n    min = del;\r\n    type = 'del';\r\n  }\r\n  return {\r\n    type,\r\n    min,\r\n  };\r\n}\r\n\r\n/*\r\n * https://en.wikipedia.org/wiki/Levenshtein_distance\r\n * 计算两条path的编辑距离\r\n */\r\nconst levenshteinDistance = function (source: string, target: string): DiffType[][] {\r\n  const sourceLen = source.length;\r\n  const targetLen = target.length;\r\n  let sourceSegment,\r\n    targetSegment;\r\n  let temp = 0;\r\n  if (sourceLen === 0 || targetLen === 0) {\r\n    return null;\r\n  }\r\n  const dist = [];\r\n  for (let i = 0; i <= sourceLen; i++) {\r\n    dist[i] = [];\r\n    dist[i][0] = { min: i };\r\n  }\r\n  for (let j = 0; j <= targetLen; j++) {\r\n    dist[0][j] = { min: j };\r\n  }\r\n\r\n  for (let i = 1; i <= sourceLen; i++) {\r\n    sourceSegment = source[i - 1];\r\n    for (let j = 1; j <= targetLen; j++) {\r\n      targetSegment = target[j - 1];\r\n      if (isEqual(sourceSegment, targetSegment)) {\r\n        temp = 0;\r\n      } else {\r\n        temp = 1;\r\n      }\r\n      const del = dist[i - 1][j].min + 1;\r\n      const add = dist[i][j - 1].min + 1;\r\n      const modify = dist[i - 1][j - 1].min + temp;\r\n      dist[i][j] = getMinDiff(del, add, modify);\r\n    }\r\n  }\r\n  return dist;\r\n};\r\n\r\nexport default function fillPathByDiff(source: string, target: string) {\r\n  const diffMatrix = levenshteinDistance(source, target);\r\n  let sourceLen = source.length;\r\n  const targetLen = target.length;\r\n  const changes = [];\r\n  let index = 1;\r\n  let minPos = 1;\r\n  // 如果source和target不是完全不相等\r\n  // @ts-ignore\r\n  if (diffMatrix[sourceLen][targetLen] !== sourceLen) {\r\n    // 获取从source到target所需改动\r\n    for (let i = 1; i <= sourceLen; i++) {\r\n      let min = diffMatrix[i][i].min;\r\n      minPos = i;\r\n      for (let j = index; j <= targetLen; j++) {\r\n        if (diffMatrix[i][j].min < min) {\r\n          min = diffMatrix[i][j].min;\r\n          minPos = j;\r\n        }\r\n      }\r\n      index = minPos;\r\n      if (diffMatrix[i][index].type) {\r\n        changes.push({ index: i - 1, type: diffMatrix[i][index].type });\r\n      }\r\n    }\r\n    // 对source进行增删path\r\n    for (let i = changes.length - 1; i >= 0; i--) {\r\n      index = changes[i].index;\r\n      if (changes[i].type === 'add') {\r\n        // @ts-ignore\r\n        source.splice(index, 0, [].concat(source[index]));\r\n      } else {\r\n        // @ts-ignore\r\n        source.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  // source尾部补齐\r\n  sourceLen = source.length;\r\n  if (sourceLen < targetLen) {\r\n    for (let i = 0; i < (targetLen - sourceLen); i++) {\r\n      if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {\r\n        // @ts-ignore\r\n        source.splice(sourceLen - 2, 0, source[sourceLen - 2]);\r\n      } else {\r\n        // @ts-ignore\r\n        source.push(source[sourceLen - 1]);\r\n      }\r\n\r\n    }\r\n  }\r\n  return source;\r\n}\r\n", "import { isArray } from '@antv/util';\r\n\r\nimport rectPath from './rect-path';\r\nimport path2Curve from './path-2-curve';\r\n\r\nconst base3 = function (t: number, p1: number, p2: number, p3: number, p4: number): number {\r\n  const t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\r\n  const t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\r\n  return t * t2 - 3 * p1 + 3 * p2;\r\n};\r\n\r\nconst bezlen = function (x1: number, y1: number, x2: number, y2: number,\r\n                         x3: number, y3: number, x4: number, y4: number, z: number): number {\r\n  if (z === null) {\r\n    z = 1;\r\n  }\r\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\r\n  const z2 = z / 2;\r\n  const n = 12;\r\n  const Tvalues = [ -0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816 ];\r\n  const Cvalues = [ 0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472 ];\r\n  let sum = 0;\r\n  for (let i = 0; i < n; i++) {\r\n    const ct = z2 * Tvalues[i] + z2;\r\n    const xbase = base3(ct, x1, x2, x3, x4);\r\n    const ybase = base3(ct, y1, y2, y3, y4);\r\n    const comb = xbase * xbase + ybase * ybase;\r\n    sum += Cvalues[i] * Math.sqrt(comb);\r\n  }\r\n  return z2 * sum;\r\n};\r\n\r\nexport interface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface BoundPoint {\r\n  min: Point;\r\n  max: Point;\r\n}\r\n\r\nconst curveDim = function (x0: number, y0: number, x1: number, y1: number,\r\n                           x2: number, y2: number, x3: number, y3: number): BoundPoint {\r\n  const tvalues = [];\r\n  const bounds = [\r\n    [],\r\n    [],\r\n  ];\r\n  let a;\r\n  let b;\r\n  let c;\r\n  let t;\r\n\r\n  for (let i = 0; i < 2; ++i) {\r\n    if (i === 0) {\r\n      b = 6 * x0 - 12 * x1 + 6 * x2;\r\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\r\n      c = 3 * x1 - 3 * x0;\r\n    } else {\r\n      b = 6 * y0 - 12 * y1 + 6 * y2;\r\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\r\n      c = 3 * y1 - 3 * y0;\r\n    }\r\n    if (Math.abs(a) < 1e-12) {\r\n      if (Math.abs(b) < 1e-12) {\r\n        continue;\r\n      }\r\n      t = -c / b;\r\n      if (t > 0 && t < 1) {\r\n        tvalues.push(t);\r\n      }\r\n      continue;\r\n    }\r\n    const b2ac = b * b - 4 * c * a;\r\n    const sqrtb2ac = Math.sqrt(b2ac);\r\n    if (b2ac < 0) {\r\n      continue;\r\n    }\r\n    const t1 = (-b + sqrtb2ac) / (2 * a);\r\n    if (t1 > 0 && t1 < 1) {\r\n      tvalues.push(t1);\r\n    }\r\n    const t2 = (-b - sqrtb2ac) / (2 * a);\r\n    if (t2 > 0 && t2 < 1) {\r\n      tvalues.push(t2);\r\n    }\r\n  }\r\n\r\n  let j = tvalues.length;\r\n  const jlen = j;\r\n  let mt;\r\n  while (j--) {\r\n    t = tvalues[j];\r\n    mt = 1 - t;\r\n    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n  }\r\n\r\n  bounds[0][jlen] = x0;\r\n  bounds[1][jlen] = y0;\r\n  bounds[0][jlen + 1] = x3;\r\n  bounds[1][jlen + 1] = y3;\r\n  bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n  return {\r\n    min: {\r\n      x: Math.min.apply(0, bounds[0]),\r\n      y: Math.min.apply(0, bounds[1]),\r\n    },\r\n    max: {\r\n      x: Math.max.apply(0, bounds[0]),\r\n      y: Math.max.apply(0, bounds[1]),\r\n    },\r\n  };\r\n};\r\n\r\nconst intersect = function (x1: number, y1: number, x2: number, y2: number,\r\n                            x3: number, y3: number, x4: number, y4: number): Point {\r\n  if (\r\n    Math.max(x1, x2) < Math.min(x3, x4) ||\r\n    Math.min(x1, x2) > Math.max(x3, x4) ||\r\n    Math.max(y1, y2) < Math.min(y3, y4) ||\r\n    Math.min(y1, y2) > Math.max(y3, y4)\r\n  ) {\r\n    return;\r\n  }\r\n  const nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\r\n  const ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\r\n  const denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n  if (!denominator) {\r\n    return;\r\n  }\r\n  const px = nx / denominator;\r\n  const py = ny / denominator;\r\n  const px2 = +px.toFixed(2);\r\n  const py2 = +py.toFixed(2);\r\n  if (\r\n    px2 < +Math.min(x1, x2).toFixed(2) ||\r\n    px2 > +Math.max(x1, x2).toFixed(2) ||\r\n    px2 < +Math.min(x3, x4).toFixed(2) ||\r\n    px2 > +Math.max(x3, x4).toFixed(2) ||\r\n    py2 < +Math.min(y1, y2).toFixed(2) ||\r\n    py2 > +Math.max(y1, y2).toFixed(2) ||\r\n    py2 < +Math.min(y3, y4).toFixed(2) ||\r\n    py2 > +Math.max(y3, y4).toFixed(2)\r\n  ) {\r\n    return;\r\n  }\r\n  return {\r\n    x: px,\r\n    y: py,\r\n  };\r\n};\r\n\r\nconst isPointInsideBBox = function (bbox, x, y) {\r\n  return x >= bbox.x &&\r\n    x <= bbox.x + bbox.width &&\r\n    y >= bbox.y &&\r\n    y <= bbox.y + bbox.height;\r\n};\r\n\r\nconst box = function (x, y, width, height) {\r\n  if (x === null) {\r\n    x = y = width = height = 0;\r\n  }\r\n  if (y === null) {\r\n    y = x.y;\r\n    width = x.width;\r\n    height = x.height;\r\n    x = x.x;\r\n  }\r\n  return {\r\n    x,\r\n    y,\r\n    width,\r\n    w: width,\r\n    height,\r\n    h: height,\r\n    x2: x + width,\r\n    y2: y + height,\r\n    cx: x + width / 2,\r\n    cy: y + height / 2,\r\n    r1: Math.min(width, height) / 2,\r\n    r2: Math.max(width, height) / 2,\r\n    r0: Math.sqrt(width * width + height * height) / 2,\r\n    path: rectPath(x, y, width, height),\r\n    vb: [ x, y, width, height ].join(' '),\r\n  };\r\n};\r\n\r\nconst isBBoxIntersect = function (bbox1, bbox2) {\r\n  // @ts-ignore\r\n  bbox1 = box(bbox1);\r\n  // @ts-ignore\r\n  bbox2 = box(bbox2);\r\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\r\n};\r\n\r\nconst bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\r\n  if (!isArray(p1x)) {\r\n    p1x = [ p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y ];\r\n  }\r\n  const bbox = curveDim.apply(null, p1x);\r\n  return box(\r\n    bbox.min.x,\r\n    bbox.min.y,\r\n    bbox.max.x - bbox.min.x,\r\n    bbox.max.y - bbox.min.y,\r\n  );\r\n};\r\n\r\nconst findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n  const t1 = 1 - t;\r\n  const t13 = Math.pow(t1, 3);\r\n  const t12 = Math.pow(t1, 2);\r\n  const t2 = t * t;\r\n  const t3 = t2 * t;\r\n  const x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\r\n  const y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\r\n  const mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\r\n  const my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\r\n  const nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\r\n  const ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\r\n  const ax = t1 * p1x + t * c1x;\r\n  const ay = t1 * p1y + t * c1y;\r\n  const cx = t1 * c2x + t * p2x;\r\n  const cy = t1 * c2y + t * p2y;\r\n  const alpha = (90 - Math.atan2(mx - nx, my - ny) * 180 / Math.PI);\r\n  // (mx > nx || my < ny) && (alpha += 180);\r\n  return {\r\n    x,\r\n    y,\r\n    m: {\r\n      x: mx,\r\n      y: my,\r\n    },\r\n    n: {\r\n      x: nx,\r\n      y: ny,\r\n    },\r\n    start: {\r\n      x: ax,\r\n      y: ay,\r\n    },\r\n    end: {\r\n      x: cx,\r\n      y: cy,\r\n    },\r\n    alpha,\r\n  };\r\n};\r\n\r\nconst interHelper = function (bez1, bez2, justCount) {\r\n  // @ts-ignore\r\n  const bbox1 = bezierBBox(bez1);\r\n  // @ts-ignore\r\n  const bbox2 = bezierBBox(bez2);\r\n  if (!isBBoxIntersect(bbox1, bbox2)) {\r\n    return justCount ? 0 : [];\r\n  }\r\n  const l1 = bezlen.apply(0, bez1);\r\n  const l2 = bezlen.apply(0, bez2);\r\n  const n1 = ~~(l1 / 8);\r\n  const n2 = ~~(l2 / 8);\r\n  const dots1 = [];\r\n  const dots2 = [];\r\n  const xy = {};\r\n  let res = justCount ? 0 : [];\r\n  for (let i = 0; i < n1 + 1; i++) {\r\n    const d = findDotsAtSegment.apply(0, bez1.concat(i / n1));\r\n    dots1.push({\r\n      x: d.x,\r\n      y: d.y,\r\n      t: i / n1,\r\n    });\r\n  }\r\n  for (let i = 0; i < n2 + 1; i++) {\r\n    const d = findDotsAtSegment.apply(0, bez2.concat(i / n2));\r\n    dots2.push({\r\n      x: d.x,\r\n      y: d.y,\r\n      t: i / n2,\r\n    });\r\n  }\r\n  for (let i = 0; i < n1; i++) {\r\n    for (let j = 0; j < n2; j++) {\r\n      const di = dots1[i];\r\n      const di1 = dots1[i + 1];\r\n      const dj = dots2[j];\r\n      const dj1 = dots2[j + 1];\r\n      const ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';\r\n      const cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';\r\n      const is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n      if (is) {\r\n        if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {\r\n          continue;\r\n        }\r\n        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n        const t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);\r\n        const t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\r\n          if (justCount) {\r\n            // @ts-ignore\r\n            res++;\r\n          } else {\r\n            // @ts-ignore\r\n            res.push({\r\n              x: is.x,\r\n              y: is.y,\r\n              t1,\r\n              t2,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return res;\r\n};\r\n\r\nconst interPathHelper = function (path1, path2, justCount) {\r\n  // @ts-ignore\r\n  path1 = path2Curve(path1);\r\n  // @ts-ignore\r\n  path2 = path2Curve(path2);\r\n  let x1;\r\n  let y1;\r\n  let x2;\r\n  let y2;\r\n  let x1m;\r\n  let y1m;\r\n  let x2m;\r\n  let y2m;\r\n  let bez1;\r\n  let bez2;\r\n  let res = justCount ? 0 : [];\r\n  for (let i = 0, ii = path1.length; i < ii; i++) {\r\n    const pi = path1[i];\r\n    if (pi[0] === 'M') {\r\n      x1 = x1m = pi[1];\r\n      y1 = y1m = pi[2];\r\n    } else {\r\n      if (pi[0] === 'C') {\r\n        bez1 = [ x1, y1 ].concat(pi.slice(1));\r\n        x1 = bez1[6];\r\n        y1 = bez1[7];\r\n      } else {\r\n        bez1 = [ x1, y1, x1, y1, x1m, y1m, x1m, y1m ];\r\n        x1 = x1m;\r\n        y1 = y1m;\r\n      }\r\n      for (let j = 0, jj = path2.length; j < jj; j++) {\r\n        const pj = path2[j];\r\n        if (pj[0] === 'M') {\r\n          x2 = x2m = pj[1];\r\n          y2 = y2m = pj[2];\r\n        } else {\r\n          if (pj[0] === 'C') {\r\n            bez2 = [ x2, y2 ].concat(pj.slice(1));\r\n            x2 = bez2[6];\r\n            y2 = bez2[7];\r\n          } else {\r\n            bez2 = [ x2, y2, x2, y2, x2m, y2m, x2m, y2m ];\r\n            x2 = x2m;\r\n            y2 = y2m;\r\n          }\r\n          const intr = interHelper(bez1, bez2, justCount);\r\n          if (justCount) {\r\n            // @ts-ignore\r\n            res += intr;\r\n          } else {\r\n            // @ts-ignore\r\n            for (let k = 0, kk = intr.length; k < kk; k++) {\r\n              intr[k].segment1 = i;\r\n              intr[k].segment2 = j;\r\n              intr[k].bez1 = bez1;\r\n              intr[k].bez2 = bez2;\r\n            }\r\n            // @ts-ignore\r\n            res = res.concat(intr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return res;\r\n};\r\n\r\nexport default function pathIntersection(path1, path2) {\r\n  // @ts-ignore\r\n  return interPathHelper(path1, path2);\r\n}\r\n", "import parsePathString from './parse-path-string';\r\nconst REGEX_MD = /[a-z]/;\r\n\r\nfunction toSymmetry(p, c) { // 点对称\r\n  return [\r\n    c[0] + (c[0] - p[0]),\r\n    c[1] + (c[1] - p[1]),\r\n  ];\r\n}\r\n\r\nexport default function pathToAbsolute(pathString: string) {\r\n  const pathArray = parsePathString(pathString);\r\n\r\n  if (!pathArray || !pathArray.length) {\r\n    return [\r\n      [ 'M', 0, 0 ],\r\n    ];\r\n  }\r\n  let needProcess = false; // 如果存在小写的命令或者 V,H,T,S 则需要处理\r\n  for (let i = 0; i < pathArray.length; i++) {\r\n    const cmd = pathArray[i][0];\r\n    // 如果存在相对位置的命令，则中断返回\r\n    if (REGEX_MD.test(cmd) || [ 'V', 'H', 'T', 'S' ].indexOf(cmd) >= 0) {\r\n      needProcess = true;\r\n      break;\r\n    }\r\n  }\r\n  // 如果不存在相对命令，则直接返回\r\n  // 如果在业务上都写绝对路径，这种方式最快，仅做了一次检测\r\n  if (!needProcess) {\r\n    return pathArray;\r\n  }\r\n\r\n  const res = [];\r\n  let x = 0;\r\n  let y = 0;\r\n  let mx = 0;\r\n  let my = 0;\r\n  let start = 0;\r\n  let pa0;\r\n  let dots;\r\n  const first = pathArray[0];\r\n  if (first[0] === 'M' || first[0] === 'm') {\r\n    x = +first[1];\r\n    y = +first[2];\r\n    mx = x;\r\n    my = y;\r\n    start++;\r\n    res[0] = [ 'M', x, y ];\r\n  }\r\n\r\n  for (let i = start, ii = pathArray.length; i < ii; i++) {\r\n    const pa = pathArray[i];\r\n    const preParams = res[i - 1]; // 取前一个已经处理后的节点，否则会出现问题\r\n    let r = [];\r\n    const cmd = pa[0];\r\n    const upCmd = cmd.toUpperCase();\r\n    if (cmd !== upCmd) {\r\n      r[0] = upCmd;\r\n      switch (upCmd) {\r\n        case 'A':\r\n          r[1] = pa[1];\r\n          r[2] = pa[2];\r\n          r[3] = pa[3];\r\n          r[4] = pa[4];\r\n          r[5] = pa[5];\r\n          r[6] = +pa[6] + x;\r\n          r[7] = +pa[7] + y;\r\n          break;\r\n        case 'V':\r\n          r[1] = +pa[1] + y;\r\n          break;\r\n        case 'H':\r\n          r[1] = +pa[1] + x;\r\n          break;\r\n        case 'M':\r\n          mx = +pa[1] + x;\r\n          my = +pa[2] + y;\r\n          r[1] = mx;\r\n          r[2] = my;\r\n          break; // for lint\r\n        default:\r\n          for (let j = 1, jj = pa.length; j < jj; j++) {\r\n            r[j] = +pa[j] + ((j % 2) ? x : y);\r\n          }\r\n      }\r\n    } else { // 如果本来已经大写，则不处理\r\n      r = pathArray[i];\r\n    }\r\n    // 需要在外面统一做，同时处理 V,H,S,T 等特殊指令\r\n    switch (upCmd) {\r\n      case 'Z':\r\n        x = +mx;\r\n        y = +my;\r\n        break;\r\n      case 'H':\r\n        x = r[1];\r\n        r = [ 'L', x, y ];\r\n        break;\r\n      case 'V':\r\n        y = r[1];\r\n        r = [ 'L', x, y ];\r\n        break;\r\n      case 'T':\r\n        x = r[1];\r\n        y = r[2];\r\n        // 以 x, y 为中心的，上一个控制点的对称点\r\n        // 需要假设上一个节点的命令为 Q\r\n        const symetricT = toSymmetry([ preParams[1], preParams[2] ], [ preParams[3], preParams[4] ]);\r\n        r = [ 'Q', symetricT[0], symetricT[1], x, y ];\r\n        break;\r\n      case 'S':\r\n        x = r[r.length - 2];\r\n        y = r[r.length - 1];\r\n        // 以 x,y 为中心，取上一个控制点，\r\n        // 需要假设上一个线段为 C 或者 S\r\n        const length = preParams.length;\r\n        const symetricS = toSymmetry(\r\n          [ preParams[length - 4], preParams[length - 3] ],\r\n          [ preParams[length - 2], preParams[length - 1] ]);\r\n        r = [ 'C', symetricS[0], symetricS[1], r[1], r[2], x, y ];\r\n        break;\r\n      case 'M':\r\n        mx = r[r.length - 2];\r\n        my = r[r.length - 1];\r\n        break; // for lint\r\n      default:\r\n        x = r[r.length - 2];\r\n        y = r[r.length - 1];\r\n    }\r\n    res.push(r);\r\n  }\r\n\r\n  return res;\r\n}\r\n", "const TAU = Math.PI * 2\r\n\r\nconst mapToEllipse = ({ x, y }: { x: number, y: number }, rx: number, ry: number, cosphi: number, sinphi: number, centerx: number, centery: number) => {\r\n  x *= rx\r\n  y *= ry\r\n\r\n  const xp = cosphi * x - sinphi * y\r\n  const yp = sinphi * x + cosphi * y\r\n\r\n  return {\r\n    x: xp + centerx,\r\n    y: yp + centery\r\n  }\r\n}\r\n\r\nconst approxUnitArc = (ang1: number, ang2: number) => {\r\n  // If 90 degree circular arc, use a constant\r\n  // as derived from http://spencermortensen.com/articles/bezier-circle\r\n  const a = ang2 === 1.5707963267948966\r\n    ? 0.551915024494\r\n    : ang2 === -1.5707963267948966\r\n      ? -0.551915024494\r\n      : 4 / 3 * Math.tan(ang2 / 4)\r\n\r\n  const x1 = Math.cos(ang1)\r\n  const y1 = Math.sin(ang1)\r\n  const x2 = Math.cos(ang1 + ang2)\r\n  const y2 = Math.sin(ang1 + ang2)\r\n\r\n  return [\r\n    {\r\n      x: x1 - y1 * a,\r\n      y: y1 + x1 * a\r\n    },\r\n    {\r\n      x: x2 + y2 * a,\r\n      y: y2 - x2 * a\r\n    },\r\n    {\r\n      x: x2,\r\n      y: y2\r\n    }\r\n  ]\r\n}\r\n\r\nconst vectorAngle = (ux: number, uy: number, vx: number, vy: number) => {\r\n  const sign = (ux * vy - uy * vx < 0) ? -1 : 1\r\n\r\n  let dot = ux * vx + uy * vy\r\n\r\n  if (dot > 1) {\r\n    dot = 1\r\n  }\r\n\r\n  if (dot < -1) {\r\n    dot = -1\r\n  }\r\n\r\n  return sign * Math.acos(dot)\r\n}\r\n\r\nconst getArcCenter = (\r\n  px: any,\r\n  py: any,\r\n  cx: any,\r\n  cy: any,\r\n  rx: number,\r\n  ry: number,\r\n  largeArcFlag: number,\r\n  sweepFlag: number,\r\n  sinphi: number,\r\n  cosphi: number,\r\n  pxp: number,\r\n  pyp: number\r\n) => {\r\n  const rxsq = Math.pow(rx, 2)\r\n  const rysq = Math.pow(ry, 2)\r\n  const pxpsq = Math.pow(pxp, 2)\r\n  const pypsq = Math.pow(pyp, 2)\r\n\r\n  let radicant = (rxsq * rysq) - (rxsq * pypsq) - (rysq * pxpsq)\r\n\r\n  if (radicant < 0) {\r\n    radicant = 0\r\n  }\r\n\r\n  radicant /= (rxsq * pypsq) + (rysq * pxpsq)\r\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1)\r\n\r\n  const centerxp = radicant * rx / ry * pyp\r\n  const centeryp = radicant * -ry / rx * pxp\r\n\r\n  const centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2\r\n  const centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2\r\n\r\n  const vx1 = (pxp - centerxp) / rx\r\n  const vy1 = (pyp - centeryp) / ry\r\n  const vx2 = (-pxp - centerxp) / rx\r\n  const vy2 = (-pyp - centeryp) / ry\r\n\r\n  let ang1 = vectorAngle(1, 0, vx1, vy1)\r\n  let ang2 = vectorAngle(vx1, vy1, vx2, vy2)\r\n\r\n  if (sweepFlag === 0 && ang2 > 0) {\r\n    ang2 -= TAU\r\n  }\r\n\r\n  if (sweepFlag === 1 && ang2 < 0) {\r\n    ang2 += TAU\r\n  }\r\n\r\n  return [ centerx, centery, ang1, ang2 ]\r\n}\r\n\r\nconst arcToBezier = ({\r\n  px,\r\n  py,\r\n  cx,\r\n  cy,\r\n  rx,\r\n  ry,\r\n  xAxisRotation = 0,\r\n  largeArcFlag = 0,\r\n  sweepFlag = 0\r\n}) => {\r\n  const curves = []\r\n\r\n  if (rx === 0 || ry === 0) {\r\n    return [{ x1: 0, y1: 0, x2: 0, y2: 0, x: cx, y: cy }];\r\n  }\r\n\r\n  const sinphi = Math.sin(xAxisRotation * TAU / 360)\r\n  const cosphi = Math.cos(xAxisRotation * TAU / 360)\r\n\r\n  const pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2\r\n  const pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2\r\n\r\n  if (pxp === 0 && pyp === 0) {\r\n    return [{ x1: 0, y1: 0, x2: 0, y2: 0, x: cx, y: cy }];\r\n  }\r\n\r\n  rx = Math.abs(rx)\r\n  ry = Math.abs(ry)\r\n\r\n  const lambda =\r\n    Math.pow(pxp, 2) / Math.pow(rx, 2) +\r\n    Math.pow(pyp, 2) / Math.pow(ry, 2)\r\n\r\n  if (lambda > 1) {\r\n    rx *= Math.sqrt(lambda)\r\n    ry *= Math.sqrt(lambda)\r\n  }\r\n\r\n  let [ centerx, centery, ang1, ang2 ] = getArcCenter(\r\n    px,\r\n    py,\r\n    cx,\r\n    cy,\r\n    rx,\r\n    ry,\r\n    largeArcFlag,\r\n    sweepFlag,\r\n    sinphi,\r\n    cosphi,\r\n    pxp,\r\n    pyp\r\n  )\r\n\r\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\r\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\r\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\r\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\r\n  let ratio = Math.abs(ang2) / (TAU / 4)\r\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\r\n    ratio = 1.0\r\n  }\r\n\r\n  const segments = Math.max(Math.ceil(ratio), 1)\r\n\r\n  ang2 /= segments\r\n\r\n  for (let i = 0; i < segments; i++) {\r\n    curves.push(approxUnitArc(ang1, ang2))\r\n    ang1 += ang2\r\n  }\r\n\r\n  return curves.map(curve => {\r\n    const { x: x1, y: y1 } = mapToEllipse(curve[ 0 ], rx, ry, cosphi, sinphi, centerx, centery)\r\n    const { x: x2, y: y2 } = mapToEllipse(curve[ 1 ], rx, ry, cosphi, sinphi, centerx, centery)\r\n    const { x, y } = mapToEllipse(curve[ 2 ], rx, ry, cosphi, sinphi, centerx, centery)\r\n\r\n    return { x1, y1, x2, y2, x, y }\r\n  })\r\n}\r\n\r\nexport function arcToCubic(x1: number, y1: number, rx: number, ry: number, angle: number, LAF: number, SF: number, x2: number, y2: number) {\r\n  const curves = arcToBezier({\r\n    px: x1,\r\n    py: y1,\r\n    cx: x2,\r\n    cy: y2,\r\n    rx,\r\n    ry,\r\n    xAxisRotation: angle,\r\n    largeArcFlag: LAF,\r\n    sweepFlag: SF,\r\n  });\r\n\r\n  return curves.reduce((prev, cur) => {\r\n    const { x1, y1, x2, y2, x, y } = cur;\r\n    prev.push(x1, y1, x2, y2, x, y);\r\n    return prev;\r\n  }, [] as number[]);\r\n}\r\n", "import { mod, toRadian } from '@antv/util';\r\n\r\n// 向量长度\r\nfunction vMag(v) {\r\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n}\r\n\r\n// u.v/|u||v|，计算夹角的余弦值\r\nfunction vRatio(u, v) {\r\n  // 当存在一个向量的长度为 0 时，夹角也为 0，即夹角的余弦值为 1\r\n  return vMag(u) * vMag(v) ? (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v)) : 1;\r\n}\r\n\r\n// 向量角度\r\nfunction vAngle(u, v) {\r\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\r\n}\r\n\r\n/**\r\n * 判断两个点是否重合，点坐标的格式为 [x, y]\r\n * @param {Array} point1 第一个点\r\n * @param {Array} point2 第二个点\r\n */\r\nexport function isSamePoint(point1, point2) {\r\n  return point1[0] === point2[0] && point1[1] === point2[1];\r\n}\r\n\r\n// A 0:rx 1:ry 2:x-axis-rotation 3:large-arc-flag 4:sweep-flag 5: x 6: y\r\nexport default function getArcParams(startPoint, params) {\r\n  let rx = params[1];\r\n  let ry = params[2];\r\n  const xRotation = mod(toRadian(params[3]), Math.PI * 2);\r\n  const arcFlag = params[4];\r\n  const sweepFlag = params[5];\r\n  // 弧形起点坐标\r\n  const x1 = startPoint[0];\r\n  const y1 = startPoint[1];\r\n  // 弧形终点坐标\r\n  const x2 = params[6];\r\n  const y2 = params[7];\r\n  const xp = (Math.cos(xRotation) * (x1 - x2)) / 2.0 + (Math.sin(xRotation) * (y1 - y2)) / 2.0;\r\n  const yp = (-1 * Math.sin(xRotation) * (x1 - x2)) / 2.0 + (Math.cos(xRotation) * (y1 - y2)) / 2.0;\r\n  const lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\r\n\r\n  if (lambda > 1) {\r\n    rx *= Math.sqrt(lambda);\r\n    ry *= Math.sqrt(lambda);\r\n  }\r\n  const diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);\r\n\r\n  let f = diff ? Math.sqrt((rx * rx * (ry * ry) - diff) / diff) : 1;\r\n\r\n  if (arcFlag === sweepFlag) {\r\n    f *= -1;\r\n  }\r\n  if (isNaN(f)) {\r\n    f = 0;\r\n  }\r\n\r\n  // 旋转前的起点坐标，且当长半轴和短半轴的长度为 0 时，坐标按 (0, 0) 处理\r\n  const cxp = ry ? (f * rx * yp) / ry : 0;\r\n  const cyp = rx ? (f * -ry * xp) / rx : 0;\r\n\r\n  // 椭圆圆心坐标\r\n  const cx = (x1 + x2) / 2.0 + Math.cos(xRotation) * cxp - Math.sin(xRotation) * cyp;\r\n  const cy = (y1 + y2) / 2.0 + Math.sin(xRotation) * cxp + Math.cos(xRotation) * cyp;\r\n\r\n  // 起始点的单位向量\r\n  const u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\r\n  // 终止点的单位向量\r\n  const v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\r\n  // 计算起始点和圆心的连线，与 x 轴正方向的夹角\r\n  const theta = vAngle([ 1, 0 ], u);\r\n\r\n  // 计算圆弧起始点和终止点与椭圆圆心连线的夹角\r\n  let dTheta = vAngle(u, v);\r\n\r\n  if (vRatio(u, v) <= -1) {\r\n    dTheta = Math.PI;\r\n  }\r\n  if (vRatio(u, v) >= 1) {\r\n    dTheta = 0;\r\n  }\r\n  if (sweepFlag === 0 && dTheta > 0) {\r\n    dTheta = dTheta - 2 * Math.PI;\r\n  }\r\n  if (sweepFlag === 1 && dTheta < 0) {\r\n    dTheta = dTheta + 2 * Math.PI;\r\n  }\r\n  return {\r\n    cx,\r\n    cy,\r\n    // 弧形的起点和终点相同时，长轴和短轴的长度按 0 处理\r\n    rx: isSamePoint(startPoint, [ x2, y2 ]) ? 0 : rx,\r\n    ry: isSamePoint(startPoint, [ x2, y2 ]) ? 0 : ry,\r\n    startAngle: theta,\r\n    endAngle: theta + dTheta,\r\n    xRotation,\r\n    arcFlag,\r\n    sweepFlag,\r\n  };\r\n}\r\n", "import getArcParams from './get-arc-params';\r\nimport { isSamePoint } from './get-arc-params';\r\nimport parsePath from './parse-path';\r\n\r\n// 点对称\r\nfunction toSymmetry(point, center) {\r\n  return [ center[0] + (center[0] - point[0]), center[1] + (center[1] - point[1]) ];\r\n}\r\n\r\nexport default function getSegments(path) {\r\n  path = parsePath(path);\r\n  const segments = [];\r\n  let currentPoint = null; // 当前图形\r\n  let nextParams = null; // 下一节点的 path 参数\r\n  let startMovePoint = null; // 开始 M 的点，可能会有多个\r\n  let lastStartMovePointIndex = 0; // 最近一个开始点 M 的索引\r\n  const count = path.length;\r\n  for (let i = 0; i < count; i++) {\r\n    const params = path[i];\r\n    nextParams = path[i + 1];\r\n    const command = params[0];\r\n    // 数学定义上的参数，便于后面的计算\r\n    const segment = {\r\n      command,\r\n      prePoint: currentPoint,\r\n      params,\r\n      startTangent: null,\r\n      endTangent: null,\r\n    };\r\n    switch (command) {\r\n      case 'M':\r\n        startMovePoint = [ params[1], params[2] ];\r\n        lastStartMovePointIndex = i;\r\n        break;\r\n      case 'A':\r\n        const arcParams = getArcParams(currentPoint, params);\r\n        segment['arcParams'] = arcParams;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (command === 'Z') {\r\n      // 有了 Z 后，当前节点从开始 M 的点开始\r\n      currentPoint = startMovePoint;\r\n      // 如果当前点的命令为 Z，相当于当前点为最近一个 M 点，则下一个点直接指向最近一个 M 点的下一个点\r\n      nextParams = path[lastStartMovePointIndex + 1];\r\n    } else {\r\n      const len = params.length;\r\n      currentPoint = [ params[len - 2], params[len - 1] ];\r\n    }\r\n    if (nextParams && nextParams[0] === 'Z') {\r\n      // 如果下一个点的命令为 Z，则下一个点直接指向最近一个 M 点\r\n      nextParams = path[lastStartMovePointIndex];\r\n      if (segments[lastStartMovePointIndex]) {\r\n        // 如果下一个点的命令为 Z，则最近一个 M 点的前一个点为当前点\r\n        segments[lastStartMovePointIndex].prePoint = currentPoint;\r\n      }\r\n    }\r\n    segment['currentPoint'] = currentPoint;\r\n    // 如果当前点与最近一个 M 点相同，则最近一个 M 点的前一个点为当前点的前一个点\r\n    if (\r\n      segments[lastStartMovePointIndex] &&\r\n      isSamePoint(currentPoint, segments[lastStartMovePointIndex].currentPoint)\r\n    ) {\r\n      segments[lastStartMovePointIndex].prePoint = segment.prePoint;\r\n    }\r\n    const nextPoint = nextParams ? [ nextParams[nextParams.length - 2], nextParams[nextParams.length - 1] ] : null;\r\n    segment['nextPoint'] = nextPoint;\r\n    // Add startTangent and endTangent\r\n    const { prePoint } = segment;\r\n    if ([ 'L', 'H', 'V' ].includes(command)) {\r\n      segment.startTangent = [ prePoint[0] - currentPoint[0], prePoint[1] - currentPoint[1] ];\r\n      segment.endTangent = [ currentPoint[0] - prePoint[0], currentPoint[1] - prePoint[1] ];\r\n    } else if (command === 'Q') {\r\n      // 二次贝塞尔曲线只有一个控制点\r\n      const cp = [ params[1], params[2] ];\r\n      // 二次贝塞尔曲线的终点为 currentPoint\r\n      segment.startTangent = [ prePoint[0] - cp[0], prePoint[1] - cp[1] ];\r\n      segment.endTangent = [ currentPoint[0] - cp[0], currentPoint[1] - cp[1] ];\r\n    } else if (command === 'T') {\r\n      const preSegment = segments[i - 1];\r\n      const cp = toSymmetry(preSegment.currentPoint, prePoint);\r\n      if (preSegment.command === 'Q') {\r\n        segment.command = 'Q';\r\n        segment.startTangent = [ prePoint[0] - cp[0], prePoint[1] - cp[1] ];\r\n        segment.endTangent = [ currentPoint[0] - cp[0], currentPoint[1] - cp[1] ];\r\n      } else {\r\n        segment.command = 'TL';\r\n        segment.startTangent = [ prePoint[0] - currentPoint[0], prePoint[1] - currentPoint[1] ];\r\n        segment.endTangent = [ currentPoint[0] - prePoint[0], currentPoint[1] - prePoint[1] ];\r\n      }\r\n    } else if (command === 'C') {\r\n      // 三次贝塞尔曲线有两个控制点\r\n      const cp1 = [ params[1], params[2] ];\r\n      const cp2 = [ params[3], params[4] ];\r\n      segment.startTangent = [ prePoint[0] - cp1[0], prePoint[1] - cp1[1] ];\r\n      segment.endTangent = [ currentPoint[0] - cp2[0], currentPoint[1] - cp2[1] ];\r\n\r\n      // horizontal line, eg. ['C', 100, 100, 100, 100, 200, 200]\r\n      if (segment.startTangent[0] === 0 && segment.startTangent[1] === 0) {\r\n        segment.startTangent = [cp1[0] - cp2[0], cp1[1] - cp2[1]];\r\n      }\r\n      if (segment.endTangent[0] === 0 && segment.endTangent[1] === 0) {\r\n        segment.endTangent = [cp2[0] - cp1[0], cp2[1] - cp1[1]];\r\n      }\r\n    } else if (command === 'S') {\r\n      const preSegment = segments[i - 1];\r\n      const cp1 = toSymmetry(preSegment.currentPoint, prePoint);\r\n      const cp2 = [ params[1], params[2] ];\r\n      if (preSegment.command === 'C') {\r\n        segment.command = 'C'; // 将 S 命令变换为 C 命令\r\n        segment.startTangent = [ prePoint[0] - cp1[0], prePoint[1] - cp1[1] ];\r\n        segment.endTangent = [ currentPoint[0] - cp2[0], currentPoint[1] - cp2[1] ];\r\n      } else {\r\n        segment.command = 'SQ'; // 将 S 命令变换为 SQ 命令\r\n        segment.startTangent = [ prePoint[0] - cp2[0], prePoint[1] - cp2[1] ];\r\n        segment.endTangent = [ currentPoint[0] - cp2[0], currentPoint[1] - cp2[1] ];\r\n      }\r\n    } else if (command === 'A') {\r\n      let d = 0.001;\r\n      const {\r\n        cx = 0,\r\n        cy = 0,\r\n        rx = 0,\r\n        ry = 0,\r\n        sweepFlag = 0,\r\n        startAngle = 0,\r\n        endAngle = 0,\r\n      } = segment['arcParams'] || {};\r\n      if (sweepFlag === 0) {\r\n        d *= -1;\r\n      }\r\n      const dx1 = rx * Math.cos(startAngle - d) + cx;\r\n      const dy1 = ry * Math.sin(startAngle - d) + cy;\r\n      segment.startTangent = [ dx1 - startMovePoint[0], dy1 - startMovePoint[1] ];\r\n      const dx2 = rx * Math.cos(startAngle + endAngle + d) + cx;\r\n      const dy2 = ry * Math.sin(startAngle + endAngle - d) + cy;\r\n      segment.endTangent = [ prePoint[0] - dx2, prePoint[1] - dy2 ];\r\n    }\r\n    segments.push(segment);\r\n  }\r\n  return segments;\r\n}\r\n", "type Point = {\r\n  /**\r\n   * x 值\r\n   * @type {number}\r\n   */\r\n  x: number;\r\n  /**\r\n   * y 值\r\n   * @type {number}\r\n   */\r\n  y: number;\r\n};\r\n\r\nconst isBetween = (value: number, min: number, max: number) => value >= min && value <= max;\r\n\r\n\r\nexport default function getLineIntersect(p0: Point, p1: Point, p2: Point, p3: Point): Point | null {\r\n  const tolerance = 0.001;\r\n  const E: Point = {\r\n    x: p2.x - p0.x,\r\n    y: p2.y - p0.y,\r\n  };\r\n  const D0: Point = {\r\n    x: p1.x - p0.x,\r\n    y: p1.y - p0.y,\r\n  };\r\n  const D1: Point = {\r\n    x: p3.x - p2.x,\r\n    y: p3.y - p2.y,\r\n  };\r\n  const kross: number = D0.x * D1.y - D0.y * D1.x;\r\n  const sqrKross: number = kross * kross;\r\n  const sqrLen0: number = D0.x * D0.x + D0.y * D0.y;\r\n  const sqrLen1: number = D1.x * D1.x + D1.y * D1.y;\r\n  let point: Point | null = null;\r\n  if (sqrKross > tolerance * sqrLen0 * sqrLen1) {\r\n    const s = (E.x * D1.y - E.y * D1.x) / kross;\r\n    const t = (E.x * D0.y - E.y * D0.x) / kross;\r\n    if (isBetween(s, 0, 1) && isBetween(t, 0, 1)) {\r\n      point = {\r\n        x: p0.x + s * D0.x,\r\n        y: p0.y + s * D0.y,\r\n      };\r\n    }\r\n  }\r\n  return point;\r\n};", "/**\r\n * @fileoverview 判断点是否在多边形内\r\n * @author dxq613@gmail.com\r\n */\r\n\r\n// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526\r\nconst tolerance = 1e-6;\r\n// 三态函数，判断两个double在eps精度下的大小关系\r\nfunction dcmp(x) {\r\n  if (Math.abs(x) < tolerance) {\r\n    return 0;\r\n  }\r\n\r\n  return x < 0 ? -1 : 1;\r\n}\r\n\r\n// 判断点Q是否在p1和p2的线段上\r\nfunction onSegment(p1, p2, q) {\r\n  if (\r\n    (q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) &&\r\n    Math.min(p1[0], p2[0]) <= q[0] &&\r\n    q[0] <= Math.max(p1[0], p2[0]) &&\r\n    Math.min(p1[1], p2[1]) <= q[1] &&\r\n    q[1] <= Math.max(p1[1], p2[1])\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// 判断点P在多边形内-射线法\r\nexport default function isInPolygon(points, x, y) {\r\n  let isHit = false;\r\n  const n = points.length;\r\n  if (n <= 2) {\r\n    // svg 中点小于 3 个时，不显示，也无法被拾取\r\n    return false;\r\n  }\r\n  for (let i = 0; i < n; i++) {\r\n    const p1 = points[i];\r\n    const p2 = points[(i + 1) % n];\r\n    if (onSegment(p1, p2, [x, y])) {\r\n      // 点在多边形一条边上\r\n      return true;\r\n    }\r\n    // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])\r\n    // 后一个判断被测点 在 射线与边交点 的左边\r\n    if (\r\n      dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 &&\r\n      dcmp(x - ((y - p1[1]) * (p1[0] - p2[0])) / (p1[1] - p2[1]) - p1[0]) < 0\r\n    ) {\r\n      isHit = !isHit;\r\n    }\r\n  }\r\n  return isHit;\r\n}\r\n", "\r\nimport isPointInPolygon from './point-in-polygon';\r\nimport getLineIntersect from './get-line-intersect';\r\nimport {each} from '@antv/util';\r\n\r\nfunction parseToLines(points) {\r\n  const lines = [];\r\n  const count = points.length;\r\n  for(let i = 0; i < count - 1; i++) {\r\n    const point = points[i];\r\n    const next = points[i + 1];\r\n    lines.push({\r\n      from: {\r\n        x: point[0],\r\n        y: point[1]\r\n      },\r\n      to: {\r\n        x: next[0],\r\n        y: next[1]\r\n      }\r\n    });\r\n  }\r\n  if (lines.length > 1) {\r\n    const first = points[0];\r\n    const last = points[count - 1];\r\n    lines.push({\r\n      from: {\r\n        x: last[0],\r\n        y: last[1]\r\n      },\r\n      to: {\r\n        x: first[0],\r\n        y: first[1]\r\n      }\r\n    });\r\n  }\r\n  return lines;\r\n}\r\n\r\nfunction lineIntersectPolygon(lines, line) {\r\n  let isIntersect = false;\r\n  each(lines, l => {\r\n    if (getLineIntersect(l.from, l.to, line.from, line.to)) {\r\n      isIntersect = true;\r\n      return false;\r\n    }\r\n  });\r\n  return isIntersect;\r\n}\r\n\r\ntype BBox = {\r\n  minX: number;\r\n  minY: number;\r\n  maxX: number;\r\n  maxY: number;\r\n};\r\n\r\nfunction getBBox(points): BBox {\r\n  const xArr = points.map(p => p[0]);\r\n  const yArr = points.map(p => p[1]);\r\n  return {\r\n    minX: Math.min.apply(null, xArr),\r\n    maxX: Math.max.apply(null, xArr),\r\n    minY: Math.min.apply(null, yArr),\r\n    maxY: Math.max.apply(null, yArr)\r\n  };\r\n}\r\n\r\nfunction intersectBBox(box1:BBox, box2:BBox) {\r\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\r\n}\r\n\r\nexport default function isPolygonsIntersect(points1, points2) {\r\n  // 空数组，或者一个点返回 false\r\n  if (points1.length < 2 || points2.length < 2) {\r\n    return false;\r\n  }\r\n\r\n  const bbox1 = getBBox(points1);\r\n  const bbox2 = getBBox(points2);\r\n  // 判定包围盒是否相交，比判定点是否在多边形内要快的多，可以筛选掉大多数情况\r\n  if (!intersectBBox(bbox1, bbox2)) {\r\n    return false;\r\n  }\r\n  \r\n  let isIn = false;\r\n  // 判定点是否在多边形内部，一旦有一个点在另一个多边形内，则返回\r\n  each(points2, point => {\r\n    if (isPointInPolygon(points1, point[0], point[1])) {\r\n      isIn = true;\r\n      return false;\r\n    }\r\n  });\r\n  if (isIn) {\r\n    return true;\r\n  }\r\n  // 两个多边形都需要判定\r\n  each(points1, point => {\r\n    if (isPointInPolygon(points2, point[0], point[1])) {\r\n      isIn = true;\r\n      return false;\r\n    }\r\n  });\r\n  if (isIn) {\r\n    return true;\r\n  }\r\n\r\n  const lines1 = parseToLines(points1);\r\n  const lines2 = parseToLines(points2);\r\n  let isIntersect = false;\r\n  each(lines2, line => {\r\n    if (lineIntersectPolygon(lines1, line)) {\r\n      isIntersect = true;\r\n      return false;\r\n    }\r\n  });\r\n  return isIntersect;\r\n}", "import { each, isArray } from '@antv/util';\r\nimport { PathCommand } from '../types';\r\n\r\nconst SPACES =\r\n  '\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029';\r\nconst PATH_COMMAND = new RegExp(\r\n  `([a-z])[${SPACES},]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[${SPACES}]*,?[${SPACES}]*)+)`,\r\n  'ig'\r\n);\r\nconst PATH_VALUES = new RegExp(`(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[${SPACES}]*,?[${SPACES}]*`, 'ig');\r\n// Parse given path string into an array of arrays of path segments\r\nconst parsePathString = function (pathString: string): PathCommand[] {\r\n  if (!pathString) {\r\n    return null;\r\n  }\r\n\r\n  if (isArray(pathString)) {\r\n    return pathString as unknown as PathCommand[];\r\n  }\r\n  const paramCounts = {\r\n    a: 7,\r\n    c: 6,\r\n    o: 2,\r\n    h: 1,\r\n    l: 2,\r\n    m: 2,\r\n    r: 4,\r\n    q: 4,\r\n    s: 4,\r\n    t: 2,\r\n    v: 1,\r\n    u: 3,\r\n    z: 0,\r\n  };\r\n  const data = [];\r\n\r\n  String(pathString).replace(PATH_COMMAND, (a, b, c) => {\r\n    const params = [];\r\n    let name = b.toLowerCase();\r\n    c.replace(PATH_VALUES, (a, b) => {\r\n      b && params.push(+b);\r\n    });\r\n    if (name === 'm' && params.length > 2) {\r\n      data.push([b].concat(params.splice(0, 2)));\r\n      name = 'l';\r\n      b = b === 'm' ? 'l' : 'L';\r\n    }\r\n    if (name === 'o' && params.length === 1) {\r\n      data.push([b, params[0]]);\r\n    }\r\n    if (name === 'r') {\r\n      data.push([b].concat(params));\r\n    } else {\r\n      while (params.length >= paramCounts[name]) {\r\n        data.push([b].concat(params.splice(0, paramCounts[name])));\r\n        if (!paramCounts[name]) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return pathString;\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n// http://schepers.cc/getting-to-the-point\r\nconst catmullRomToBezier = function (crp, z) {\r\n  const d = [];\r\n  // @ts-ignore\r\n  for (let i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\r\n    const p = [\r\n      {\r\n        x: +crp[i - 2],\r\n        y: +crp[i - 1],\r\n      },\r\n      {\r\n        x: +crp[i],\r\n        y: +crp[i + 1],\r\n      },\r\n      {\r\n        x: +crp[i + 2],\r\n        y: +crp[i + 3],\r\n      },\r\n      {\r\n        x: +crp[i + 4],\r\n        y: +crp[i + 5],\r\n      },\r\n    ];\r\n    if (z) {\r\n      if (!i) {\r\n        p[0] = {\r\n          x: +crp[iLen - 2],\r\n          y: +crp[iLen - 1],\r\n        };\r\n      } else if (iLen - 4 === i) {\r\n        p[3] = {\r\n          x: +crp[0],\r\n          y: +crp[1],\r\n        };\r\n      } else if (iLen - 2 === i) {\r\n        p[2] = {\r\n          x: +crp[0],\r\n          y: +crp[1],\r\n        };\r\n        p[3] = {\r\n          x: +crp[2],\r\n          y: +crp[3],\r\n        };\r\n      }\r\n    } else {\r\n      if (iLen - 4 === i) {\r\n        p[3] = p[2];\r\n      } else if (!i) {\r\n        p[0] = {\r\n          x: +crp[i],\r\n          y: +crp[i + 1],\r\n        };\r\n      }\r\n    }\r\n    d.push([\r\n      'C',\r\n      (-p[0].x + 6 * p[1].x + p[2].x) / 6,\r\n      (-p[0].y + 6 * p[1].y + p[2].y) / 6,\r\n      (p[1].x + 6 * p[2].x - p[3].x) / 6,\r\n      (p[1].y + 6 * p[2].y - p[3].y) / 6,\r\n      p[2].x,\r\n      p[2].y,\r\n    ]);\r\n  }\r\n\r\n  return d;\r\n};\r\n\r\nconst ellipsePath = function (x, y, rx, ry, a?) {\r\n  let res = [];\r\n  if (a === null && ry === null) {\r\n    ry = rx;\r\n  }\r\n  x = +x;\r\n  y = +y;\r\n  rx = +rx;\r\n  ry = +ry;\r\n  if (a !== null) {\r\n    const rad = Math.PI / 180;\r\n    const x1 = x + rx * Math.cos(-ry * rad);\r\n    const x2 = x + rx * Math.cos(-a * rad);\r\n    const y1 = y + rx * Math.sin(-ry * rad);\r\n    const y2 = y + rx * Math.sin(-a * rad);\r\n    res = [\r\n      ['M', x1, y1],\r\n      ['A', rx, rx, 0, +(a - ry > 180), 0, x2, y2],\r\n    ];\r\n  } else {\r\n    res = [['M', x, y], ['m', 0, -ry], ['a', rx, ry, 0, 1, 1, 0, 2 * ry], ['a', rx, ry, 0, 1, 1, 0, -2 * ry], ['z']];\r\n  }\r\n  return res;\r\n};\r\n\r\nconst pathToAbsolute = function (pathArray) {\r\n  pathArray = parsePathString(pathArray);\r\n\r\n  if (!pathArray || !pathArray.length) {\r\n    return [['M', 0, 0]];\r\n  }\r\n  let res = [];\r\n  let x = 0;\r\n  let y = 0;\r\n  let mx = 0;\r\n  let my = 0;\r\n  let start = 0;\r\n  let pa0;\r\n  let dots;\r\n  if (pathArray[0][0] === 'M') {\r\n    x = +pathArray[0][1];\r\n    y = +pathArray[0][2];\r\n    mx = x;\r\n    my = y;\r\n    start++;\r\n    res[0] = ['M', x, y];\r\n  }\r\n  const crz =\r\n    pathArray.length === 3 &&\r\n    pathArray[0][0] === 'M' &&\r\n    pathArray[1][0].toUpperCase() === 'R' &&\r\n    pathArray[2][0].toUpperCase() === 'Z';\r\n  for (let r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n    res.push((r = []));\r\n    pa = pathArray[i];\r\n    pa0 = pa[0];\r\n    if (pa0 !== pa0.toUpperCase()) {\r\n      r[0] = pa0.toUpperCase();\r\n      switch (r[0]) {\r\n        case 'A':\r\n          r[1] = pa[1];\r\n          r[2] = pa[2];\r\n          r[3] = pa[3];\r\n          r[4] = pa[4];\r\n          r[5] = pa[5];\r\n          r[6] = +pa[6] + x;\r\n          r[7] = +pa[7] + y;\r\n          break;\r\n        case 'V':\r\n          r[1] = +pa[1] + y;\r\n          break;\r\n        case 'H':\r\n          r[1] = +pa[1] + x;\r\n          break;\r\n        case 'R':\r\n          dots = [x, y].concat(pa.slice(1));\r\n          for (let j = 2, jj = dots.length; j < jj; j++) {\r\n            dots[j] = +dots[j] + x;\r\n            dots[++j] = +dots[j] + y;\r\n          }\r\n          res.pop();\r\n          res = res.concat(catmullRomToBezier(dots, crz));\r\n          break;\r\n        case 'O':\r\n          res.pop();\r\n          dots = ellipsePath(x, y, pa[1], pa[2]);\r\n          dots.push(dots[0]);\r\n          res = res.concat(dots);\r\n          break;\r\n        case 'U':\r\n          res.pop();\r\n          res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\r\n          r = ['U'].concat(res[res.length - 1].slice(-2));\r\n          break;\r\n        case 'M':\r\n          mx = +pa[1] + x;\r\n          my = +pa[2] + y;\r\n          break; // for lint\r\n        default:\r\n          for (let j = 1, jj = pa.length; j < jj; j++) {\r\n            r[j] = +pa[j] + (j % 2 ? x : y);\r\n          }\r\n      }\r\n    } else if (pa0 === 'R') {\r\n      dots = [x, y].concat(pa.slice(1));\r\n      res.pop();\r\n      res = res.concat(catmullRomToBezier(dots, crz));\r\n      r = ['R'].concat(pa.slice(-2));\r\n    } else if (pa0 === 'O') {\r\n      res.pop();\r\n      dots = ellipsePath(x, y, pa[1], pa[2]);\r\n      dots.push(dots[0]);\r\n      res = res.concat(dots);\r\n    } else if (pa0 === 'U') {\r\n      res.pop();\r\n      res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\r\n      r = ['U'].concat(res[res.length - 1].slice(-2));\r\n    } else {\r\n      for (let k = 0, kk = pa.length; k < kk; k++) {\r\n        r[k] = pa[k];\r\n      }\r\n    }\r\n    pa0 = pa0.toUpperCase();\r\n    if (pa0 !== 'O') {\r\n      switch (r[0]) {\r\n        case 'Z':\r\n          x = +mx;\r\n          y = +my;\r\n          break;\r\n        case 'H':\r\n          x = r[1];\r\n          break;\r\n        case 'V':\r\n          y = r[1];\r\n          break;\r\n        case 'M':\r\n          mx = r[r.length - 2];\r\n          my = r[r.length - 1];\r\n          break; // for lint\r\n        default:\r\n          x = r[r.length - 2];\r\n          y = r[r.length - 1];\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nconst l2c = function (x1, y1, x2, y2) {\r\n  return [x1, y1, x2, y2, x2, y2];\r\n};\r\n\r\nconst q2c = function (x1, y1, ax, ay, x2, y2) {\r\n  const _13 = 1 / 3;\r\n  const _23 = 2 / 3;\r\n  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\r\n};\r\n\r\nconst a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n  // for more information of where this math came from visit:\r\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n  if (rx === ry) {\r\n    rx += 1;\r\n  }\r\n\r\n  const _120 = (Math.PI * 120) / 180;\r\n  const rad = (Math.PI / 180) * (+angle || 0);\r\n  let res = [];\r\n  let xy;\r\n  let f1;\r\n  let f2;\r\n  let cx;\r\n  let cy;\r\n  const rotate = function (x, y, rad) {\r\n    const X = x * Math.cos(rad) - y * Math.sin(rad);\r\n    const Y = x * Math.sin(rad) + y * Math.cos(rad);\r\n    return {\r\n      x: X,\r\n      y: Y,\r\n    };\r\n  };\r\n  if (!recursive) {\r\n    xy = rotate(x1, y1, -rad);\r\n    x1 = xy.x;\r\n    y1 = xy.y;\r\n    xy = rotate(x2, y2, -rad);\r\n    x2 = xy.x;\r\n    y2 = xy.y;\r\n    if (x1 === x2 && y1 === y2) {\r\n      // 若弧的起始点和终点重叠则错开一点\r\n      x2 += 1;\r\n      y2 += 1;\r\n    }\r\n    // const cos = Math.cos(Math.PI / 180 * angle);\r\n    // const sin = Math.sin(Math.PI / 180 * angle);\r\n    const x = (x1 - x2) / 2;\r\n    const y = (y1 - y2) / 2;\r\n    let h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n    if (h > 1) {\r\n      h = Math.sqrt(h);\r\n      rx = h * rx;\r\n      ry = h * ry;\r\n    }\r\n    const rx2 = rx * rx;\r\n    const ry2 = ry * ry;\r\n    const k =\r\n      (large_arc_flag === sweep_flag ? -1 : 1) *\r\n      Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\r\n    cx = (k * rx * y) / ry + (x1 + x2) / 2;\r\n    cy = (k * -ry * x) / rx + (y1 + y2) / 2;\r\n    // @ts-ignore\r\n    f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\r\n    // @ts-ignore\r\n    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\r\n\r\n    f1 = x1 < cx ? Math.PI - f1 : f1;\r\n    f2 = x2 < cx ? Math.PI - f2 : f2;\r\n    f1 < 0 && (f1 = Math.PI * 2 + f1);\r\n    f2 < 0 && (f2 = Math.PI * 2 + f2);\r\n    if (sweep_flag && f1 > f2) {\r\n      f1 = f1 - Math.PI * 2;\r\n    }\r\n    if (!sweep_flag && f2 > f1) {\r\n      f2 = f2 - Math.PI * 2;\r\n    }\r\n  } else {\r\n    f1 = recursive[0];\r\n    f2 = recursive[1];\r\n    cx = recursive[2];\r\n    cy = recursive[3];\r\n  }\r\n  let df = f2 - f1;\r\n  if (Math.abs(df) > _120) {\r\n    const f2old = f2;\r\n    const x2old = x2;\r\n    const y2old = y2;\r\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n    x2 = cx + rx * Math.cos(f2);\r\n    y2 = cy + ry * Math.sin(f2);\r\n    res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n  }\r\n  df = f2 - f1;\r\n  const c1 = Math.cos(f1);\r\n  const s1 = Math.sin(f1);\r\n  const c2 = Math.cos(f2);\r\n  const s2 = Math.sin(f2);\r\n  const t = Math.tan(df / 4);\r\n  const hx = (4 / 3) * rx * t;\r\n  const hy = (4 / 3) * ry * t;\r\n  const m1 = [x1, y1];\r\n  const m2 = [x1 + hx * s1, y1 - hy * c1];\r\n  const m3 = [x2 + hx * s2, y2 - hy * c2];\r\n  const m4 = [x2, y2];\r\n  m2[0] = 2 * m1[0] - m2[0];\r\n  m2[1] = 2 * m1[1] - m2[1];\r\n  if (recursive) {\r\n    return [m2, m3, m4].concat(res);\r\n  }\r\n  res = [m2, m3, m4].concat(res).join().split(',');\r\n  const newres = [];\r\n  for (let i = 0, ii = res.length; i < ii; i++) {\r\n    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n  }\r\n  return newres;\r\n};\r\n\r\nconst pathToCurve = function (path, path2?) {\r\n  const p = pathToAbsolute(path);\r\n  const p2 = path2 && pathToAbsolute(path2);\r\n  const attrs = {\r\n    x: 0,\r\n    y: 0,\r\n    bx: 0,\r\n    by: 0,\r\n    X: 0,\r\n    Y: 0,\r\n    qx: null,\r\n    qy: null,\r\n  };\r\n  const attrs2 = {\r\n    x: 0,\r\n    y: 0,\r\n    bx: 0,\r\n    by: 0,\r\n    X: 0,\r\n    Y: 0,\r\n    qx: null,\r\n    qy: null,\r\n  };\r\n  const pcoms1 = []; // path commands of original path p\r\n  const pcoms2 = []; // path commands of original path p2\r\n  let pfirst = ''; // temporary holder for original path command\r\n  let pcom = ''; // holder for previous path command of original path\r\n  let ii;\r\n  const processPath = function (path, d, pcom) {\r\n    let nx;\r\n    let ny;\r\n    if (!path) {\r\n      return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\r\n    }\r\n    !(\r\n      path[0] in\r\n      {\r\n        T: 1,\r\n        Q: 1,\r\n      }\r\n    ) && (d.qx = d.qy = null);\r\n    switch (path[0]) {\r\n      case 'M':\r\n        d.X = path[1];\r\n        d.Y = path[2];\r\n        break;\r\n      case 'A':\r\n        path = ['C'].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\r\n        break;\r\n      case 'S':\r\n        if (pcom === 'C' || pcom === 'S') {\r\n          // In \"S\" case we have to take into account, if the previous command is C/S.\r\n          nx = d.x * 2 - d.bx; // And reflect the previous\r\n          ny = d.y * 2 - d.by; // command's control point relative to the current point.\r\n        } else {\r\n          // or some else or nothing\r\n          nx = d.x;\r\n          ny = d.y;\r\n        }\r\n        path = ['C', nx, ny].concat(path.slice(1));\r\n        break;\r\n      case 'T':\r\n        if (pcom === 'Q' || pcom === 'T') {\r\n          // In \"T\" case we have to take into account, if the previous command is Q/T.\r\n          d.qx = d.x * 2 - d.qx; // And make a reflection similar\r\n          d.qy = d.y * 2 - d.qy; // to case \"S\".\r\n        } else {\r\n          // or something else or nothing\r\n          d.qx = d.x;\r\n          d.qy = d.y;\r\n        }\r\n        path = ['C'].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n        break;\r\n      case 'Q':\r\n        d.qx = path[1];\r\n        d.qy = path[2];\r\n        path = ['C'].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n        break;\r\n      case 'L':\r\n        path = ['C'].concat(l2c(d.x, d.y, path[1], path[2]));\r\n        break;\r\n      case 'H':\r\n        path = ['C'].concat(l2c(d.x, d.y, path[1], d.y));\r\n        break;\r\n      case 'V':\r\n        path = ['C'].concat(l2c(d.x, d.y, d.x, path[1]));\r\n        break;\r\n      case 'Z':\r\n        path = ['C'].concat(l2c(d.x, d.y, d.X, d.Y));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return path;\r\n  };\r\n  const fixArc = function (pp, i) {\r\n    if (pp[i].length > 7) {\r\n      pp[i].shift();\r\n      const pi = pp[i];\r\n      while (pi.length) {\r\n        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\r\n        p2 && (pcoms2[i] = 'A'); // the same as above\r\n        pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\r\n      }\r\n      pp.splice(i, 1);\r\n      ii = Math.max(p.length, (p2 && p2.length) || 0);\r\n    }\r\n  };\r\n  const fixM = function (path1, path2, a1, a2, i) {\r\n    if (path1 && path2 && path1[i][0] === 'M' && path2[i][0] !== 'M') {\r\n      path2.splice(i, 0, ['M', a2.x, a2.y]);\r\n      a1.bx = 0;\r\n      a1.by = 0;\r\n      a1.x = path1[i][1];\r\n      a1.y = path1[i][2];\r\n      ii = Math.max(p.length, (p2 && p2.length) || 0);\r\n    }\r\n  };\r\n  ii = Math.max(p.length, (p2 && p2.length) || 0);\r\n  for (let i = 0; i < ii; i++) {\r\n    p[i] && (pfirst = p[i][0]); // save current path command\r\n\r\n    if (pfirst !== 'C') {\r\n      // C is not saved yet, because it may be result of conversion\r\n      pcoms1[i] = pfirst; // Save current path command\r\n      i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\r\n    }\r\n    p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\r\n\r\n    if (pcoms1[i] !== 'A' && pfirst === 'C') pcoms1[i] = 'C'; // A is the only command\r\n    // which may produce multiple C:s\r\n    // so we have to make sure that C is also C in original path\r\n\r\n    fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\r\n\r\n    if (p2) {\r\n      // the same procedures is done to p2\r\n      p2[i] && (pfirst = p2[i][0]);\r\n      if (pfirst !== 'C') {\r\n        pcoms2[i] = pfirst;\r\n        i && (pcom = pcoms2[i - 1]);\r\n      }\r\n      p2[i] = processPath(p2[i], attrs2, pcom);\r\n\r\n      if (pcoms2[i] !== 'A' && pfirst === 'C') {\r\n        pcoms2[i] = 'C';\r\n      }\r\n\r\n      fixArc(p2, i);\r\n    }\r\n    fixM(p, p2, attrs, attrs2, i);\r\n    fixM(p2, p, attrs2, attrs, i);\r\n    const seg = p[i];\r\n    const seg2 = p2 && p2[i];\r\n    const seglen = seg.length;\r\n    const seg2len = p2 && seg2.length;\r\n    attrs.x = seg[seglen - 2];\r\n    attrs.y = seg[seglen - 1];\r\n    attrs.bx = parseFloat(seg[seglen - 4]) || attrs.x;\r\n    attrs.by = parseFloat(seg[seglen - 3]) || attrs.y;\r\n    attrs2.bx = p2 && (parseFloat(seg2[seg2len - 4]) || attrs2.x);\r\n    attrs2.by = p2 && (parseFloat(seg2[seg2len - 3]) || attrs2.y);\r\n    attrs2.x = p2 && seg2[seg2len - 2];\r\n    attrs2.y = p2 && seg2[seg2len - 1];\r\n  }\r\n\r\n  return p2 ? [p, p2] : p;\r\n};\r\n\r\nconst p2s = /,?([a-z]),?/gi;\r\nconst parsePathArray = function (path) {\r\n  return path.join(',').replace(p2s, '$1');\r\n};\r\n\r\nconst base3 = function (t, p1, p2, p3, p4) {\r\n  const t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4;\r\n  const t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\r\n  return t * t2 - 3 * p1 + 3 * p2;\r\n};\r\n\r\nconst bezlen = function (x1, y1, x2, y2, x3, y3, x4, y4, z) {\r\n  if (z === null) {\r\n    z = 1;\r\n  }\r\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\r\n  const z2 = z / 2;\r\n  const n = 12;\r\n  const Tvalues = [\r\n    -0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816,\r\n  ];\r\n  const Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472];\r\n  let sum = 0;\r\n  for (let i = 0; i < n; i++) {\r\n    const ct = z2 * Tvalues[i] + z2;\r\n    const xbase = base3(ct, x1, x2, x3, x4);\r\n    const ybase = base3(ct, y1, y2, y3, y4);\r\n    const comb = xbase * xbase + ybase * ybase;\r\n    sum += Cvalues[i] * Math.sqrt(comb);\r\n  }\r\n  return z2 * sum;\r\n};\r\n\r\nconst curveDim = function (x0, y0, x1, y1, x2, y2, x3, y3) {\r\n  const tvalues = [];\r\n  const bounds = [[], []];\r\n  let a;\r\n  let b;\r\n  let c;\r\n  let t;\r\n\r\n  for (let i = 0; i < 2; ++i) {\r\n    if (i === 0) {\r\n      b = 6 * x0 - 12 * x1 + 6 * x2;\r\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\r\n      c = 3 * x1 - 3 * x0;\r\n    } else {\r\n      b = 6 * y0 - 12 * y1 + 6 * y2;\r\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\r\n      c = 3 * y1 - 3 * y0;\r\n    }\r\n    if (Math.abs(a) < 1e-12) {\r\n      if (Math.abs(b) < 1e-12) {\r\n        continue;\r\n      }\r\n      t = -c / b;\r\n      if (t > 0 && t < 1) {\r\n        tvalues.push(t);\r\n      }\r\n      continue;\r\n    }\r\n    const b2ac = b * b - 4 * c * a;\r\n    const sqrtb2ac = Math.sqrt(b2ac);\r\n    if (b2ac < 0) {\r\n      continue;\r\n    }\r\n    const t1 = (-b + sqrtb2ac) / (2 * a);\r\n    if (t1 > 0 && t1 < 1) {\r\n      tvalues.push(t1);\r\n    }\r\n    const t2 = (-b - sqrtb2ac) / (2 * a);\r\n    if (t2 > 0 && t2 < 1) {\r\n      tvalues.push(t2);\r\n    }\r\n  }\r\n\r\n  let j = tvalues.length;\r\n  const jlen = j;\r\n  let mt;\r\n  while (j--) {\r\n    t = tvalues[j];\r\n    mt = 1 - t;\r\n    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\r\n    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\r\n  }\r\n\r\n  bounds[0][jlen] = x0;\r\n  bounds[1][jlen] = y0;\r\n  bounds[0][jlen + 1] = x3;\r\n  bounds[1][jlen + 1] = y3;\r\n  bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n  return {\r\n    min: {\r\n      x: Math.min.apply(0, bounds[0]),\r\n      y: Math.min.apply(0, bounds[1]),\r\n    },\r\n    max: {\r\n      x: Math.max.apply(0, bounds[0]),\r\n      y: Math.max.apply(0, bounds[1]),\r\n    },\r\n  };\r\n};\r\n\r\nconst intersect = function (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n  if (\r\n    Math.max(x1, x2) < Math.min(x3, x4) ||\r\n    Math.min(x1, x2) > Math.max(x3, x4) ||\r\n    Math.max(y1, y2) < Math.min(y3, y4) ||\r\n    Math.min(y1, y2) > Math.max(y3, y4)\r\n  ) {\r\n    return;\r\n  }\r\n  const nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4);\r\n  const ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4);\r\n  const denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n  if (!denominator) {\r\n    return;\r\n  }\r\n  const px = nx / denominator;\r\n  const py = ny / denominator;\r\n  const px2 = +px.toFixed(2);\r\n  const py2 = +py.toFixed(2);\r\n  if (\r\n    px2 < +Math.min(x1, x2).toFixed(2) ||\r\n    px2 > +Math.max(x1, x2).toFixed(2) ||\r\n    px2 < +Math.min(x3, x4).toFixed(2) ||\r\n    px2 > +Math.max(x3, x4).toFixed(2) ||\r\n    py2 < +Math.min(y1, y2).toFixed(2) ||\r\n    py2 > +Math.max(y1, y2).toFixed(2) ||\r\n    py2 < +Math.min(y3, y4).toFixed(2) ||\r\n    py2 > +Math.max(y3, y4).toFixed(2)\r\n  ) {\r\n    return;\r\n  }\r\n  return {\r\n    x: px,\r\n    y: py,\r\n  };\r\n};\r\n\r\nconst isPointInsideBBox = function (bbox, x, y) {\r\n  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\r\n};\r\n\r\nconst rectPath = function (x, y, w, h, r?) {\r\n  if (r) {\r\n    return [\r\n      ['M', +x + +r, y],\r\n      ['l', w - r * 2, 0],\r\n      ['a', r, r, 0, 0, 1, r, r],\r\n      ['l', 0, h - r * 2],\r\n      ['a', r, r, 0, 0, 1, -r, r],\r\n      ['l', r * 2 - w, 0],\r\n      ['a', r, r, 0, 0, 1, -r, -r],\r\n      ['l', 0, r * 2 - h],\r\n      ['a', r, r, 0, 0, 1, r, -r],\r\n      ['z'],\r\n    ];\r\n  }\r\n  const res = [['M', x, y], ['l', w, 0], ['l', 0, h], ['l', -w, 0], ['z']];\r\n  // @ts-ignore\r\n  res.parsePathArray = parsePathArray;\r\n  return res;\r\n};\r\n\r\nconst box = function (x?, y?, width?, height?) {\r\n  if (x === null) {\r\n    x = y = width = height = 0;\r\n  }\r\n  if (y === null) {\r\n    y = x.y;\r\n    width = x.width;\r\n    height = x.height;\r\n    x = x.x;\r\n  }\r\n  return {\r\n    x,\r\n    y,\r\n    width,\r\n    w: width,\r\n    height,\r\n    h: height,\r\n    x2: x + width,\r\n    y2: y + height,\r\n    cx: x + width / 2,\r\n    cy: y + height / 2,\r\n    r1: Math.min(width, height) / 2,\r\n    r2: Math.max(width, height) / 2,\r\n    r0: Math.sqrt(width * width + height * height) / 2,\r\n    path: rectPath(x, y, width, height),\r\n    vb: [x, y, width, height].join(' '),\r\n  };\r\n};\r\n\r\nconst isBBoxIntersect = function (bbox1, bbox2) {\r\n  bbox1 = box(bbox1);\r\n  bbox2 = box(bbox2);\r\n  return (\r\n    isPointInsideBBox(bbox2, bbox1.x, bbox1.y) ||\r\n    isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) ||\r\n    isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) ||\r\n    isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) ||\r\n    isPointInsideBBox(bbox1, bbox2.x, bbox2.y) ||\r\n    isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) ||\r\n    isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) ||\r\n    isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) ||\r\n    (((bbox1.x < bbox2.x2 && bbox1.x > bbox2.x) || (bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)) &&\r\n      ((bbox1.y < bbox2.y2 && bbox1.y > bbox2.y) || (bbox2.y < bbox1.y2 && bbox2.y > bbox1.y)))\r\n  );\r\n};\r\n\r\nconst bezierBBox = function (p1x, p1y?, c1x?, c1y?, c2x?, c2y?, p2x?, p2y?) {\r\n  if (!isArray(p1x)) {\r\n    p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\r\n  }\r\n  const bbox = curveDim.apply(null, p1x);\r\n  return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\r\n};\r\n\r\nconst findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n  const t1 = 1 - t;\r\n  const t13 = Math.pow(t1, 3);\r\n  const t12 = Math.pow(t1, 2);\r\n  const t2 = t * t;\r\n  const t3 = t2 * t;\r\n  const x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x;\r\n  const y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\r\n  const mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x);\r\n  const my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y);\r\n  const nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x);\r\n  const ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y);\r\n  const ax = t1 * p1x + t * c1x;\r\n  const ay = t1 * p1y + t * c1y;\r\n  const cx = t1 * c2x + t * p2x;\r\n  const cy = t1 * c2y + t * p2y;\r\n  const alpha = 90 - (Math.atan2(mx - nx, my - ny) * 180) / Math.PI;\r\n  // (mx > nx || my < ny) && (alpha += 180);\r\n  return {\r\n    x,\r\n    y,\r\n    m: {\r\n      x: mx,\r\n      y: my,\r\n    },\r\n    n: {\r\n      x: nx,\r\n      y: ny,\r\n    },\r\n    start: {\r\n      x: ax,\r\n      y: ay,\r\n    },\r\n    end: {\r\n      x: cx,\r\n      y: cy,\r\n    },\r\n    alpha,\r\n  };\r\n};\r\n\r\nconst interHelper = function (bez1, bez2, justCount) {\r\n  const bbox1 = bezierBBox(bez1);\r\n  const bbox2 = bezierBBox(bez2);\r\n  if (!isBBoxIntersect(bbox1, bbox2)) {\r\n    return justCount ? 0 : [];\r\n  }\r\n  const l1 = bezlen.apply(0, bez1);\r\n  const l2 = bezlen.apply(0, bez2);\r\n  const n1 = ~~(l1 / 8);\r\n  const n2 = ~~(l2 / 8);\r\n  const dots1 = [];\r\n  const dots2 = [];\r\n  const xy = {};\r\n  let res = justCount ? 0 : [];\r\n  for (let i = 0; i < n1 + 1; i++) {\r\n    const d = findDotsAtSegment.apply(0, bez1.concat(i / n1));\r\n    dots1.push({\r\n      x: d.x,\r\n      y: d.y,\r\n      t: i / n1,\r\n    });\r\n  }\r\n  for (let i = 0; i < n2 + 1; i++) {\r\n    const d = findDotsAtSegment.apply(0, bez2.concat(i / n2));\r\n    dots2.push({\r\n      x: d.x,\r\n      y: d.y,\r\n      t: i / n2,\r\n    });\r\n  }\r\n  for (let i = 0; i < n1; i++) {\r\n    for (let j = 0; j < n2; j++) {\r\n      const di = dots1[i];\r\n      const di1 = dots1[i + 1];\r\n      const dj = dots2[j];\r\n      const dj1 = dots2[j + 1];\r\n      const ci = Math.abs(di1.x - di.x) < 0.001 ? 'y' : 'x';\r\n      const cj = Math.abs(dj1.x - dj.x) < 0.001 ? 'y' : 'x';\r\n      const is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\r\n      if (is) {\r\n        if (xy[is.x.toFixed(4)] === is.y.toFixed(4)) {\r\n          continue;\r\n        }\r\n        xy[is.x.toFixed(4)] = is.y.toFixed(4);\r\n        const t1 = di.t + Math.abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t);\r\n        const t2 = dj.t + Math.abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\r\n          if (justCount) {\r\n            // @ts-ignore\r\n            res += 1;\r\n          } else {\r\n            // @ts-ignore\r\n            res.push({\r\n              x: is.x,\r\n              y: is.y,\r\n              t1,\r\n              t2,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return res;\r\n};\r\n\r\nconst interPathHelper = function (path1, path2, justCount?) {\r\n  path1 = pathToCurve(path1);\r\n  path2 = pathToCurve(path2);\r\n  let x1;\r\n  let y1;\r\n  let x2;\r\n  let y2;\r\n  let x1m;\r\n  let y1m;\r\n  let x2m;\r\n  let y2m;\r\n  let bez1;\r\n  let bez2;\r\n  let res = justCount ? 0 : [];\r\n  for (let i = 0, ii = path1.length; i < ii; i++) {\r\n    const pi = path1[i];\r\n    if (pi[0] === 'M') {\r\n      x1 = x1m = pi[1];\r\n      y1 = y1m = pi[2];\r\n    } else {\r\n      if (pi[0] === 'C') {\r\n        bez1 = [x1, y1].concat(pi.slice(1));\r\n        x1 = bez1[6];\r\n        y1 = bez1[7];\r\n      } else {\r\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\r\n        x1 = x1m;\r\n        y1 = y1m;\r\n      }\r\n      for (let j = 0, jj = path2.length; j < jj; j++) {\r\n        const pj = path2[j];\r\n        if (pj[0] === 'M') {\r\n          x2 = x2m = pj[1];\r\n          y2 = y2m = pj[2];\r\n        } else {\r\n          if (pj[0] === 'C') {\r\n            bez2 = [x2, y2].concat(pj.slice(1));\r\n            x2 = bez2[6];\r\n            y2 = bez2[7];\r\n          } else {\r\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\r\n            x2 = x2m;\r\n            y2 = y2m;\r\n          }\r\n          const intr = interHelper(bez1, bez2, justCount);\r\n          if (justCount) {\r\n            // @ts-ignore\r\n            res += intr;\r\n          } else {\r\n            // @ts-ignore\r\n            for (let k = 0, kk = intr.length; k < kk; k++) {\r\n              intr[k].segment1 = i;\r\n              intr[k].segment2 = j;\r\n              intr[k].bez1 = bez1;\r\n              intr[k].bez2 = bez2;\r\n            }\r\n            // @ts-ignore\r\n            res = res.concat(intr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return res;\r\n};\r\n\r\nconst intersection = function (path1, path2) {\r\n  return interPathHelper(path1, path2);\r\n};\r\n\r\nfunction decasteljau(points, t) {\r\n  const left = [];\r\n  const right = [];\r\n\r\n  function recurse(points, t) {\r\n    if (points.length === 1) {\r\n      left.push(points[0]);\r\n      right.push(points[0]);\r\n    } else {\r\n      const middlePoints = [];\r\n      for (let i = 0; i < points.length - 1; i++) {\r\n        if (i === 0) {\r\n          left.push(points[0]);\r\n        }\r\n        if (i === points.length - 2) {\r\n          right.push(points[i + 1]);\r\n        }\r\n        middlePoints[i] = [\r\n          (1 - t) * points[i][0] + t * points[i + 1][0],\r\n          (1 - t) * points[i][1] + t * points[i + 1][1],\r\n        ];\r\n      }\r\n      recurse(middlePoints, t);\r\n    }\r\n  }\r\n  if (points.length) {\r\n    recurse(points, t);\r\n  }\r\n  return { left, right: right.reverse() };\r\n}\r\n\r\nfunction splitCurve(start, end, count) {\r\n  const points = [[start[1], start[2]]];\r\n  count = count || 2;\r\n  const segments = [];\r\n  if (end[0] === 'A') {\r\n    points.push(end[6]);\r\n    points.push(end[7]);\r\n  } else if (end[0] === 'C') {\r\n    points.push([end[1], end[2]]);\r\n    points.push([end[3], end[4]]);\r\n    points.push([end[5], end[6]]);\r\n  } else if (end[0] === 'S' || end[0] === 'Q') {\r\n    points.push([end[1], end[2]]);\r\n    points.push([end[3], end[4]]);\r\n  } else {\r\n    points.push([end[1], end[2]]);\r\n  }\r\n\r\n  let leftSegments = points;\r\n  const t = 1 / count;\r\n\r\n  for (let i = 0; i < count - 1; i++) {\r\n    const rt = t / (1 - t * i);\r\n    const split = decasteljau(leftSegments, rt);\r\n    segments.push(split.left);\r\n    leftSegments = split.right;\r\n  }\r\n  segments.push(leftSegments);\r\n  const result = segments.map((segment) => {\r\n    let cmd = [];\r\n    if (segment.length === 4) {\r\n      cmd.push('C');\r\n      cmd = cmd.concat(segment[2]);\r\n    }\r\n    if (segment.length >= 3) {\r\n      if (segment.length === 3) {\r\n        cmd.push('Q');\r\n      }\r\n      cmd = cmd.concat(segment[1]);\r\n    }\r\n    if (segment.length === 2) {\r\n      cmd.push('L');\r\n    }\r\n    cmd = cmd.concat(segment[segment.length - 1]);\r\n    return cmd;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst splitSegment = function (start, end, count) {\r\n  if (count === 1) {\r\n    return [[].concat(start)];\r\n  }\r\n  let segments = [];\r\n  if (end[0] === 'L' || end[0] === 'C' || end[0] === 'Q') {\r\n    segments = segments.concat(splitCurve(start, end, count));\r\n  } else {\r\n    const temp = [].concat(start);\r\n    if (temp[0] === 'M') {\r\n      temp[0] = 'L';\r\n    }\r\n    for (let i = 0; i <= count - 1; i++) {\r\n      segments.push(temp);\r\n    }\r\n  }\r\n  return segments;\r\n};\r\n\r\nconst fillPath = function (source, target) {\r\n  if (source.length === 1) {\r\n    return source;\r\n  }\r\n  const sourceLen = source.length - 1;\r\n  const targetLen = target.length - 1;\r\n  const ratio = sourceLen / targetLen;\r\n  const segmentsToFill = [];\r\n  if (source.length === 1 && source[0][0] === 'M') {\r\n    for (let i = 0; i < targetLen - sourceLen; i++) {\r\n      source.push(source[0]);\r\n    }\r\n    return source;\r\n  }\r\n  for (let i = 0; i < targetLen; i++) {\r\n    const index = Math.floor(ratio * i);\r\n    segmentsToFill[index] = (segmentsToFill[index] || 0) + 1;\r\n  }\r\n  const filled = segmentsToFill.reduce((filled, count, i) => {\r\n    if (i === sourceLen) {\r\n      return filled.concat(source[sourceLen]);\r\n    }\r\n    return filled.concat(splitSegment(source[i], source[i + 1], count));\r\n  }, []);\r\n  filled.unshift(source[0]);\r\n  if (target[targetLen] === 'Z' || target[targetLen] === 'z') {\r\n    filled.push('Z');\r\n  }\r\n  return filled;\r\n};\r\n\r\nconst isEqual = function (obj1, obj2) {\r\n  if (obj1.length !== obj2.length) {\r\n    return false;\r\n  }\r\n  let result = true;\r\n  each(obj1, (item, i) => {\r\n    if (item !== obj2[i]) {\r\n      result = false;\r\n      return false;\r\n    }\r\n  });\r\n  return result;\r\n};\r\nfunction getMinDiff(del, add, modify) {\r\n  let type = null;\r\n  let min = modify;\r\n  if (add < min) {\r\n    min = add;\r\n    type = 'add';\r\n  }\r\n  if (del < min) {\r\n    min = del;\r\n    type = 'del';\r\n  }\r\n  return {\r\n    type,\r\n    min,\r\n  };\r\n}\r\n\r\n/*\r\n * https://en.wikipedia.org/wiki/Levenshtein_distance\r\n * 计算两条path的编辑距离\r\n */\r\nconst levenshteinDistance = function (source, target) {\r\n  const sourceLen = source.length;\r\n  const targetLen = target.length;\r\n  let sourceSegment;\r\n  let targetSegment;\r\n  let temp = 0;\r\n  if (sourceLen === 0 || targetLen === 0) {\r\n    return null;\r\n  }\r\n  const dist = [];\r\n  for (let i = 0; i <= sourceLen; i++) {\r\n    dist[i] = [];\r\n    dist[i][0] = { min: i };\r\n  }\r\n  for (let j = 0; j <= targetLen; j++) {\r\n    dist[0][j] = { min: j };\r\n  }\r\n\r\n  for (let i = 1; i <= sourceLen; i++) {\r\n    sourceSegment = source[i - 1];\r\n    for (let j = 1; j <= targetLen; j++) {\r\n      targetSegment = target[j - 1];\r\n      if (isEqual(sourceSegment, targetSegment)) {\r\n        temp = 0;\r\n      } else {\r\n        temp = 1;\r\n      }\r\n      const del = dist[i - 1][j].min + 1;\r\n      const add = dist[i][j - 1].min + 1;\r\n      const modify = dist[i - 1][j - 1].min + temp;\r\n      dist[i][j] = getMinDiff(del, add, modify);\r\n    }\r\n  }\r\n  return dist;\r\n};\r\n\r\nconst fillPathByDiff = function (source, target) {\r\n  const diffMatrix = levenshteinDistance(source, target);\r\n  let sourceLen = source.length;\r\n  const targetLen = target.length;\r\n  const changes = [];\r\n  let index = 1;\r\n  let minPos = 1;\r\n  // 如果source和target不是完全不相等\r\n  if (diffMatrix[sourceLen][targetLen].min !== sourceLen) {\r\n    // 获取从source到target所需改动\r\n    for (let i = 1; i <= sourceLen; i++) {\r\n      let min = diffMatrix[i][i].min;\r\n      minPos = i;\r\n      for (let j = index; j <= targetLen; j++) {\r\n        if (diffMatrix[i][j].min < min) {\r\n          min = diffMatrix[i][j].min;\r\n          minPos = j;\r\n        }\r\n      }\r\n      index = minPos;\r\n      if (diffMatrix[i][index].type) {\r\n        changes.push({ index: i - 1, type: diffMatrix[i][index].type });\r\n      }\r\n    }\r\n    // 对source进行增删path\r\n    for (let i = changes.length - 1; i >= 0; i--) {\r\n      index = changes[i].index;\r\n      if (changes[i].type === 'add') {\r\n        source.splice(index, 0, [].concat(source[index]));\r\n      } else {\r\n        source.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n  // source尾部补齐\r\n  sourceLen = source.length;\r\n  const diff = targetLen - sourceLen;\r\n  if (sourceLen < targetLen) {\r\n    for (let i = 0; i < diff; i++) {\r\n      if (source[sourceLen - 1][0] === 'z' || source[sourceLen - 1][0] === 'Z') {\r\n        source.splice(sourceLen - 2, 0, source[sourceLen - 2]);\r\n      } else {\r\n        source.push(source[sourceLen - 1]);\r\n      }\r\n      sourceLen += 1;\r\n    }\r\n  }\r\n  return source;\r\n};\r\n\r\n// 将两个点均分成count个点\r\nfunction _splitPoints(points, former, count) {\r\n  const result = [].concat(points);\r\n  let index;\r\n  let t = 1 / (count + 1);\r\n  const formerEnd = _getSegmentPoints(former)[0];\r\n  for (let i = 1; i <= count; i++) {\r\n    t *= i;\r\n    index = Math.floor(points.length * t);\r\n    if (index === 0) {\r\n      result.unshift([formerEnd[0] * t + points[index][0] * (1 - t), formerEnd[1] * t + points[index][1] * (1 - t)]);\r\n    } else {\r\n      result.splice(index, 0, [\r\n        formerEnd[0] * t + points[index][0] * (1 - t),\r\n        formerEnd[1] * t + points[index][1] * (1 - t),\r\n      ]);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/*\r\n * 抽取pathSegment中的关键点\r\n * M,L,A,Q,H,V一个端点\r\n * Q, S抽取一个端点，一个控制点\r\n * C抽取一个端点，两个控制点\r\n */\r\nfunction _getSegmentPoints(segment) {\r\n  const points = [];\r\n  switch (segment[0]) {\r\n    case 'M':\r\n      points.push([segment[1], segment[2]]);\r\n      break;\r\n    case 'L':\r\n      points.push([segment[1], segment[2]]);\r\n      break;\r\n    case 'A':\r\n      points.push([segment[6], segment[7]]);\r\n      break;\r\n    case 'Q':\r\n      points.push([segment[3], segment[4]]);\r\n      points.push([segment[1], segment[2]]);\r\n      break;\r\n    case 'T':\r\n      points.push([segment[1], segment[2]]);\r\n      break;\r\n    case 'C':\r\n      points.push([segment[5], segment[6]]);\r\n      points.push([segment[1], segment[2]]);\r\n      points.push([segment[3], segment[4]]);\r\n      break;\r\n    case 'S':\r\n      points.push([segment[3], segment[4]]);\r\n      points.push([segment[1], segment[2]]);\r\n      break;\r\n    case 'H':\r\n      points.push([segment[1], segment[1]]);\r\n      break;\r\n    case 'V':\r\n      points.push([segment[1], segment[1]]);\r\n      break;\r\n    default:\r\n  }\r\n  return points;\r\n}\r\n\r\nconst formatPath = function (fromPath, toPath) {\r\n  if (fromPath.length <= 1) {\r\n    return fromPath;\r\n  }\r\n  let points;\r\n  for (let i = 0; i < toPath.length; i++) {\r\n    if (fromPath[i][0] !== toPath[i][0]) {\r\n      // 获取fromPath的pathSegment的端点，根据toPath的指令对其改造\r\n      points = _getSegmentPoints(fromPath[i]);\r\n      switch (toPath[i][0]) {\r\n        case 'M':\r\n          fromPath[i] = ['M'].concat(points[0]);\r\n          break;\r\n        case 'L':\r\n          fromPath[i] = ['L'].concat(points[0]);\r\n          break;\r\n        case 'A':\r\n          fromPath[i] = [].concat(toPath[i]);\r\n          fromPath[i][6] = points[0][0];\r\n          fromPath[i][7] = points[0][1];\r\n          break;\r\n        case 'Q':\r\n          if (points.length < 2) {\r\n            if (i > 0) {\r\n              points = _splitPoints(points, fromPath[i - 1], 1);\r\n            } else {\r\n              fromPath[i] = toPath[i];\r\n              break;\r\n            }\r\n          }\r\n          fromPath[i] = ['Q'].concat(\r\n            points.reduce((arr, i) => {\r\n              return arr.concat(i);\r\n            }, [])\r\n          );\r\n          break;\r\n        case 'T':\r\n          fromPath[i] = ['T'].concat(points[0]);\r\n          break;\r\n        case 'C':\r\n          if (points.length < 3) {\r\n            if (i > 0) {\r\n              points = _splitPoints(points, fromPath[i - 1], 2);\r\n            } else {\r\n              fromPath[i] = toPath[i];\r\n              break;\r\n            }\r\n          }\r\n          fromPath[i] = ['C'].concat(\r\n            points.reduce((arr, i) => {\r\n              return arr.concat(i);\r\n            }, [])\r\n          );\r\n          break;\r\n        case 'S':\r\n          if (points.length < 2) {\r\n            if (i > 0) {\r\n              points = _splitPoints(points, fromPath[i - 1], 1);\r\n            } else {\r\n              fromPath[i] = toPath[i];\r\n              break;\r\n            }\r\n          }\r\n          fromPath[i] = ['S'].concat(\r\n            points.reduce((arr, i) => {\r\n              return arr.concat(i);\r\n            }, [])\r\n          );\r\n          break;\r\n        default:\r\n          fromPath[i] = toPath[i];\r\n      }\r\n    }\r\n  }\r\n  return fromPath;\r\n};\r\n\r\nexport {\r\n  catmullRomToBezier,\r\n  fillPath,\r\n  fillPathByDiff,\r\n  formatPath,\r\n  intersection,\r\n  parsePathArray,\r\n  parsePathString,\r\n  pathToAbsolute,\r\n  pathToCurve,\r\n  rectPath,\r\n};\r\n", "import { IBase } from '../interfaces';\r\nexport function removeFromArray(arr: any[], obj: any) {\r\n  const index = arr.indexOf(obj);\r\n  if (index !== -1) {\r\n    arr.splice(index, 1);\r\n  }\r\n}\r\n\r\nexport const isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\r\nexport { isNil, isFunction, isString, isObject, isArray, mix, each, upperFirst } from '@antv/util';\r\n\r\n// 是否元素的父容器\r\nexport function isParent(container, shape) {\r\n  // 所有 shape 都是 canvas 的子元素\r\n  if (container.isCanvas()) {\r\n    return true;\r\n  }\r\n  let parent = shape.getParent();\r\n  let isParent = false;\r\n  while (parent) {\r\n    if (parent === container) {\r\n      isParent = true;\r\n      break;\r\n    }\r\n    parent = parent.getParent();\r\n  }\r\n  return isParent;\r\n}\r\n\r\nexport function isAllowCapture(element: IBase): boolean {\r\n  // @ts-ignore\r\n  return element.cfg.visible && element.cfg.capture;\r\n}\r\n", "import EE from '@antv/event-emitter';\r\nimport { IBase } from '../interfaces';\r\nimport { mix } from '../util/util';\r\nimport { LooseObject } from '../types';\r\nabstract class Base extends EE implements IBase {\r\n  /**\r\n   * 内部属性，用于 get,set，但是可以用于优化性能使用\r\n   * @type {object}\r\n   */\r\n  cfg: LooseObject;\r\n\r\n  /**\r\n   * 是否被销毁\r\n   * @type {boolean}\r\n   */\r\n  destroyed: boolean = false;\r\n\r\n  /**\r\n   * @protected\r\n   * 默认的配置项\r\n   * @returns {object} 默认的配置项\r\n   */\r\n  getDefaultCfg() {\r\n    return {};\r\n  }\r\n\r\n  constructor(cfg) {\r\n    super();\r\n    const defaultCfg = this.getDefaultCfg();\r\n    this.cfg = mix(defaultCfg, cfg);\r\n  }\r\n\r\n  // 实现接口的方法\r\n  get(name) {\r\n    return this.cfg[name];\r\n  }\r\n  // 实现接口的方法\r\n  set(name, value) {\r\n    this.cfg[name] = value;\r\n  }\r\n\r\n  // 实现接口的方法\r\n  destroy() {\r\n    this.cfg = {\r\n      destroyed: true,\r\n    };\r\n    this.off();\r\n    this.destroyed = true;\r\n  }\r\n}\r\n\r\nexport default Base;\r\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nvar BrowserInfo = /** @class */ (function () {\r\n    function BrowserInfo(name, version, os) {\r\n        this.name = name;\r\n        this.version = version;\r\n        this.os = os;\r\n        this.type = 'browser';\r\n    }\r\n    return BrowserInfo;\r\n}());\r\nexport { BrowserInfo };\r\nvar NodeInfo = /** @class */ (function () {\r\n    function NodeInfo(version) {\r\n        this.version = version;\r\n        this.type = 'node';\r\n        this.name = 'node';\r\n        this.os = process.platform;\r\n    }\r\n    return NodeInfo;\r\n}());\r\nexport { NodeInfo };\r\nvar SearchBotDeviceInfo = /** @class */ (function () {\r\n    function SearchBotDeviceInfo(name, version, os, bot) {\r\n        this.name = name;\r\n        this.version = version;\r\n        this.os = os;\r\n        this.bot = bot;\r\n        this.type = 'bot-device';\r\n    }\r\n    return SearchBotDeviceInfo;\r\n}());\r\nexport { SearchBotDeviceInfo };\r\nvar BotInfo = /** @class */ (function () {\r\n    function BotInfo() {\r\n        this.type = 'bot';\r\n        this.bot = true; // NOTE: deprecated test name instead\r\n        this.name = 'bot';\r\n        this.version = null;\r\n        this.os = null;\r\n    }\r\n    return BotInfo;\r\n}());\r\nexport { BotInfo };\r\nvar ReactNativeInfo = /** @class */ (function () {\r\n    function ReactNativeInfo() {\r\n        this.type = 'react-native';\r\n        this.name = 'react-native';\r\n        this.version = null;\r\n        this.os = null;\r\n    }\r\n    return ReactNativeInfo;\r\n}());\r\nexport { ReactNativeInfo };\r\n// tslint:disable-next-line:max-line-length\r\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\r\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\r\nvar REQUIRED_VERSION_PARTS = 3;\r\nvar userAgentRules = [\r\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\r\n    ['edge', /Edge\\/([0-9\\._]+)/],\r\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\r\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\r\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\r\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\r\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\r\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\r\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\r\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\r\n    [\r\n        'chromium-webview',\r\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\r\n    ],\r\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\r\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\r\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\r\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\r\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\r\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\r\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\r\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\r\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\r\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\r\n    ['ie', /MSIE\\s(7\\.0)/],\r\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\r\n    ['android', /Android\\s([0-9\\.]+)/],\r\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\r\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\r\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\r\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\r\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\r\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\r\n    ['curl', /^curl\\/([0-9\\.]+)$/],\r\n    ['searchbot', SEARCHBOX_UA_REGEX],\r\n];\r\nvar operatingSystemRules = [\r\n    ['iOS', /iP(hone|od|ad)/],\r\n    ['Android OS', /Android/],\r\n    ['BlackBerry OS', /BlackBerry|BB10/],\r\n    ['Windows Mobile', /IEMobile/],\r\n    ['Amazon OS', /Kindle/],\r\n    ['Windows 3.11', /Win16/],\r\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\r\n    ['Windows 98', /(Windows 98)|(Win98)/],\r\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\r\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\r\n    ['Windows Server 2003', /(Windows NT 5.2)/],\r\n    ['Windows Vista', /(Windows NT 6.0)/],\r\n    ['Windows 7', /(Windows NT 6.1)/],\r\n    ['Windows 8', /(Windows NT 6.2)/],\r\n    ['Windows 8.1', /(Windows NT 6.3)/],\r\n    ['Windows 10', /(Windows NT 10.0)/],\r\n    ['Windows ME', /Windows ME/],\r\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\r\n    ['Open BSD', /OpenBSD/],\r\n    ['Sun OS', /SunOS/],\r\n    ['Chrome OS', /CrOS/],\r\n    ['Linux', /(Linux)|(X11)/],\r\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\r\n    ['QNX', /QNX/],\r\n    ['BeOS', /BeOS/],\r\n    ['OS/2', /OS\\/2/],\r\n];\r\nexport function detect(userAgent) {\r\n    if (!!userAgent) {\r\n        return parseUserAgent(userAgent);\r\n    }\r\n    if (typeof document === 'undefined' &&\r\n        typeof navigator !== 'undefined' &&\r\n        navigator.product === 'ReactNative') {\r\n        return new ReactNativeInfo();\r\n    }\r\n    if (typeof navigator !== 'undefined') {\r\n        return parseUserAgent(navigator.userAgent);\r\n    }\r\n    return getNodeVersion();\r\n}\r\nfunction matchUserAgent(ua) {\r\n    // opted for using reduce here rather than Array#first with a regex.test call\r\n    // this is primarily because using the reduce we only perform the regex\r\n    // execution once rather than once for the test and for the exec again below\r\n    // probably something that needs to be benchmarked though\r\n    return (ua !== '' &&\r\n        userAgentRules.reduce(function (matched, _a) {\r\n            var browser = _a[0], regex = _a[1];\r\n            if (matched) {\r\n                return matched;\r\n            }\r\n            var uaMatch = regex.exec(ua);\r\n            return !!uaMatch && [browser, uaMatch];\r\n        }, false));\r\n}\r\nexport function browserName(ua) {\r\n    var data = matchUserAgent(ua);\r\n    return data ? data[0] : null;\r\n}\r\nexport function parseUserAgent(ua) {\r\n    var matchedRule = matchUserAgent(ua);\r\n    if (!matchedRule) {\r\n        return null;\r\n    }\r\n    var name = matchedRule[0], match = matchedRule[1];\r\n    if (name === 'searchbot') {\r\n        return new BotInfo();\r\n    }\r\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\r\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\r\n    if (versionParts) {\r\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\r\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\r\n        }\r\n    }\r\n    else {\r\n        versionParts = [];\r\n    }\r\n    var version = versionParts.join('.');\r\n    var os = detectOS(ua);\r\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\r\n    if (searchBotMatch && searchBotMatch[1]) {\r\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\r\n    }\r\n    return new BrowserInfo(name, version, os);\r\n}\r\nexport function detectOS(ua) {\r\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\r\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\r\n        var match = regex.exec(ua);\r\n        if (match) {\r\n            return os;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function getNodeVersion() {\r\n    var isNode = typeof process !== 'undefined' && process.version;\r\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\r\n}\r\nfunction createVersionParts(count) {\r\n    var output = [];\r\n    for (var ii = 0; ii < count; ii++) {\r\n        output.push('0');\r\n    }\r\n    return output;\r\n}\r\n", "import { each, isEqual, isFunction, isNumber, isObject, isArray, noop, mix, upperFirst, uniqueId } from '@antv/util';\r\nimport { ext } from '@antv/matrix-util';\r\nimport { IElement, IShape, IGroup, ICanvas, ICtor } from '../interfaces';\r\nimport { ClipCfg, ChangeType, OnFrame, ShapeAttrs, AnimateCfg, Animation, BBox, ShapeBase } from '../types';\r\nimport { removeFromArray, isParent } from '../util/util';\r\nimport { multiplyMatrix, multiplyVec2, invert } from '../util/matrix';\r\nimport Base from './base';\r\nimport GraphEvent from '../event/graph-event';\r\n\r\nconst { transform } = ext;\r\n\r\nconst MATRIX = 'matrix';\r\nconst CLONE_CFGS = ['zIndex', 'capture', 'visible', 'type'];\r\n\r\n// 可以在 toAttrs 中设置，但不属于绘图属性的字段\r\nconst RESERVED_PORPS = ['repeat'];\r\n\r\nconst DELEGATION_SPLIT = ':';\r\nconst WILDCARD = '*';\r\n\r\n// 需要考虑数组嵌套数组的场景\r\n// 数组嵌套对象的场景不考虑\r\nfunction _cloneArrayAttr(arr) {\r\n  const result = [];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (isArray(arr[i])) {\r\n      result.push([].concat(arr[i]));\r\n    } else {\r\n      result.push(arr[i]);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getFormatFromAttrs(toAttrs, shape) {\r\n  const fromAttrs = {};\r\n  const attrs = shape.attrs;\r\n  for (const k in toAttrs) {\r\n    fromAttrs[k] = attrs[k];\r\n  }\r\n  return fromAttrs;\r\n}\r\n\r\nfunction getFormatToAttrs(props, shape) {\r\n  const toAttrs = {};\r\n  const attrs = shape.attr();\r\n  each(props, (v, k) => {\r\n    if (RESERVED_PORPS.indexOf(k) === -1 && !isEqual(attrs[k], v)) {\r\n      toAttrs[k] = v;\r\n    }\r\n  });\r\n  return toAttrs;\r\n}\r\n\r\nfunction checkExistedAttrs(animations: Animation[], animation: Animation) {\r\n  if (animation.onFrame) {\r\n    return animations;\r\n  }\r\n  const { startTime, delay, duration } = animation;\r\n  const hasOwnProperty = Object.prototype.hasOwnProperty;\r\n  each(animations, (item) => {\r\n    // 后一个动画开始执行的时间 < 前一个动画的结束时间 && 后一个动画的执行时间 > 前一个动画的延迟\r\n    if (startTime + delay < item.startTime + item.delay + item.duration && duration > item.delay) {\r\n      each(animation.toAttrs, (v, k) => {\r\n        if (hasOwnProperty.call(item.toAttrs, k)) {\r\n          delete item.toAttrs[k];\r\n          delete item.fromAttrs[k];\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return animations;\r\n}\r\n\r\nabstract class Element extends Base implements IElement {\r\n  /**\r\n   * @protected\r\n   * 图形属性\r\n   * @type {ShapeAttrs}\r\n   */\r\n  attrs: ShapeAttrs = {};\r\n\r\n  constructor(cfg) {\r\n    super(cfg);\r\n    const attrs = this.getDefaultAttrs();\r\n    mix(attrs, cfg.attrs);\r\n    this.attrs = attrs;\r\n    this.initAttrs(attrs);\r\n    this.initAnimate(); // 初始化动画\r\n  }\r\n\r\n  // override\r\n  getDefaultCfg() {\r\n    return {\r\n      visible: true,\r\n      capture: true,\r\n      zIndex: 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 获取默认的属相\r\n   */\r\n  getDefaultAttrs() {\r\n    return {\r\n      matrix: this.getDefaultMatrix(),\r\n      opacity: 1,\r\n    };\r\n  }\r\n\r\n  abstract getShapeBase(): ShapeBase;\r\n  abstract getGroupBase(): ICtor<IGroup>;\r\n\r\n  /**\r\n   * @protected\r\n   * 一些方法调用会引起画布变化\r\n   * @param {ChangeType} changeType 改变的类型\r\n   */\r\n  onCanvasChange(changeType: ChangeType) {}\r\n\r\n  /**\r\n   * @protected\r\n   * 初始化属性，有些属性需要加工\r\n   * @param {object} attrs 属性值\r\n   */\r\n  initAttrs(attrs: ShapeAttrs) {}\r\n\r\n  /**\r\n   * @protected\r\n   * 初始化动画\r\n   */\r\n  initAnimate() {\r\n    this.set('animable', true);\r\n    this.set('animating', false);\r\n  }\r\n\r\n  isGroup() {\r\n    return false;\r\n  }\r\n\r\n  getParent(): IGroup {\r\n    return this.get('parent');\r\n  }\r\n\r\n  getCanvas(): ICanvas {\r\n    return this.get('canvas');\r\n  }\r\n\r\n  attr(...args) {\r\n    const [name, value] = args;\r\n    if (!name) return this.attrs;\r\n    if (isObject(name)) {\r\n      for (const k in name) {\r\n        this.setAttr(k, name[k]);\r\n      }\r\n      this.afterAttrsChange(name);\r\n      return this;\r\n    }\r\n    if (args.length === 2) {\r\n      this.setAttr(name, value);\r\n      this.afterAttrsChange({\r\n        [name]: value,\r\n      });\r\n      return this;\r\n    }\r\n    return this.attrs[name];\r\n  }\r\n\r\n  // 在子类上单独实现\r\n  abstract getBBox(): BBox;\r\n  // 子类上单独实现\r\n  abstract getCanvasBBox(): BBox;\r\n\r\n  // 是否被裁剪，被裁剪则不显示，不参与拾取\r\n  isClipped(refX, refY): boolean {\r\n    const clip = this.getClip();\r\n    return clip && !clip.isHit(refX, refY);\r\n  }\r\n\r\n  /**\r\n   * 内部设置属性值的接口\r\n   * @param {string} name 属性名\r\n   * @param {any} value 属性值\r\n   */\r\n  setAttr(name: string, value: any) {\r\n    const originValue = this.attrs[name];\r\n    if (originValue !== value) {\r\n      this.attrs[name] = value;\r\n      this.onAttrChange(name, value, originValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 属性值发生改变\r\n   * @param {string} name 属性名\r\n   * @param {any} value 属性值\r\n   * @param {any} originValue 属性值\r\n   */\r\n  onAttrChange(name: string, value: any, originValue: any) {\r\n    if (name === 'matrix') {\r\n      this.set('totalMatrix', null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 属性更改后需要做的事情\r\n   * @protected\r\n   */\r\n  afterAttrsChange(targetAttrs) {\r\n    if (this.cfg.isClipShape) {\r\n      const applyTo = this.cfg.applyTo;\r\n      if (applyTo) {\r\n        applyTo.onCanvasChange('clip');\r\n      }\r\n    } else {\r\n      this.onCanvasChange('attr');\r\n    }\r\n  }\r\n\r\n  show() {\r\n    // 不是高频操作直接使用 set\r\n    this.set('visible', true);\r\n    this.onCanvasChange('show');\r\n    return this;\r\n  }\r\n\r\n  hide() {\r\n    // 不是高频操作直接使用 set\r\n    this.set('visible', false);\r\n    this.onCanvasChange('hide');\r\n    return this;\r\n  }\r\n\r\n  setZIndex(zIndex: number) {\r\n    this.set('zIndex', zIndex);\r\n    const parent = this.getParent();\r\n    if (parent) {\r\n      // 改变 zIndex 不应该立即触发渲染 (调用 onCanvasChange('zIndex'))，需要经过 sort 再触发\r\n      parent.sort();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  toFront() {\r\n    const parent = this.getParent();\r\n    if (!parent) {\r\n      return;\r\n    }\r\n    const children = parent.getChildren();\r\n    const el = this.get('el');\r\n    const index = children.indexOf(this);\r\n    children.splice(index, 1);\r\n    children.push(this);\r\n    this.onCanvasChange('zIndex');\r\n  }\r\n\r\n  toBack() {\r\n    const parent = this.getParent();\r\n    if (!parent) {\r\n      return;\r\n    }\r\n    const children = parent.getChildren();\r\n    const el = this.get('el');\r\n    const index = children.indexOf(this);\r\n    children.splice(index, 1);\r\n    children.unshift(this);\r\n    this.onCanvasChange('zIndex');\r\n  }\r\n\r\n  remove(destroy = true) {\r\n    const parent = this.getParent();\r\n    if (parent) {\r\n      removeFromArray(parent.getChildren(), this);\r\n      if (!parent.get('clearing')) {\r\n        // 如果父元素正在清理，当前元素不触发 remove\r\n        this.onCanvasChange('remove');\r\n      }\r\n    } else {\r\n      this.onCanvasChange('remove');\r\n    }\r\n    if (destroy) {\r\n      this.destroy();\r\n    }\r\n  }\r\n\r\n  resetMatrix() {\r\n    this.attr(MATRIX, this.getDefaultMatrix());\r\n    this.onCanvasChange('matrix');\r\n  }\r\n\r\n  getMatrix(): number[] {\r\n    return this.attr(MATRIX);\r\n  }\r\n\r\n  setMatrix(m: number[]) {\r\n    this.attr(MATRIX, m);\r\n    this.onCanvasChange('matrix');\r\n  }\r\n\r\n  // 获取总的 matrix\r\n  getTotalMatrix() {\r\n    let totalMatrix = this.cfg.totalMatrix;\r\n    if (!totalMatrix) {\r\n      const currentMatrix = this.attr('matrix');\r\n      const parentMatrix = this.cfg.parentMatrix;\r\n      if (parentMatrix && currentMatrix) {\r\n        totalMatrix = multiplyMatrix(parentMatrix, currentMatrix);\r\n      } else {\r\n        totalMatrix = currentMatrix || parentMatrix;\r\n      }\r\n      this.set('totalMatrix', totalMatrix);\r\n    }\r\n    return totalMatrix;\r\n  }\r\n\r\n  // 上层分组设置 matrix\r\n  applyMatrix(matrix: number[]) {\r\n    const currentMatrix = this.attr('matrix');\r\n    let totalMatrix = null;\r\n    if (matrix && currentMatrix) {\r\n      totalMatrix = multiplyMatrix(matrix, currentMatrix);\r\n    } else {\r\n      totalMatrix = currentMatrix || matrix;\r\n    }\r\n    this.set('totalMatrix', totalMatrix);\r\n    this.set('parentMatrix', matrix);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 获取默认的矩阵\r\n   * @returns {number[]|null} 默认的矩阵\r\n   */\r\n  getDefaultMatrix() {\r\n    return null;\r\n  }\r\n\r\n  // 将向量应用设置的矩阵\r\n  applyToMatrix(v: number[]): number[] {\r\n    const matrix = this.attr('matrix');\r\n    if (matrix) {\r\n      return multiplyVec2(matrix, v);\r\n    }\r\n    return v;\r\n  }\r\n\r\n  // 根据设置的矩阵，将向量转换相对于图形/分组的位置\r\n  invertFromMatrix(v: number[]): number[] {\r\n    const matrix = this.attr('matrix');\r\n    if (matrix) {\r\n      const invertMatrix = invert(matrix);\r\n      if (invertMatrix) {\r\n        return multiplyVec2(invertMatrix, v);\r\n      }\r\n    }\r\n    return v;\r\n  }\r\n\r\n  // 设置 clip\r\n  setClip(clipCfg: ClipCfg) {\r\n    const canvas = this.getCanvas();\r\n    // 应该只设置当前元素的 clip，不应该去修改 clip 本身，方便 clip 被复用\r\n    // TODO: setClip 的传参既 shape 配置，也支持 shape 对象\r\n    // const preShape = this.get('clipShape');\r\n    // if (preShape) {\r\n    //   // 将之前的 clipShape 销毁\r\n    //   preShape.destroy();\r\n    // }\r\n    let clipShape = null;\r\n    // 如果配置项为 null，则不移除 clipShape\r\n    if (clipCfg) {\r\n      const ShapeBase = this.getShapeBase();\r\n      const shapeType = upperFirst(clipCfg.type);\r\n      const Cons = ShapeBase[shapeType];\r\n      if (Cons) {\r\n        clipShape = new Cons({\r\n          type: clipCfg.type,\r\n          isClipShape: true, // 增加一个标记\r\n          applyTo: this,\r\n          attrs: clipCfg.attrs,\r\n          canvas, // 设置 canvas\r\n        });\r\n      }\r\n    }\r\n\r\n    this.set('clipShape', clipShape);\r\n    this.onCanvasChange('clip');\r\n    return clipShape;\r\n  }\r\n\r\n  getClip(): IShape {\r\n    // 高频率调用的地方直接使用 this.cfg.xxx\r\n    const clipShape = this.cfg.clipShape;\r\n    // 未设置时返回 Null，保证一致性\r\n    if (!clipShape) {\r\n      return null;\r\n    }\r\n    return clipShape;\r\n  }\r\n\r\n  clone() {\r\n    const originAttrs = this.attrs;\r\n    const attrs = {};\r\n    each(originAttrs, (i, k) => {\r\n      if (isArray(originAttrs[k])) {\r\n        attrs[k] = _cloneArrayAttr(originAttrs[k]);\r\n      } else {\r\n        attrs[k] = originAttrs[k];\r\n      }\r\n    });\r\n    const cons = this.constructor;\r\n    // @ts-ignore\r\n    const clone = new cons({ attrs });\r\n    each(CLONE_CFGS, (cfgName) => {\r\n      clone.set(cfgName, this.get(cfgName));\r\n    });\r\n    return clone;\r\n  }\r\n\r\n  destroy() {\r\n    const destroyed = this.destroyed;\r\n    if (destroyed) {\r\n      return;\r\n    }\r\n    this.attrs = {};\r\n    super.destroy();\r\n    // this.onCanvasChange('destroy');\r\n  }\r\n\r\n  /**\r\n   * 是否处于动画暂停状态\r\n   * @return {boolean} 是否处于动画暂停状态\r\n   */\r\n  isAnimatePaused() {\r\n    return this.get('_pause').isPaused;\r\n  }\r\n\r\n  /**\r\n   * 执行动画，支持多种函数签名\r\n   * 1. animate(toAttrs: ElementAttrs, duration: number, easing?: string, callback?: () => void, delay?: number)\r\n   * 2. animate(onFrame: OnFrame, duration: number, easing?: string, callback?: () => void, delay?: number)\r\n   * 3. animate(toAttrs: ElementAttrs, cfg: AnimateCfg)\r\n   * 4. animate(onFrame: OnFrame, cfg: AnimateCfg)\r\n   * 各个参数的含义为:\r\n   *   toAttrs  动画最终状态\r\n   *   onFrame  自定义帧动画函数\r\n   *   duration 动画执行时间\r\n   *   easing   动画缓动效果\r\n   *   callback 动画执行后的回调\r\n   *   delay    动画延迟时间\r\n   */\r\n  animate(...args) {\r\n    if (!this.get('timeline') && !this.get('canvas')) {\r\n      return;\r\n    }\r\n    this.set('animating', true);\r\n    let timeline = this.get('timeline');\r\n    if (!timeline) {\r\n      timeline = this.get('canvas').get('timeline');\r\n      this.set('timeline', timeline);\r\n    }\r\n    let animations = this.get('animations') || [];\r\n    // 初始化 tick\r\n    if (!timeline.timer) {\r\n      timeline.initTimer();\r\n    }\r\n    let [toAttrs, duration, easing = 'easeLinear', callback = noop, delay = 0] = args;\r\n    let onFrame: OnFrame;\r\n    let repeat: boolean;\r\n    let pauseCallback;\r\n    let resumeCallback;\r\n    let animateCfg: AnimateCfg;\r\n    // 第二个参数，既可以是动画最终状态 toAttrs，也可以是自定义帧动画函数 onFrame\r\n    if (isFunction(toAttrs)) {\r\n      onFrame = toAttrs as OnFrame;\r\n      toAttrs = {};\r\n    } else if (isObject(toAttrs) && (toAttrs as any).onFrame) {\r\n      // 兼容 3.0 中的写法，onFrame 和 repeat 可在 toAttrs 中设置\r\n      onFrame = (toAttrs as any).onFrame as OnFrame;\r\n      repeat = (toAttrs as any).repeat;\r\n    }\r\n    // 第二个参数，既可以是执行时间 duration，也可以是动画参数 animateCfg\r\n    if (isObject(duration)) {\r\n      animateCfg = duration as AnimateCfg;\r\n      duration = animateCfg.duration;\r\n      easing = animateCfg.easing || 'easeLinear';\r\n      delay = animateCfg.delay || 0;\r\n      // animateCfg 中的设置优先级更高\r\n      repeat = animateCfg.repeat || repeat || false;\r\n      callback = animateCfg.callback || noop;\r\n      pauseCallback = animateCfg.pauseCallback || noop;\r\n      resumeCallback = animateCfg.resumeCallback || noop;\r\n    } else {\r\n      // 第四个参数，既可以是回调函数 callback，也可以是延迟时间 delay\r\n      if (isNumber(callback)) {\r\n        delay = callback;\r\n        callback = null;\r\n      }\r\n      // 第三个参数，既可以是缓动参数 easing，也可以是回调函数 callback\r\n      if (isFunction(easing)) {\r\n        callback = easing;\r\n        easing = 'easeLinear';\r\n      } else {\r\n        easing = easing || 'easeLinear';\r\n      }\r\n    }\r\n    const formatToAttrs = getFormatToAttrs(toAttrs, this);\r\n    const animation: Animation = {\r\n      fromAttrs: getFormatFromAttrs(formatToAttrs, this),\r\n      toAttrs: formatToAttrs,\r\n      duration,\r\n      easing,\r\n      repeat,\r\n      callback,\r\n      pauseCallback,\r\n      resumeCallback,\r\n      delay,\r\n      startTime: timeline.getTime(),\r\n      id: uniqueId(),\r\n      onFrame,\r\n      pathFormatted: false,\r\n    };\r\n    // 如果动画元素队列中已经有这个图形了\r\n    if (animations.length > 0) {\r\n      // 先检查是否需要合并属性。若有相同的动画，将该属性从前一个动画中删除,直接用后一个动画中\r\n      animations = checkExistedAttrs(animations, animation);\r\n    } else {\r\n      // 否则将图形添加到动画元素队列\r\n      timeline.addAnimator(this);\r\n    }\r\n    animations.push(animation);\r\n    this.set('animations', animations);\r\n    this.set('_pause', { isPaused: false });\r\n  }\r\n\r\n  /**\r\n   * 停止动画\r\n   * @param {boolean} toEnd 是否到动画的最终状态\r\n   */\r\n  stopAnimate(toEnd = true) {\r\n    const animations = this.get('animations');\r\n    each(animations, (animation: Animation) => {\r\n      // 将动画执行到最后一帧\r\n      if (toEnd) {\r\n        if (animation.onFrame) {\r\n          this.attr(animation.onFrame(1));\r\n        } else {\r\n          this.attr(animation.toAttrs);\r\n        }\r\n      }\r\n      if (animation.callback) {\r\n        // 动画停止时的回调\r\n        animation.callback();\r\n      }\r\n    });\r\n    this.set('animating', false);\r\n    this.set('animations', []);\r\n  }\r\n\r\n  /**\r\n   * 暂停动画\r\n   */\r\n  pauseAnimate() {\r\n    const timeline = this.get('timeline');\r\n    const animations = this.get('animations');\r\n    const pauseTime = timeline.getTime();\r\n    each(animations, (animation: Animation) => {\r\n      animation._paused = true;\r\n      animation._pauseTime = pauseTime;\r\n      if (animation.pauseCallback) {\r\n        // 动画暂停时的回调\r\n        animation.pauseCallback();\r\n      }\r\n    });\r\n    // 记录下是在什么时候暂停的\r\n    this.set('_pause', {\r\n      isPaused: true,\r\n      pauseTime,\r\n    });\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 恢复动画\r\n   */\r\n  resumeAnimate() {\r\n    const timeline = this.get('timeline');\r\n    const current = timeline.getTime();\r\n    const animations = this.get('animations');\r\n    const pauseTime = this.get('_pause').pauseTime;\r\n    // 之后更新属性需要计算动画已经执行的时长，如果暂停了，就把初始时间调后\r\n    each(animations, (animation: Animation) => {\r\n      animation.startTime = animation.startTime + (current - pauseTime);\r\n      animation._paused = false;\r\n      animation._pauseTime = null;\r\n      if (animation.resumeCallback) {\r\n        animation.resumeCallback();\r\n      }\r\n    });\r\n    this.set('_pause', {\r\n      isPaused: false,\r\n    });\r\n    this.set('animations', animations);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 触发委托事件\r\n   * @param  {string}     type 事件类型\r\n   * @param  {GraphEvent} eventObj 事件对象\r\n   */\r\n  emitDelegation(type: string, eventObj: GraphEvent) {\r\n    const paths = eventObj.propagationPath;\r\n    const events = this.getEvents();\r\n    let relativeShape;\r\n    if (type === 'mouseenter') {\r\n      relativeShape = eventObj.fromShape;\r\n    } else if (type === 'mouseleave') {\r\n      relativeShape = eventObj.toShape;\r\n    }\r\n    // 至少有一个对象，且第一个对象为 shape\r\n    for (let i = 0; i < paths.length; i++) {\r\n      const element = paths[i];\r\n      // 暂定跟 name 绑定\r\n      const name = element.get('name');\r\n      if (name) {\r\n        // 第一个 mouseenter 和 mouseleave 的停止即可，因为后面的都是前面的 Parent\r\n        if (\r\n          // 只有 element 是 Group 或者 Canvas 的时候，才需要判断 isParent\r\n          (element.isGroup() || (element.isCanvas && element.isCanvas())) &&\r\n          relativeShape &&\r\n          isParent(element, relativeShape)\r\n        ) {\r\n          break;\r\n        }\r\n        if (isArray(name)) {\r\n          each(name, (subName) => {\r\n            this.emitDelegateEvent(element, subName, eventObj);\r\n          });\r\n        } else {\r\n          this.emitDelegateEvent(element, name, eventObj);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private emitDelegateEvent(element, name: string, eventObj: GraphEvent) {\r\n    const events = this.getEvents();\r\n    // 事件委托的形式 name:type\r\n    const eventName = name + DELEGATION_SPLIT + eventObj.type;\r\n    if (events[eventName] || events[WILDCARD]) {\r\n      // 对于通配符 *，事件名称 = 委托事件名称\r\n      eventObj.name = eventName;\r\n      eventObj.currentTarget = element;\r\n      eventObj.delegateTarget = this;\r\n      // 将委托事件的监听对象 delegateObject 挂载到事件对象上\r\n      eventObj.delegateObject = element.get('delegateObject');\r\n      this.emit(eventName, eventObj);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 移动元素\r\n   * @param {number} translateX 水平移动距离\r\n   * @param {number} translateY 垂直移动距离\r\n   * @return {IElement} 元素\r\n   */\r\n  translate(translateX: number = 0, translateY: number = 0) {\r\n    const matrix = this.getMatrix();\r\n    const newMatrix = transform(matrix, [['t', translateX, translateY]]);\r\n    this.setMatrix(newMatrix);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 移动元素到目标位置\r\n   * @param {number} targetX 目标位置的水平坐标\r\n   * @param {number} targetX 目标位置的垂直坐标\r\n   * @return {IElement} 元素\r\n   */\r\n  move(targetX: number, targetY: number) {\r\n    const x = this.attr('x') || 0;\r\n    const y = this.attr('y') || 0;\r\n    this.translate(targetX - x, targetY - y);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 移动元素到目标位置，等价于 move 方法。由于 moveTo 的语义性更强，因此在文档中推荐使用 moveTo 方法\r\n   * @param {number} targetX 目标位置的 x 轴坐标\r\n   * @param {number} targetY 目标位置的 y 轴坐标\r\n   * @return {IElement} 元素\r\n   */\r\n  moveTo(targetX: number, targetY: number) {\r\n    return this.move(targetX, targetY);\r\n  }\r\n\r\n  /**\r\n   * 缩放元素\r\n   * @param {number} ratioX 水平缩放比例\r\n   * @param {number} ratioY 垂直缩放比例\r\n   * @return {IElement} 元素\r\n   */\r\n  scale(ratioX: number, ratioY?: number) {\r\n    const matrix = this.getMatrix();\r\n    const newMatrix = transform(matrix, [['s', ratioX, ratioY || ratioX]]);\r\n    this.setMatrix(newMatrix);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 以画布左上角 (0, 0) 为中心旋转元素\r\n   * @param {number} radian 旋转角度(弧度值)\r\n   * @return {IElement} 元素\r\n   */\r\n  rotate(radian: number) {\r\n    const matrix = this.getMatrix();\r\n    const newMatrix = transform(matrix, [['r', radian]]);\r\n    this.setMatrix(newMatrix);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 以起始点为中心旋转元素\r\n   * @param {number} radian 旋转角度(弧度值)\r\n   * @return {IElement} 元素\r\n   */\r\n  rotateAtStart(rotate: number): IElement {\r\n    const { x, y } = this.attr();\r\n    const matrix = this.getMatrix();\r\n    const newMatrix = transform(matrix, [\r\n      ['t', -x, -y],\r\n      ['r', rotate],\r\n      ['t', x, y],\r\n    ]);\r\n    this.setMatrix(newMatrix);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 以任意点 (x, y) 为中心旋转元素\r\n   * @param {number} radian 旋转角度(弧度值)\r\n   * @return {IElement} 元素\r\n   */\r\n  rotateAtPoint(x: number, y: number, rotate: number): IElement {\r\n    const matrix = this.getMatrix();\r\n    const newMatrix = transform(matrix, [\r\n      ['t', -x, -y],\r\n      ['r', rotate],\r\n      ['t', x, y],\r\n    ]);\r\n    this.setMatrix(newMatrix);\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default Element;\r\n", "/**\r\n * @fileoverview 矩阵运算，本来是要引入 gl-matrix, 但是考虑到 g-mobile 对大小有限制，同时 g-webgl 使用的 matrix 不一致\r\n * 所以，这里仅实现 2D 几个运算，上层自己引入 gl-matrix\r\n * @author dxq613@gmail.com\r\n */\r\n\r\n/**\r\n * 3阶矩阵相乘\r\n * @param {number[]} a 矩阵1\r\n * @param {number[]} b 矩阵2\r\n */\r\nexport function multiplyMatrix(a: number[], b: number[]) {\r\n  const out = [];\r\n  const a00 = a[0];\r\n  const a01 = a[1];\r\n  const a02 = a[2];\r\n\r\n  const a10 = a[3];\r\n  const a11 = a[4];\r\n  const a12 = a[5];\r\n  const a20 = a[6];\r\n  const a21 = a[7];\r\n  const a22 = a[8];\r\n\r\n  const b00 = b[0];\r\n  const b01 = b[1];\r\n  const b02 = b[2];\r\n  const b10 = b[3];\r\n  const b11 = b[4];\r\n  const b12 = b[5];\r\n  const b20 = b[6];\r\n  const b21 = b[7];\r\n  const b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * 3阶矩阵同2阶向量相乘\r\n * @param {number[]} m 矩阵\r\n * @param {number[]} v 二阶向量\r\n */\r\nexport function multiplyVec2(m: number[], v: number[]) {\r\n  const out = [];\r\n  const x = v[0];\r\n  const y = v[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * 矩阵的逆\r\n * @param {number[]} a 矩阵\r\n */\r\nexport function invert(a: number[]) {\r\n  const out = [];\r\n  const a00 = a[0];\r\n  const a01 = a[1];\r\n  const a02 = a[2];\r\n  const a10 = a[3];\r\n  const a11 = a[4];\r\n  const a12 = a[5];\r\n  const a20 = a[6];\r\n  const a21 = a[7];\r\n  const a22 = a[8];\r\n\r\n  const b01 = a22 * a11 - a12 * a21;\r\n  const b11 = -a22 * a10 + a12 * a20;\r\n  const b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  let det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n", "import { max, min } from '@antv/util';\r\nimport { IContainer, IShape, IGroup, IElement, ICanvas } from '../interfaces';\r\nimport { BBox, ElementFilterFn } from '../types';\r\nimport Timeline from '../animate/timeline';\r\nimport Element from './element';\r\nimport { isFunction, isObject, each, removeFromArray, upperFirst, isAllowCapture } from '../util/util';\r\n\r\nconst SHAPE_MAP = {};\r\nconst INDEX = '_INDEX';\r\n\r\n/**\r\n * 设置 canvas\r\n * @param {IElement} element 元素\r\n * @param {ICanvas}  canvas  画布\r\n */\r\nfunction setCanvas(element: IElement, canvas: ICanvas) {\r\n  element.set('canvas', canvas);\r\n  if (element.isGroup()) {\r\n    const children = element.get('children');\r\n    if (children.length) {\r\n      children.forEach((child) => {\r\n        setCanvas(child, canvas);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 设置 timeline\r\n * @param {IElement} element  元素\r\n * @param {Timeline} timeline 时间轴\r\n */\r\nfunction setTimeline(element: IElement, timeline: Timeline) {\r\n  element.set('timeline', timeline);\r\n  if (element.isGroup()) {\r\n    const children = element.get('children');\r\n    if (children.length) {\r\n      children.forEach((child) => {\r\n        setTimeline(child, timeline);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction contains(container: IContainer, element: IElement): boolean {\r\n  const children = container.getChildren();\r\n  return children.indexOf(element) >= 0;\r\n}\r\n\r\nfunction removeChild(container: IContainer, element: IElement, destroy: boolean = true) {\r\n  // 不再调用 element.remove() 方法，会出现循环调用\r\n  if (destroy) {\r\n    element.destroy();\r\n  } else {\r\n    element.set('parent', null);\r\n    element.set('canvas', null);\r\n  }\r\n  removeFromArray(container.getChildren(), element);\r\n}\r\n\r\nfunction getComparer(compare: Function) {\r\n  return function (left, right) {\r\n    const result = compare(left, right);\r\n    return result === 0 ? left[INDEX] - right[INDEX] : result;\r\n  };\r\n}\r\n\r\nabstract class Container extends Element implements IContainer {\r\n  isCanvas() {\r\n    return false;\r\n  }\r\n\r\n  // 根据子节点确定 BBox\r\n  getBBox(): BBox {\r\n    // 所有的值可能在画布的可视区外\r\n    let minX = Infinity;\r\n    let maxX = -Infinity;\r\n    let minY = Infinity;\r\n    let maxY = -Infinity;\r\n    // 将可见元素、图形以及不为空的图形分组筛选出来，用于包围盒合并\r\n    const children = this.getChildren().filter(\r\n      (child) =>\r\n        child.get('visible') && (!child.isGroup() || (child.isGroup() && (child as IGroup).getChildren().length > 0))\r\n    );\r\n    if (children.length > 0) {\r\n      each(children, (child: IElement) => {\r\n        const { minX: childMinX, maxX: childMaxX, minY: childMinY, maxY: childMaxY } = child.getBBox();\r\n        if (childMinX < minX) {\r\n          minX = childMinX;\r\n        }\r\n        if (childMaxX > maxX) {\r\n          maxX = childMaxX;\r\n        }\r\n        if (childMinY < minY) {\r\n          minY = childMinY;\r\n        }\r\n        if (childMaxY > maxY) {\r\n          maxY = childMaxY;\r\n        }\r\n      });\r\n    } else {\r\n      minX = 0;\r\n      maxX = 0;\r\n      minY = 0;\r\n      maxY = 0;\r\n    }\r\n    const box = {\r\n      x: minX,\r\n      y: minY,\r\n      minX,\r\n      minY,\r\n      maxX,\r\n      maxY,\r\n      width: maxX - minX,\r\n      height: maxY - minY,\r\n    };\r\n    return box;\r\n  }\r\n\r\n  // 获取画布的包围盒\r\n  getCanvasBBox(): BBox {\r\n    let minX = Infinity;\r\n    let maxX = -Infinity;\r\n    let minY = Infinity;\r\n    let maxY = -Infinity;\r\n    // 将可见元素、图形以及不为空的图形分组筛选出来，用于包围盒合并\r\n    const children = this.getChildren().filter(\r\n      (child) =>\r\n        child.get('visible') && (!child.isGroup() || (child.isGroup() && (child as IGroup).getChildren().length > 0))\r\n    );\r\n    if (children.length > 0) {\r\n      each(children, (child: IElement) => {\r\n        const { minX: childMinX, maxX: childMaxX, minY: childMinY, maxY: childMaxY } = child.getCanvasBBox();\r\n        if (childMinX < minX) {\r\n          minX = childMinX;\r\n        }\r\n        if (childMaxX > maxX) {\r\n          maxX = childMaxX;\r\n        }\r\n        if (childMinY < minY) {\r\n          minY = childMinY;\r\n        }\r\n        if (childMaxY > maxY) {\r\n          maxY = childMaxY;\r\n        }\r\n      });\r\n    } else {\r\n      minX = 0;\r\n      maxX = 0;\r\n      minY = 0;\r\n      maxY = 0;\r\n    }\r\n    const box = {\r\n      x: minX,\r\n      y: minY,\r\n      minX,\r\n      minY,\r\n      maxX,\r\n      maxY,\r\n      width: maxX - minX,\r\n      height: maxY - minY,\r\n    };\r\n    return box;\r\n  }\r\n\r\n  getDefaultCfg() {\r\n    const cfg = super.getDefaultCfg();\r\n    cfg['children'] = [];\r\n    return cfg;\r\n  }\r\n\r\n  onAttrChange(name, value, originValue) {\r\n    super.onAttrChange(name, value, originValue);\r\n    if (name === 'matrix') {\r\n      const totalMatrix = this.getTotalMatrix();\r\n      this._applyChildrenMarix(totalMatrix);\r\n    }\r\n  }\r\n\r\n  // 不但应用到自己身上还要应用于子元素\r\n  applyMatrix(matrix: number[]) {\r\n    const preTotalMatrix = this.getTotalMatrix();\r\n    super.applyMatrix(matrix);\r\n    const totalMatrix = this.getTotalMatrix();\r\n    // totalMatrix 没有发生变化时，这里仅考虑两者都为 null 时\r\n    // 不继续向下传递矩阵\r\n    if (totalMatrix === preTotalMatrix) {\r\n      return;\r\n    }\r\n    this._applyChildrenMarix(totalMatrix);\r\n  }\r\n\r\n  // 在子元素上设置矩阵\r\n  _applyChildrenMarix(totalMatrix) {\r\n    const children = this.getChildren();\r\n    each(children, (child) => {\r\n      child.applyMatrix(totalMatrix);\r\n    });\r\n  }\r\n\r\n  // 兼容老版本的接口\r\n  addShape(...args): IShape {\r\n    const type = args[0];\r\n    let cfg = args[1];\r\n    if (isObject(type)) {\r\n      cfg = type;\r\n    } else {\r\n      cfg['type'] = type;\r\n    }\r\n    let shapeType = SHAPE_MAP[cfg.type];\r\n    if (!shapeType) {\r\n      shapeType = upperFirst(cfg.type);\r\n      SHAPE_MAP[cfg.type] = shapeType;\r\n    }\r\n    const ShapeBase = this.getShapeBase();\r\n    const shape = new ShapeBase[shapeType](cfg);\r\n    this.add(shape);\r\n    return shape;\r\n  }\r\n\r\n  addGroup(...args): IGroup {\r\n    const [groupClass, cfg] = args;\r\n    let group;\r\n    if (isFunction(groupClass)) {\r\n      if (cfg) {\r\n        group = new groupClass(cfg);\r\n      } else {\r\n        group = new groupClass({\r\n          // canvas,\r\n          parent: this,\r\n        });\r\n      }\r\n    } else {\r\n      const tmpCfg = groupClass || {};\r\n      const TmpGroupClass = this.getGroupBase();\r\n      group = new TmpGroupClass(tmpCfg);\r\n    }\r\n    this.add(group);\r\n    return group;\r\n  }\r\n\r\n  getCanvas() {\r\n    let canvas;\r\n    if (this.isCanvas()) {\r\n      canvas = this;\r\n    } else {\r\n      canvas = this.get('canvas');\r\n    }\r\n    return canvas;\r\n  }\r\n\r\n  getShape(x: number, y: number, ev: Event): IShape {\r\n    // 如果不支持拾取，则直接返回\r\n    if (!isAllowCapture(this)) {\r\n      return null;\r\n    }\r\n    const children = this.getChildren();\r\n    let shape;\r\n    // 如果容器是 group\r\n    if (!this.isCanvas()) {\r\n      let v = [x, y, 1];\r\n      // 将 x, y 转换成对应于 group 的局部坐标\r\n      v = this.invertFromMatrix(v);\r\n      if (!this.isClipped(v[0], v[1])) {\r\n        shape = this._findShape(children, v[0], v[1], ev);\r\n      }\r\n    } else {\r\n      shape = this._findShape(children, x, y, ev);\r\n    }\r\n    return shape;\r\n  }\r\n\r\n  _findShape(children: IElement[], x: number, y: number, ev: Event) {\r\n    let shape = null;\r\n    for (let i = children.length - 1; i >= 0; i--) {\r\n      const child = children[i];\r\n      if (isAllowCapture(child)) {\r\n        if (child.isGroup()) {\r\n          shape = (child as IGroup).getShape(x, y, ev);\r\n        } else if ((child as IShape).isHit(x, y)) {\r\n          shape = child;\r\n        }\r\n      }\r\n      if (shape) {\r\n        break;\r\n      }\r\n    }\r\n    return shape;\r\n  }\r\n\r\n  add(element: IElement) {\r\n    const canvas = this.getCanvas();\r\n    const children = this.getChildren();\r\n    const timeline = this.get('timeline');\r\n    const preParent = element.getParent();\r\n    if (preParent) {\r\n      removeChild(preParent, element, false);\r\n    }\r\n    element.set('parent', this);\r\n    if (canvas) {\r\n      setCanvas(element, canvas);\r\n    }\r\n    if (timeline) {\r\n      setTimeline(element, timeline);\r\n    }\r\n    children.push(element);\r\n    element.onCanvasChange('add');\r\n    this._applyElementMatrix(element);\r\n  }\r\n\r\n  // 将当前容器的矩阵应用到子元素\r\n  _applyElementMatrix(element) {\r\n    const totalMatrix = this.getTotalMatrix();\r\n    // 添加图形或者分组时，需要把当前图元的矩阵设置进去\r\n    if (totalMatrix) {\r\n      element.applyMatrix(totalMatrix);\r\n    }\r\n  }\r\n\r\n  getChildren(): IElement[] {\r\n    return this.get('children') as IElement[];\r\n  }\r\n\r\n  sort() {\r\n    const children = this.getChildren();\r\n    // 稳定排序\r\n    each(children, (child, index) => {\r\n      child[INDEX] = index;\r\n      return child;\r\n    });\r\n    children.sort(\r\n      getComparer((obj1, obj2) => {\r\n        return obj1.get('zIndex') - obj2.get('zIndex');\r\n      })\r\n    );\r\n    this.onCanvasChange('sort');\r\n  }\r\n\r\n  clear() {\r\n    this.set('clearing', true);\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n    const children = this.getChildren();\r\n    for (let i = children.length - 1; i >= 0; i--) {\r\n      children[i].destroy(); // 销毁子元素\r\n    }\r\n    this.set('children', []);\r\n    this.onCanvasChange('clear');\r\n    this.set('clearing', false);\r\n  }\r\n\r\n  destroy() {\r\n    if (this.get('destroyed')) {\r\n      return;\r\n    }\r\n    this.clear();\r\n    super.destroy();\r\n  }\r\n\r\n  /**\r\n   * 获取第一个子元素\r\n   * @return {IElement} 第一个元素\r\n   */\r\n  getFirst(): IElement {\r\n    return this.getChildByIndex(0);\r\n  }\r\n\r\n  /**\r\n   * 获取最后一个子元素\r\n   * @return {IElement} 元素\r\n   */\r\n  getLast(): IElement {\r\n    const children = this.getChildren();\r\n    return this.getChildByIndex(children.length - 1);\r\n  }\r\n\r\n  /**\r\n   * 根据索引获取子元素\r\n   * @return {IElement} 第一个元素\r\n   */\r\n  getChildByIndex(index: number): IElement {\r\n    const children = this.getChildren();\r\n    return children[index];\r\n  }\r\n\r\n  /**\r\n   * 子元素的数量\r\n   * @return {number} 子元素数量\r\n   */\r\n  getCount(): number {\r\n    const children = this.getChildren();\r\n    return children.length;\r\n  }\r\n\r\n  /**\r\n   * 是否包含对应元素\r\n   * @param {IElement} element 元素\r\n   * @return {boolean}\r\n   */\r\n  contain(element: IElement): boolean {\r\n    const children = this.getChildren();\r\n    return children.indexOf(element) > -1;\r\n  }\r\n\r\n  /**\r\n   * 移除对应子元素\r\n   * @param {IElement} element 子元素\r\n   * @param {boolean} destroy 是否销毁子元素，默认为 true\r\n   */\r\n  removeChild(element: IElement, destroy = true) {\r\n    if (this.contain(element)) {\r\n      element.remove(destroy);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 查找所有匹配的元素\r\n   * @param  {ElementFilterFn}   fn  匹配函数\r\n   * @return {IElement[]} 元素数组\r\n   */\r\n  findAll(fn: ElementFilterFn): IElement[] {\r\n    let rst: IElement[] = [];\r\n    const children = this.getChildren();\r\n    each(children, (element: IElement) => {\r\n      if (fn(element)) {\r\n        rst.push(element);\r\n      }\r\n      if (element.isGroup()) {\r\n        rst = rst.concat((element as IGroup).findAll(fn));\r\n      }\r\n    });\r\n    return rst;\r\n  }\r\n\r\n  /**\r\n   * 查找元素，找到第一个返回\r\n   * @param  {ElementFilterFn} fn    匹配函数\r\n   * @return {IElement|null} 元素，可以为空\r\n   */\r\n  find(fn: ElementFilterFn): IElement {\r\n    let rst: IElement = null;\r\n    const children = this.getChildren();\r\n    each(children, (element: IElement) => {\r\n      if (fn(element)) {\r\n        rst = element;\r\n      } else if (element.isGroup()) {\r\n        rst = (element as IGroup).find(fn);\r\n      }\r\n      if (rst) {\r\n        return false;\r\n      }\r\n    });\r\n    return rst;\r\n  }\r\n\r\n  /**\r\n   * 根据 ID 查找元素\r\n   * @param {string} id 元素 id\r\n   * @return {IElement|null} 元素\r\n   */\r\n  findById(id: string): IElement {\r\n    return this.find((element) => {\r\n      return element.get('id') === id;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 该方法即将废弃，不建议使用\r\n   * 根据 className 查找元素\r\n   * TODO: 该方式定义暂时只给 G6 3.3 以后的版本使用，待 G6 中的 findByClassName 方法移除后，G 也需要同步移除\r\n   * @param {string} className 元素 className\r\n   * @return {IElement | null} 元素\r\n   */\r\n  findByClassName(className: string): IElement {\r\n    return this.find((element) => {\r\n      return element.get('className') === className;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 根据 name 查找元素列表\r\n   * @param {string}      name 元素名称\r\n   * @return {IElement[]} 元素\r\n   */\r\n  findAllByName(name: string): IElement[] {\r\n    return this.findAll((element) => {\r\n      return element.get('name') === name;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Container;\r\n", "import { isEqual, isNumber, isFunction } from '@antv/util';\r\nimport * as d3Timer from 'd3-timer';\r\nimport { interpolate, interpolateArray } from 'd3-interpolate'; // 目前整体动画只需要数值和数组的差值计算\r\nimport { getEasing } from './register';\r\nimport * as PathUtil from '../util/path';\r\nimport { isColorProp, isGradientColor } from '../util/color';\r\nimport { ICanvas, IElement } from '../interfaces';\r\nimport { Animation } from '../types';\r\n\r\nconst IDENTITY_MATRIX = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\r\n/**\r\n * 使用 ratio 进行插值计算来更新属性\r\n * @param {IElement}  shape    元素\r\n * @param {Animation} animation 动画\r\n * @param {number}    ratio    比例\r\n * @return {boolean}  动画是否执行完成\r\n */\r\nfunction _update(shape: IElement, animation: Animation, ratio: number) {\r\n  const cProps = {}; // 此刻属性\r\n  const { fromAttrs, toAttrs } = animation;\r\n  if (shape.destroyed) {\r\n    return;\r\n  }\r\n  let interf; //  差值函数\r\n  for (const k in toAttrs) {\r\n    if (!isEqual(fromAttrs[k], toAttrs[k])) {\r\n      if (k === 'path') {\r\n        let toPath = toAttrs[k];\r\n        let fromPath = fromAttrs[k];\r\n        if (toPath.length > fromPath.length) {\r\n          toPath = PathUtil.parsePathString(toAttrs[k]); // 终点状态\r\n          fromPath = PathUtil.parsePathString(fromAttrs[k]); // 起始状态\r\n          fromPath = PathUtil.fillPathByDiff(fromPath, toPath);\r\n          fromPath = PathUtil.formatPath(fromPath, toPath);\r\n          animation.fromAttrs.path = fromPath;\r\n          animation.toAttrs.path = toPath;\r\n        } else if (!animation.pathFormatted) {\r\n          toPath = PathUtil.parsePathString(toAttrs[k]);\r\n          fromPath = PathUtil.parsePathString(fromAttrs[k]);\r\n          fromPath = PathUtil.formatPath(fromPath, toPath);\r\n          animation.fromAttrs.path = fromPath;\r\n          animation.toAttrs.path = toPath;\r\n          animation.pathFormatted = true;\r\n        }\r\n        cProps[k] = [];\r\n        for (let i = 0; i < toPath.length; i++) {\r\n          const toPathPoint = toPath[i];\r\n          const fromPathPoint = fromPath[i];\r\n          const cPathPoint = [];\r\n          for (let j = 0; j < toPathPoint.length; j++) {\r\n            if (isNumber(toPathPoint[j]) && fromPathPoint && isNumber(fromPathPoint[j])) {\r\n              interf = interpolate(fromPathPoint[j], toPathPoint[j]);\r\n              cPathPoint.push(interf(ratio));\r\n            } else {\r\n              cPathPoint.push(toPathPoint[j]);\r\n            }\r\n          }\r\n          cProps[k].push(cPathPoint);\r\n        }\r\n      } else if (k === 'matrix') {\r\n        /* \r\n         对矩阵进行插值时，需要保证矩阵不为空，为空则使用单位矩阵\r\n         TODO: 二维和三维场景下单位矩阵不同，之后 WebGL 版需要做进一步处理\r\n         */\r\n        const matrixFn = interpolateArray(fromAttrs[k] || IDENTITY_MATRIX, toAttrs[k] || IDENTITY_MATRIX);\r\n        const currentMatrix = matrixFn(ratio);\r\n        cProps[k] = currentMatrix;\r\n      } else if (isColorProp(k) && isGradientColor(toAttrs[k])) {\r\n        cProps[k] = toAttrs[k];\r\n      } else if (!isFunction(toAttrs[k])) {\r\n        // 非函数类型的值才能做插值\r\n        interf = interpolate(fromAttrs[k], toAttrs[k]);\r\n        cProps[k] = interf(ratio);\r\n      }\r\n    }\r\n  }\r\n  shape.attr(cProps);\r\n}\r\n\r\n/**\r\n * 根据自定义帧动画函数 onFrame 来更新属性\r\n * @param {IElement}  shape    元素\r\n * @param {Animation} animation 动画\r\n * @param {number}    elapsed  动画执行时间(毫秒)\r\n * @return {boolean}  动画是否执行完成\r\n */\r\nfunction update(shape: IElement, animation: Animation, elapsed: number) {\r\n  const { startTime, delay } = animation;\r\n  // 如果还没有开始执行或暂停，先不更新\r\n  if (elapsed < startTime + delay || animation._paused) {\r\n    return false;\r\n  }\r\n  let ratio;\r\n  const duration = animation.duration;\r\n  const easing = animation.easing;\r\n  const easeFn = getEasing(easing);\r\n\r\n  // 已执行时间\r\n  elapsed = elapsed - startTime - animation.delay;\r\n  if (animation.repeat) {\r\n    // 如果动画重复执行，则 elapsed > duration，计算 ratio 时需取模\r\n    ratio = (elapsed % duration) / duration;\r\n    ratio = easeFn(ratio);\r\n  } else {\r\n    ratio = elapsed / duration;\r\n    if (ratio < 1) {\r\n      // 动画未执行完\r\n      ratio = easeFn(ratio);\r\n    } else {\r\n      // 动画已执行完\r\n      if (animation.onFrame) {\r\n        shape.attr(animation.onFrame(1));\r\n      } else {\r\n        shape.attr(animation.toAttrs);\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n  if (animation.onFrame) {\r\n    const attrs = animation.onFrame(ratio);\r\n    shape.attr(attrs);\r\n  } else {\r\n    _update(shape, animation, ratio);\r\n  }\r\n  return false;\r\n}\r\n\r\nclass Timeline {\r\n  /**\r\n   * 画布\r\n   * @type {ICanvas}\r\n   */\r\n  canvas: ICanvas;\r\n  /**\r\n   * 执行动画的元素列表\r\n   * @type {IElement[]}\r\n   */\r\n  animators: IElement[] = [];\r\n  /**\r\n   * 当前时间\r\n   * @type {number}\r\n   */\r\n  current: number = 0;\r\n  /**\r\n   * 定时器\r\n   * @type {d3Timer.Timer}\r\n   */\r\n  timer: d3Timer.Timer = null;\r\n\r\n  /**\r\n   * 时间轴构造函数，依赖于画布\r\n   * @param {}\r\n   */\r\n  constructor(canvas: ICanvas) {\r\n    this.canvas = canvas;\r\n  }\r\n\r\n  /**\r\n   * 初始化定时器\r\n   */\r\n  initTimer() {\r\n    let isFinished = false;\r\n    let shape: IElement;\r\n    let animations: Animation[];\r\n    let animation: Animation;\r\n    this.timer = d3Timer.timer((elapsed) => {\r\n      this.current = elapsed;\r\n      if (this.animators.length > 0) {\r\n        for (let i = this.animators.length - 1; i >= 0; i--) {\r\n          shape = this.animators[i];\r\n          if (shape.destroyed) {\r\n            // 如果已经被销毁，直接移出队列\r\n            this.removeAnimator(i);\r\n            continue;\r\n          }\r\n          if (!shape.isAnimatePaused()) {\r\n            animations = shape.get('animations');\r\n            for (let j = animations.length - 1; j >= 0; j--) {\r\n              animation = animations[j];\r\n              isFinished = update(shape, animation, elapsed);\r\n              if (isFinished) {\r\n                animations.splice(j, 1);\r\n                isFinished = false;\r\n                if (animation.callback) {\r\n                  animation.callback();\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (animations.length === 0) {\r\n            this.removeAnimator(i);\r\n          }\r\n        }\r\n        const autoDraw = this.canvas.get('autoDraw');\r\n        // 非自动渲染模式下，手动调用 canvas.draw() 重新渲染\r\n        if (!autoDraw) {\r\n          this.canvas.draw();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 增加动画元素\r\n   */\r\n  addAnimator(shape) {\r\n    this.animators.push(shape);\r\n  }\r\n\r\n  /**\r\n   * 移除动画元素\r\n   */\r\n  removeAnimator(index) {\r\n    this.animators.splice(index, 1);\r\n  }\r\n\r\n  /**\r\n   * 是否有动画在执行\r\n   */\r\n  isAnimating() {\r\n    return !!this.animators.length;\r\n  }\r\n\r\n  /**\r\n   * 停止定时器\r\n   */\r\n  stop() {\r\n    if (this.timer) {\r\n      this.timer.stop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 停止时间轴上所有元素的动画，并置空动画元素列表\r\n   * @param {boolean} toEnd 是否到动画的最终状态，用来透传给动画元素的 stopAnimate 方法\r\n   */\r\n  stopAllAnimations(toEnd = true) {\r\n    this.animators.forEach((animator) => {\r\n      animator.stopAnimate(toEnd);\r\n    });\r\n    this.animators = [];\r\n    this.canvas.draw();\r\n  }\r\n\r\n  /**\r\n   * 获取当前时间\r\n   */\r\n  getTime() {\r\n    return this.current;\r\n  }\r\n}\r\n\r\nexport default Timeline;\r\n", "export default function(constructor, factory, prototype) {\r\n  constructor.prototype = factory.prototype = prototype;\r\n  prototype.constructor = constructor;\r\n}\r\n\r\nexport function extend(parent, definition) {\r\n  var prototype = Object.create(parent.prototype);\r\n  for (var key in definition) prototype[key] = definition[key];\r\n  return prototype;\r\n}\r\n", "import define, {extend} from \"./define.js\";\r\n\r\nexport function Color() {}\r\n\r\nexport var darker = 0.7;\r\nexport var brighter = 1 / darker;\r\n\r\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\r\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\r\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\r\n    reHex = /^#([0-9a-f]{3,8})$/,\r\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\r\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\r\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\r\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\r\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\r\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\r\n\r\nvar named = {\r\n  aliceblue: 0xf0f8ff,\r\n  antiquewhite: 0xfaebd7,\r\n  aqua: 0x00ffff,\r\n  aquamarine: 0x7fffd4,\r\n  azure: 0xf0ffff,\r\n  beige: 0xf5f5dc,\r\n  bisque: 0xffe4c4,\r\n  black: 0x000000,\r\n  blanchedalmond: 0xffebcd,\r\n  blue: 0x0000ff,\r\n  blueviolet: 0x8a2be2,\r\n  brown: 0xa52a2a,\r\n  burlywood: 0xdeb887,\r\n  cadetblue: 0x5f9ea0,\r\n  chartreuse: 0x7fff00,\r\n  chocolate: 0xd2691e,\r\n  coral: 0xff7f50,\r\n  cornflowerblue: 0x6495ed,\r\n  cornsilk: 0xfff8dc,\r\n  crimson: 0xdc143c,\r\n  cyan: 0x00ffff,\r\n  darkblue: 0x00008b,\r\n  darkcyan: 0x008b8b,\r\n  darkgoldenrod: 0xb8860b,\r\n  darkgray: 0xa9a9a9,\r\n  darkgreen: 0x006400,\r\n  darkgrey: 0xa9a9a9,\r\n  darkkhaki: 0xbdb76b,\r\n  darkmagenta: 0x8b008b,\r\n  darkolivegreen: 0x556b2f,\r\n  darkorange: 0xff8c00,\r\n  darkorchid: 0x9932cc,\r\n  darkred: 0x8b0000,\r\n  darksalmon: 0xe9967a,\r\n  darkseagreen: 0x8fbc8f,\r\n  darkslateblue: 0x483d8b,\r\n  darkslategray: 0x2f4f4f,\r\n  darkslategrey: 0x2f4f4f,\r\n  darkturquoise: 0x00ced1,\r\n  darkviolet: 0x9400d3,\r\n  deeppink: 0xff1493,\r\n  deepskyblue: 0x00bfff,\r\n  dimgray: 0x696969,\r\n  dimgrey: 0x696969,\r\n  dodgerblue: 0x1e90ff,\r\n  firebrick: 0xb22222,\r\n  floralwhite: 0xfffaf0,\r\n  forestgreen: 0x228b22,\r\n  fuchsia: 0xff00ff,\r\n  gainsboro: 0xdcdcdc,\r\n  ghostwhite: 0xf8f8ff,\r\n  gold: 0xffd700,\r\n  goldenrod: 0xdaa520,\r\n  gray: 0x808080,\r\n  green: 0x008000,\r\n  greenyellow: 0xadff2f,\r\n  grey: 0x808080,\r\n  honeydew: 0xf0fff0,\r\n  hotpink: 0xff69b4,\r\n  indianred: 0xcd5c5c,\r\n  indigo: 0x4b0082,\r\n  ivory: 0xfffff0,\r\n  khaki: 0xf0e68c,\r\n  lavender: 0xe6e6fa,\r\n  lavenderblush: 0xfff0f5,\r\n  lawngreen: 0x7cfc00,\r\n  lemonchiffon: 0xfffacd,\r\n  lightblue: 0xadd8e6,\r\n  lightcoral: 0xf08080,\r\n  lightcyan: 0xe0ffff,\r\n  lightgoldenrodyellow: 0xfafad2,\r\n  lightgray: 0xd3d3d3,\r\n  lightgreen: 0x90ee90,\r\n  lightgrey: 0xd3d3d3,\r\n  lightpink: 0xffb6c1,\r\n  lightsalmon: 0xffa07a,\r\n  lightseagreen: 0x20b2aa,\r\n  lightskyblue: 0x87cefa,\r\n  lightslategray: 0x778899,\r\n  lightslategrey: 0x778899,\r\n  lightsteelblue: 0xb0c4de,\r\n  lightyellow: 0xffffe0,\r\n  lime: 0x00ff00,\r\n  limegreen: 0x32cd32,\r\n  linen: 0xfaf0e6,\r\n  magenta: 0xff00ff,\r\n  maroon: 0x800000,\r\n  mediumaquamarine: 0x66cdaa,\r\n  mediumblue: 0x0000cd,\r\n  mediumorchid: 0xba55d3,\r\n  mediumpurple: 0x9370db,\r\n  mediumseagreen: 0x3cb371,\r\n  mediumslateblue: 0x7b68ee,\r\n  mediumspringgreen: 0x00fa9a,\r\n  mediumturquoise: 0x48d1cc,\r\n  mediumvioletred: 0xc71585,\r\n  midnightblue: 0x191970,\r\n  mintcream: 0xf5fffa,\r\n  mistyrose: 0xffe4e1,\r\n  moccasin: 0xffe4b5,\r\n  navajowhite: 0xffdead,\r\n  navy: 0x000080,\r\n  oldlace: 0xfdf5e6,\r\n  olive: 0x808000,\r\n  olivedrab: 0x6b8e23,\r\n  orange: 0xffa500,\r\n  orangered: 0xff4500,\r\n  orchid: 0xda70d6,\r\n  palegoldenrod: 0xeee8aa,\r\n  palegreen: 0x98fb98,\r\n  paleturquoise: 0xafeeee,\r\n  palevioletred: 0xdb7093,\r\n  papayawhip: 0xffefd5,\r\n  peachpuff: 0xffdab9,\r\n  peru: 0xcd853f,\r\n  pink: 0xffc0cb,\r\n  plum: 0xdda0dd,\r\n  powderblue: 0xb0e0e6,\r\n  purple: 0x800080,\r\n  rebeccapurple: 0x663399,\r\n  red: 0xff0000,\r\n  rosybrown: 0xbc8f8f,\r\n  royalblue: 0x4169e1,\r\n  saddlebrown: 0x8b4513,\r\n  salmon: 0xfa8072,\r\n  sandybrown: 0xf4a460,\r\n  seagreen: 0x2e8b57,\r\n  seashell: 0xfff5ee,\r\n  sienna: 0xa0522d,\r\n  silver: 0xc0c0c0,\r\n  skyblue: 0x87ceeb,\r\n  slateblue: 0x6a5acd,\r\n  slategray: 0x708090,\r\n  slategrey: 0x708090,\r\n  snow: 0xfffafa,\r\n  springgreen: 0x00ff7f,\r\n  steelblue: 0x4682b4,\r\n  tan: 0xd2b48c,\r\n  teal: 0x008080,\r\n  thistle: 0xd8bfd8,\r\n  tomato: 0xff6347,\r\n  turquoise: 0x40e0d0,\r\n  violet: 0xee82ee,\r\n  wheat: 0xf5deb3,\r\n  white: 0xffffff,\r\n  whitesmoke: 0xf5f5f5,\r\n  yellow: 0xffff00,\r\n  yellowgreen: 0x9acd32\r\n};\r\n\r\ndefine(Color, color, {\r\n  copy(channels) {\r\n    return Object.assign(new this.constructor, this, channels);\r\n  },\r\n  displayable() {\r\n    return this.rgb().displayable();\r\n  },\r\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\r\n  formatHex: color_formatHex,\r\n  formatHex8: color_formatHex8,\r\n  formatHsl: color_formatHsl,\r\n  formatRgb: color_formatRgb,\r\n  toString: color_formatRgb\r\n});\r\n\r\nfunction color_formatHex() {\r\n  return this.rgb().formatHex();\r\n}\r\n\r\nfunction color_formatHex8() {\r\n  return this.rgb().formatHex8();\r\n}\r\n\r\nfunction color_formatHsl() {\r\n  return hslConvert(this).formatHsl();\r\n}\r\n\r\nfunction color_formatRgb() {\r\n  return this.rgb().formatRgb();\r\n}\r\n\r\nexport default function color(format) {\r\n  var m, l;\r\n  format = (format + \"\").trim().toLowerCase();\r\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\r\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\r\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\r\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\r\n      : null) // invalid hex\r\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\r\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\r\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\r\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\r\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\r\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\r\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\r\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\r\n      : null;\r\n}\r\n\r\nfunction rgbn(n) {\r\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\r\n}\r\n\r\nfunction rgba(r, g, b, a) {\r\n  if (a <= 0) r = g = b = NaN;\r\n  return new Rgb(r, g, b, a);\r\n}\r\n\r\nexport function rgbConvert(o) {\r\n  if (!(o instanceof Color)) o = color(o);\r\n  if (!o) return new Rgb;\r\n  o = o.rgb();\r\n  return new Rgb(o.r, o.g, o.b, o.opacity);\r\n}\r\n\r\nexport function rgb(r, g, b, opacity) {\r\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\r\n}\r\n\r\nexport function Rgb(r, g, b, opacity) {\r\n  this.r = +r;\r\n  this.g = +g;\r\n  this.b = +b;\r\n  this.opacity = +opacity;\r\n}\r\n\r\ndefine(Rgb, rgb, extend(Color, {\r\n  brighter(k) {\r\n    k = k == null ? brighter : Math.pow(brighter, k);\r\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\r\n  },\r\n  darker(k) {\r\n    k = k == null ? darker : Math.pow(darker, k);\r\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\r\n  },\r\n  rgb() {\r\n    return this;\r\n  },\r\n  clamp() {\r\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\r\n  },\r\n  displayable() {\r\n    return (-0.5 <= this.r && this.r < 255.5)\r\n        && (-0.5 <= this.g && this.g < 255.5)\r\n        && (-0.5 <= this.b && this.b < 255.5)\r\n        && (0 <= this.opacity && this.opacity <= 1);\r\n  },\r\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\r\n  formatHex: rgb_formatHex,\r\n  formatHex8: rgb_formatHex8,\r\n  formatRgb: rgb_formatRgb,\r\n  toString: rgb_formatRgb\r\n}));\r\n\r\nfunction rgb_formatHex() {\r\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\r\n}\r\n\r\nfunction rgb_formatHex8() {\r\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\r\n}\r\n\r\nfunction rgb_formatRgb() {\r\n  const a = clampa(this.opacity);\r\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\r\n}\r\n\r\nfunction clampa(opacity) {\r\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\r\n}\r\n\r\nfunction clampi(value) {\r\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\r\n}\r\n\r\nfunction hex(value) {\r\n  value = clampi(value);\r\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\r\n}\r\n\r\nfunction hsla(h, s, l, a) {\r\n  if (a <= 0) h = s = l = NaN;\r\n  else if (l <= 0 || l >= 1) h = s = NaN;\r\n  else if (s <= 0) h = NaN;\r\n  return new Hsl(h, s, l, a);\r\n}\r\n\r\nexport function hslConvert(o) {\r\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\r\n  if (!(o instanceof Color)) o = color(o);\r\n  if (!o) return new Hsl;\r\n  if (o instanceof Hsl) return o;\r\n  o = o.rgb();\r\n  var r = o.r / 255,\r\n      g = o.g / 255,\r\n      b = o.b / 255,\r\n      min = Math.min(r, g, b),\r\n      max = Math.max(r, g, b),\r\n      h = NaN,\r\n      s = max - min,\r\n      l = (max + min) / 2;\r\n  if (s) {\r\n    if (r === max) h = (g - b) / s + (g < b) * 6;\r\n    else if (g === max) h = (b - r) / s + 2;\r\n    else h = (r - g) / s + 4;\r\n    s /= l < 0.5 ? max + min : 2 - max - min;\r\n    h *= 60;\r\n  } else {\r\n    s = l > 0 && l < 1 ? 0 : h;\r\n  }\r\n  return new Hsl(h, s, l, o.opacity);\r\n}\r\n\r\nexport function hsl(h, s, l, opacity) {\r\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\r\n}\r\n\r\nfunction Hsl(h, s, l, opacity) {\r\n  this.h = +h;\r\n  this.s = +s;\r\n  this.l = +l;\r\n  this.opacity = +opacity;\r\n}\r\n\r\ndefine(Hsl, hsl, extend(Color, {\r\n  brighter(k) {\r\n    k = k == null ? brighter : Math.pow(brighter, k);\r\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\r\n  },\r\n  darker(k) {\r\n    k = k == null ? darker : Math.pow(darker, k);\r\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\r\n  },\r\n  rgb() {\r\n    var h = this.h % 360 + (this.h < 0) * 360,\r\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\r\n        l = this.l,\r\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\r\n        m1 = 2 * l - m2;\r\n    return new Rgb(\r\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\r\n      hsl2rgb(h, m1, m2),\r\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\r\n      this.opacity\r\n    );\r\n  },\r\n  clamp() {\r\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\r\n  },\r\n  displayable() {\r\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\r\n        && (0 <= this.l && this.l <= 1)\r\n        && (0 <= this.opacity && this.opacity <= 1);\r\n  },\r\n  formatHsl() {\r\n    const a = clampa(this.opacity);\r\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\r\n  }\r\n}));\r\n\r\nfunction clamph(value) {\r\n  value = (value || 0) % 360;\r\n  return value < 0 ? value + 360 : value;\r\n}\r\n\r\nfunction clampt(value) {\r\n  return Math.max(0, Math.min(1, value || 0));\r\n}\r\n\r\n/* From FvD 13.37, CSS Color Module Level 3 */\r\nfunction hsl2rgb(h, m1, m2) {\r\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\r\n      : h < 180 ? m2\r\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\r\n      : m1) * 255;\r\n}\r\n", "export const radians = Math.PI / 180;\r\nexport const degrees = 180 / Math.PI;\r\n", "import define, {extend} from \"./define.js\";\r\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\r\nimport {degrees, radians} from \"./math.js\";\r\n\r\n// https://observablehq.com/@mbostock/lab-and-rgb\r\nconst K = 18,\r\n    Xn = 0.96422,\r\n    Yn = 1,\r\n    Zn = 0.82521,\r\n    t0 = 4 / 29,\r\n    t1 = 6 / 29,\r\n    t2 = 3 * t1 * t1,\r\n    t3 = t1 * t1 * t1;\r\n\r\nfunction labConvert(o) {\r\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\r\n  if (o instanceof Hcl) return hcl2lab(o);\r\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\r\n  var r = rgb2lrgb(o.r),\r\n      g = rgb2lrgb(o.g),\r\n      b = rgb2lrgb(o.b),\r\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\r\n  if (r === g && g === b) x = z = y; else {\r\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\r\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\r\n  }\r\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\r\n}\r\n\r\nexport function gray(l, opacity) {\r\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\r\n}\r\n\r\nexport default function lab(l, a, b, opacity) {\r\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\r\n}\r\n\r\nexport function Lab(l, a, b, opacity) {\r\n  this.l = +l;\r\n  this.a = +a;\r\n  this.b = +b;\r\n  this.opacity = +opacity;\r\n}\r\n\r\ndefine(Lab, lab, extend(Color, {\r\n  brighter(k) {\r\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\r\n  },\r\n  darker(k) {\r\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\r\n  },\r\n  rgb() {\r\n    var y = (this.l + 16) / 116,\r\n        x = isNaN(this.a) ? y : y + this.a / 500,\r\n        z = isNaN(this.b) ? y : y - this.b / 200;\r\n    x = Xn * lab2xyz(x);\r\n    y = Yn * lab2xyz(y);\r\n    z = Zn * lab2xyz(z);\r\n    return new Rgb(\r\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\r\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\r\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\r\n      this.opacity\r\n    );\r\n  }\r\n}));\r\n\r\nfunction xyz2lab(t) {\r\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\r\n}\r\n\r\nfunction lab2xyz(t) {\r\n  return t > t1 ? t * t * t : t2 * (t - t0);\r\n}\r\n\r\nfunction lrgb2rgb(x) {\r\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\r\n}\r\n\r\nfunction rgb2lrgb(x) {\r\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\r\n}\r\n\r\nfunction hclConvert(o) {\r\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\r\n  if (!(o instanceof Lab)) o = labConvert(o);\r\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\r\n  var h = Math.atan2(o.b, o.a) * degrees;\r\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\r\n}\r\n\r\nexport function lch(l, c, h, opacity) {\r\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\r\n}\r\n\r\nexport function hcl(h, c, l, opacity) {\r\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\r\n}\r\n\r\nexport function Hcl(h, c, l, opacity) {\r\n  this.h = +h;\r\n  this.c = +c;\r\n  this.l = +l;\r\n  this.opacity = +opacity;\r\n}\r\n\r\nfunction hcl2lab(o) {\r\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\r\n  var h = o.h * radians;\r\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\r\n}\r\n\r\ndefine(Hcl, hcl, extend(Color, {\r\n  brighter(k) {\r\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\r\n  },\r\n  darker(k) {\r\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\r\n  },\r\n  rgb() {\r\n    return hcl2lab(this).rgb();\r\n  }\r\n}));\r\n", "import define, {extend} from \"./define.js\";\r\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\r\nimport {degrees, radians} from \"./math.js\";\r\n\r\nvar A = -0.14861,\r\n    B = +1.78277,\r\n    C = -0.29227,\r\n    D = -0.90649,\r\n    E = +1.97294,\r\n    ED = E * D,\r\n    EB = E * B,\r\n    BC_DA = B * C - D * A;\r\n\r\nfunction cubehelixConvert(o) {\r\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\r\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\r\n  var r = o.r / 255,\r\n      g = o.g / 255,\r\n      b = o.b / 255,\r\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\r\n      bl = b - l,\r\n      k = (E * (g - l) - C * bl) / D,\r\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\r\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\r\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\r\n}\r\n\r\nexport default function cubehelix(h, s, l, opacity) {\r\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\r\n}\r\n\r\nexport function Cubehelix(h, s, l, opacity) {\r\n  this.h = +h;\r\n  this.s = +s;\r\n  this.l = +l;\r\n  this.opacity = +opacity;\r\n}\r\n\r\ndefine(Cubehelix, cubehelix, extend(Color, {\r\n  brighter(k) {\r\n    k = k == null ? brighter : Math.pow(brighter, k);\r\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\r\n  },\r\n  darker(k) {\r\n    k = k == null ? darker : Math.pow(darker, k);\r\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\r\n  },\r\n  rgb() {\r\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\r\n        l = +this.l,\r\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\r\n        cosh = Math.cos(h),\r\n        sinh = Math.sin(h);\r\n    return new Rgb(\r\n      255 * (l + a * (A * cosh + B * sinh)),\r\n      255 * (l + a * (C * cosh + D * sinh)),\r\n      255 * (l + a * (E * cosh)),\r\n      this.opacity\r\n    );\r\n  }\r\n}));\r\n", "export function basis(t1, v0, v1, v2, v3) {\r\n  var t2 = t1 * t1, t3 = t2 * t1;\r\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\r\n      + (4 - 6 * t2 + 3 * t3) * v1\r\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\r\n      + t3 * v3) / 6;\r\n}\r\n\r\nexport default function(values) {\r\n  var n = values.length - 1;\r\n  return function(t) {\r\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\r\n        v1 = values[i],\r\n        v2 = values[i + 1],\r\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\r\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\r\n    return basis((t - i / n) * n, v0, v1, v2, v3);\r\n  };\r\n}\r\n", "import {basis} from \"./basis.js\";\r\n\r\nexport default function(values) {\r\n  var n = values.length;\r\n  return function(t) {\r\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\r\n        v0 = values[(i + n - 1) % n],\r\n        v1 = values[i % n],\r\n        v2 = values[(i + 1) % n],\r\n        v3 = values[(i + 2) % n];\r\n    return basis((t - i / n) * n, v0, v1, v2, v3);\r\n  };\r\n}\r\n", "export default x => () => x;\r\n", "import constant from \"./constant.js\";\r\n\r\nfunction linear(a, d) {\r\n  return function(t) {\r\n    return a + t * d;\r\n  };\r\n}\r\n\r\nfunction exponential(a, b, y) {\r\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\r\n    return Math.pow(a + t * b, y);\r\n  };\r\n}\r\n\r\nexport function hue(a, b) {\r\n  var d = b - a;\r\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\r\n}\r\n\r\nexport function gamma(y) {\r\n  return (y = +y) === 1 ? nogamma : function(a, b) {\r\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\r\n  };\r\n}\r\n\r\nexport default function nogamma(a, b) {\r\n  var d = b - a;\r\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\r\n}\r\n", "import {rgb as colorRgb} from \"d3-color\";\r\nimport basis from \"./basis.js\";\r\nimport basisClosed from \"./basisClosed.js\";\r\nimport nogamma, {gamma} from \"./color.js\";\r\n\r\nexport default (function rgbGamma(y) {\r\n  var color = gamma(y);\r\n\r\n  function rgb(start, end) {\r\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\r\n        g = color(start.g, end.g),\r\n        b = color(start.b, end.b),\r\n        opacity = nogamma(start.opacity, end.opacity);\r\n    return function(t) {\r\n      start.r = r(t);\r\n      start.g = g(t);\r\n      start.b = b(t);\r\n      start.opacity = opacity(t);\r\n      return start + \"\";\r\n    };\r\n  }\r\n\r\n  rgb.gamma = rgbGamma;\r\n\r\n  return rgb;\r\n})(1);\r\n\r\nfunction rgbSpline(spline) {\r\n  return function(colors) {\r\n    var n = colors.length,\r\n        r = new Array(n),\r\n        g = new Array(n),\r\n        b = new Array(n),\r\n        i, color;\r\n    for (i = 0; i < n; ++i) {\r\n      color = colorRgb(colors[i]);\r\n      r[i] = color.r || 0;\r\n      g[i] = color.g || 0;\r\n      b[i] = color.b || 0;\r\n    }\r\n    r = spline(r);\r\n    g = spline(g);\r\n    b = spline(b);\r\n    color.opacity = 1;\r\n    return function(t) {\r\n      color.r = r(t);\r\n      color.g = g(t);\r\n      color.b = b(t);\r\n      return color + \"\";\r\n    };\r\n  };\r\n}\r\n\r\nexport var rgbBasis = rgbSpline(basis);\r\nexport var rgbBasisClosed = rgbSpline(basisClosed);\r\n", "export default function(a, b) {\r\n  if (!b) b = [];\r\n  var n = a ? Math.min(b.length, a.length) : 0,\r\n      c = b.slice(),\r\n      i;\r\n  return function(t) {\r\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\r\n    return c;\r\n  };\r\n}\r\n\r\nexport function isNumberArray(x) {\r\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\r\n}\r\n", "import value from \"./value.js\";\r\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\r\n\r\nexport default function(a, b) {\r\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\r\n}\r\n\r\nexport function genericArray(a, b) {\r\n  var nb = b ? b.length : 0,\r\n      na = a ? Math.min(nb, a.length) : 0,\r\n      x = new Array(na),\r\n      c = new Array(nb),\r\n      i;\r\n\r\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\r\n  for (; i < nb; ++i) c[i] = b[i];\r\n\r\n  return function(t) {\r\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\r\n    return c;\r\n  };\r\n}\r\n", "export default function(a, b) {\r\n  var d = new Date;\r\n  return a = +a, b = +b, function(t) {\r\n    return d.setTime(a * (1 - t) + b * t), d;\r\n  };\r\n}\r\n", "export default function(a, b) {\r\n  return a = +a, b = +b, function(t) {\r\n    return a * (1 - t) + b * t;\r\n  };\r\n}\r\n", "import value from \"./value.js\";\r\n\r\nexport default function(a, b) {\r\n  var i = {},\r\n      c = {},\r\n      k;\r\n\r\n  if (a === null || typeof a !== \"object\") a = {};\r\n  if (b === null || typeof b !== \"object\") b = {};\r\n\r\n  for (k in b) {\r\n    if (k in a) {\r\n      i[k] = value(a[k], b[k]);\r\n    } else {\r\n      c[k] = b[k];\r\n    }\r\n  }\r\n\r\n  return function(t) {\r\n    for (k in i) c[k] = i[k](t);\r\n    return c;\r\n  };\r\n}\r\n", "import number from \"./number.js\";\r\n\r\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\r\n    reB = new RegExp(reA.source, \"g\");\r\n\r\nfunction zero(b) {\r\n  return function() {\r\n    return b;\r\n  };\r\n}\r\n\r\nfunction one(b) {\r\n  return function(t) {\r\n    return b(t) + \"\";\r\n  };\r\n}\r\n\r\nexport default function(a, b) {\r\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\r\n      am, // current match in a\r\n      bm, // current match in b\r\n      bs, // string preceding current number in b, if any\r\n      i = -1, // index in s\r\n      s = [], // string constants and placeholders\r\n      q = []; // number interpolators\r\n\r\n  // Coerce inputs to strings.\r\n  a = a + \"\", b = b + \"\";\r\n\r\n  // Interpolate pairs of numbers in a & b.\r\n  while ((am = reA.exec(a))\r\n      && (bm = reB.exec(b))) {\r\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\r\n      bs = b.slice(bi, bs);\r\n      if (s[i]) s[i] += bs; // coalesce with previous string\r\n      else s[++i] = bs;\r\n    }\r\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\r\n      if (s[i]) s[i] += bm; // coalesce with previous string\r\n      else s[++i] = bm;\r\n    } else { // interpolate non-matching numbers\r\n      s[++i] = null;\r\n      q.push({i: i, x: number(am, bm)});\r\n    }\r\n    bi = reB.lastIndex;\r\n  }\r\n\r\n  // Add remains of b.\r\n  if (bi < b.length) {\r\n    bs = b.slice(bi);\r\n    if (s[i]) s[i] += bs; // coalesce with previous string\r\n    else s[++i] = bs;\r\n  }\r\n\r\n  // Special optimization for only a single match.\r\n  // Otherwise, interpolate each of the numbers and rejoin the string.\r\n  return s.length < 2 ? (q[0]\r\n      ? one(q[0].x)\r\n      : zero(b))\r\n      : (b = q.length, function(t) {\r\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\r\n          return s.join(\"\");\r\n        });\r\n}\r\n", "import {color} from \"d3-color\";\r\nimport rgb from \"./rgb.js\";\r\nimport {genericArray} from \"./array.js\";\r\nimport date from \"./date.js\";\r\nimport number from \"./number.js\";\r\nimport object from \"./object.js\";\r\nimport string from \"./string.js\";\r\nimport constant from \"./constant.js\";\r\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\r\n\r\nexport default function(a, b) {\r\n  var t = typeof b, c;\r\n  return b == null || t === \"boolean\" ? constant(b)\r\n      : (t === \"number\" ? number\r\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\r\n      : b instanceof color ? rgb\r\n      : b instanceof Date ? date\r\n      : isNumberArray(b) ? numberArray\r\n      : Array.isArray(b) ? genericArray\r\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\r\n      : number)(a, b);\r\n}\r\n", "var degrees = 180 / Math.PI;\r\n\r\nexport var identity = {\r\n  translateX: 0,\r\n  translateY: 0,\r\n  rotate: 0,\r\n  skewX: 0,\r\n  scaleX: 1,\r\n  scaleY: 1\r\n};\r\n\r\nexport default function(a, b, c, d, e, f) {\r\n  var scaleX, scaleY, skewX;\r\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\r\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\r\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\r\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\r\n  return {\r\n    translateX: e,\r\n    translateY: f,\r\n    rotate: Math.atan2(b, a) * degrees,\r\n    skewX: Math.atan(skewX) * degrees,\r\n    scaleX: scaleX,\r\n    scaleY: scaleY\r\n  };\r\n}\r\n", "import decompose, {identity} from \"./decompose.js\";\r\n\r\nvar svgNode;\r\n\r\n/* eslint-disable no-undef */\r\nexport function parseCss(value) {\r\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\r\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\r\n}\r\n\r\nexport function parseSvg(value) {\r\n  if (value == null) return identity;\r\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n  svgNode.setAttribute(\"transform\", value);\r\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\r\n  value = value.matrix;\r\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\r\n}\r\n", "import number from \"../number.js\";\r\nimport {parseCss, parseSvg} from \"./parse.js\";\r\n\r\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\r\n\r\n  function pop(s) {\r\n    return s.length ? s.pop() + \" \" : \"\";\r\n  }\r\n\r\n  function translate(xa, ya, xb, yb, s, q) {\r\n    if (xa !== xb || ya !== yb) {\r\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\r\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\r\n    } else if (xb || yb) {\r\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\r\n    }\r\n  }\r\n\r\n  function rotate(a, b, s, q) {\r\n    if (a !== b) {\r\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\r\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\r\n    } else if (b) {\r\n      s.push(pop(s) + \"rotate(\" + b + degParen);\r\n    }\r\n  }\r\n\r\n  function skewX(a, b, s, q) {\r\n    if (a !== b) {\r\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\r\n    } else if (b) {\r\n      s.push(pop(s) + \"skewX(\" + b + degParen);\r\n    }\r\n  }\r\n\r\n  function scale(xa, ya, xb, yb, s, q) {\r\n    if (xa !== xb || ya !== yb) {\r\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\r\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\r\n    } else if (xb !== 1 || yb !== 1) {\r\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\r\n    }\r\n  }\r\n\r\n  return function(a, b) {\r\n    var s = [], // string constants and placeholders\r\n        q = []; // number interpolators\r\n    a = parse(a), b = parse(b);\r\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\r\n    rotate(a.rotate, b.rotate, s, q);\r\n    skewX(a.skewX, b.skewX, s, q);\r\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\r\n    a = b = null; // gc\r\n    return function(t) {\r\n      var i = -1, n = q.length, o;\r\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\r\n      return s.join(\"\");\r\n    };\r\n  };\r\n}\r\n\r\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\r\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\r\n", "var epsilon2 = 1e-12;\r\n\r\nfunction cosh(x) {\r\n  return ((x = Math.exp(x)) + 1 / x) / 2;\r\n}\r\n\r\nfunction sinh(x) {\r\n  return ((x = Math.exp(x)) - 1 / x) / 2;\r\n}\r\n\r\nfunction tanh(x) {\r\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\r\n}\r\n\r\nexport default (function zoomRho(rho, rho2, rho4) {\r\n\r\n  // p0 = [ux0, uy0, w0]\r\n  // p1 = [ux1, uy1, w1]\r\n  function zoom(p0, p1) {\r\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\r\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\r\n        dx = ux1 - ux0,\r\n        dy = uy1 - uy0,\r\n        d2 = dx * dx + dy * dy,\r\n        i,\r\n        S;\r\n\r\n    // Special case for u0 ≅ u1.\r\n    if (d2 < epsilon2) {\r\n      S = Math.log(w1 / w0) / rho;\r\n      i = function(t) {\r\n        return [\r\n          ux0 + t * dx,\r\n          uy0 + t * dy,\r\n          w0 * Math.exp(rho * t * S)\r\n        ];\r\n      }\r\n    }\r\n\r\n    // General case.\r\n    else {\r\n      var d1 = Math.sqrt(d2),\r\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\r\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\r\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\r\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\r\n      S = (r1 - r0) / rho;\r\n      i = function(t) {\r\n        var s = t * S,\r\n            coshr0 = cosh(r0),\r\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\r\n        return [\r\n          ux0 + u * dx,\r\n          uy0 + u * dy,\r\n          w0 * coshr0 / cosh(rho * s + r0)\r\n        ];\r\n      }\r\n    }\r\n\r\n    i.duration = S * 1000 * rho / Math.SQRT2;\r\n\r\n    return i;\r\n  }\r\n\r\n  zoom.rho = function(_) {\r\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\r\n    return zoomRho(_1, _2, _4);\r\n  };\r\n\r\n  return zoom;\r\n})(Math.SQRT2, 2, 4);\r\n", "import {hsl as colorHsl} from \"d3-color\";\r\nimport color, {hue} from \"./color.js\";\r\n\r\nfunction hsl(hue) {\r\n  return function(start, end) {\r\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\r\n        s = color(start.s, end.s),\r\n        l = color(start.l, end.l),\r\n        opacity = color(start.opacity, end.opacity);\r\n    return function(t) {\r\n      start.h = h(t);\r\n      start.s = s(t);\r\n      start.l = l(t);\r\n      start.opacity = opacity(t);\r\n      return start + \"\";\r\n    };\r\n  }\r\n}\r\n\r\nexport default hsl(hue);\r\nexport var hslLong = hsl(color);\r\n", "import {hcl as colorHcl} from \"d3-color\";\r\nimport color, {hue} from \"./color.js\";\r\n\r\nfunction hcl(hue) {\r\n  return function(start, end) {\r\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\r\n        c = color(start.c, end.c),\r\n        l = color(start.l, end.l),\r\n        opacity = color(start.opacity, end.opacity);\r\n    return function(t) {\r\n      start.h = h(t);\r\n      start.c = c(t);\r\n      start.l = l(t);\r\n      start.opacity = opacity(t);\r\n      return start + \"\";\r\n    };\r\n  }\r\n}\r\n\r\nexport default hcl(hue);\r\nexport var hclLong = hcl(color);\r\n", "import {cubehelix as colorCubehelix} from \"d3-color\";\r\nimport color, {hue} from \"./color.js\";\r\n\r\nfunction cubehelix(hue) {\r\n  return (function cubehelixGamma(y) {\r\n    y = +y;\r\n\r\n    function cubehelix(start, end) {\r\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\r\n          s = color(start.s, end.s),\r\n          l = color(start.l, end.l),\r\n          opacity = color(start.opacity, end.opacity);\r\n      return function(t) {\r\n        start.h = h(t);\r\n        start.s = s(t);\r\n        start.l = l(Math.pow(t, y));\r\n        start.opacity = opacity(t);\r\n        return start + \"\";\r\n      };\r\n    }\r\n\r\n    cubehelix.gamma = cubehelixGamma;\r\n\r\n    return cubehelix;\r\n  })(1);\r\n}\r\n\r\nexport default cubehelix(hue);\r\nexport var cubehelixLong = cubehelix(color);\r\n", "export {\r\n  linear as easeLinear\r\n} from \"./linear.js\";\r\n\r\nexport {\r\n  quadInOut as easeQuad,\r\n  quadIn as easeQuadIn,\r\n  quadOut as easeQuadOut,\r\n  quadInOut as easeQuadInOut\r\n} from \"./quad.js\";\r\n\r\nexport {\r\n  cubicInOut as easeCubic,\r\n  cubicIn as easeCubicIn,\r\n  cubicOut as easeCubicOut,\r\n  cubicInOut as easeCubicInOut\r\n} from \"./cubic.js\";\r\n\r\nexport {\r\n  polyInOut as easePoly,\r\n  polyIn as easePolyIn,\r\n  polyOut as easePolyOut,\r\n  polyInOut as easePolyInOut\r\n} from \"./poly.js\";\r\n\r\nexport {\r\n  sinInOut as easeSin,\r\n  sinIn as easeSinIn,\r\n  sinOut as easeSinOut,\r\n  sinInOut as easeSinInOut\r\n} from \"./sin.js\";\r\n\r\nexport {\r\n  expInOut as easeExp,\r\n  expIn as easeExpIn,\r\n  expOut as easeExpOut,\r\n  expInOut as easeExpInOut\r\n} from \"./exp.js\";\r\n\r\nexport {\r\n  circleInOut as easeCircle,\r\n  circleIn as easeCircleIn,\r\n  circleOut as easeCircleOut,\r\n  circleInOut as easeCircleInOut\r\n} from \"./circle.js\";\r\n\r\nexport {\r\n  bounceOut as easeBounce,\r\n  bounceIn as easeBounceIn,\r\n  bounceOut as easeBounceOut,\r\n  bounceInOut as easeBounceInOut\r\n} from \"./bounce.js\";\r\n\r\nexport {\r\n  backInOut as easeBack,\r\n  backIn as easeBackIn,\r\n  backOut as easeBackOut,\r\n  backInOut as easeBackInOut\r\n} from \"./back.js\";\r\n\r\nexport {\r\n  elasticOut as easeElastic,\r\n  elasticIn as easeElasticIn,\r\n  elasticOut as easeElasticOut,\r\n  elasticInOut as easeElasticInOut\r\n} from \"./elastic.js\";\r\n", "export function linear(t) {\r\n  return +t;\r\n}\r\n", "export function quadIn(t) {\r\n  return t * t;\r\n}\r\n\r\nexport function quadOut(t) {\r\n  return t * (2 - t);\r\n}\r\n\r\nexport function quadInOut(t) {\r\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\r\n}\r\n", "export function cubicIn(t) {\r\n  return t * t * t;\r\n}\r\n\r\nexport function cubicOut(t) {\r\n  return --t * t * t + 1;\r\n}\r\n\r\nexport function cubicInOut(t) {\r\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\r\n}\r\n", "var exponent = 3;\r\n\r\nexport var polyIn = (function custom(e) {\r\n  e = +e;\r\n\r\n  function polyIn(t) {\r\n    return Math.pow(t, e);\r\n  }\r\n\r\n  polyIn.exponent = custom;\r\n\r\n  return polyIn;\r\n})(exponent);\r\n\r\nexport var polyOut = (function custom(e) {\r\n  e = +e;\r\n\r\n  function polyOut(t) {\r\n    return 1 - Math.pow(1 - t, e);\r\n  }\r\n\r\n  polyOut.exponent = custom;\r\n\r\n  return polyOut;\r\n})(exponent);\r\n\r\nexport var polyInOut = (function custom(e) {\r\n  e = +e;\r\n\r\n  function polyInOut(t) {\r\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\r\n  }\r\n\r\n  polyInOut.exponent = custom;\r\n\r\n  return polyInOut;\r\n})(exponent);\r\n", "var pi = Math.PI,\r\n    halfPi = pi / 2;\r\n\r\nexport function sinIn(t) {\r\n  return (+t === 1) ? 1 : 1 - Math.cos(t * halfPi);\r\n}\r\n\r\nexport function sinOut(t) {\r\n  return Math.sin(t * halfPi);\r\n}\r\n\r\nexport function sinInOut(t) {\r\n  return (1 - Math.cos(pi * t)) / 2;\r\n}\r\n", "// tpmt is two power minus ten times t scaled to [0,1]\r\nexport function tpmt(x) {\r\n  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;\r\n}\r\n", "import {tpmt} from \"./math.js\";\r\n\r\nexport function expIn(t) {\r\n  return tpmt(1 - +t);\r\n}\r\n\r\nexport function expOut(t) {\r\n  return 1 - tpmt(t);\r\n}\r\n\r\nexport function expInOut(t) {\r\n  return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;\r\n}\r\n", "export function circleIn(t) {\r\n  return 1 - Math.sqrt(1 - t * t);\r\n}\r\n\r\nexport function circleOut(t) {\r\n  return Math.sqrt(1 - --t * t);\r\n}\r\n\r\nexport function circleInOut(t) {\r\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\r\n}\r\n", "var b1 = 4 / 11,\r\n    b2 = 6 / 11,\r\n    b3 = 8 / 11,\r\n    b4 = 3 / 4,\r\n    b5 = 9 / 11,\r\n    b6 = 10 / 11,\r\n    b7 = 15 / 16,\r\n    b8 = 21 / 22,\r\n    b9 = 63 / 64,\r\n    b0 = 1 / b1 / b1;\r\n\r\nexport function bounceIn(t) {\r\n  return 1 - bounceOut(1 - t);\r\n}\r\n\r\nexport function bounceOut(t) {\r\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\r\n}\r\n\r\nexport function bounceInOut(t) {\r\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\r\n}\r\n", "var overshoot = 1.70158;\r\n\r\nexport var backIn = (function custom(s) {\r\n  s = +s;\r\n\r\n  function backIn(t) {\r\n    return (t = +t) * t * (s * (t - 1) + t);\r\n  }\r\n\r\n  backIn.overshoot = custom;\r\n\r\n  return backIn;\r\n})(overshoot);\r\n\r\nexport var backOut = (function custom(s) {\r\n  s = +s;\r\n\r\n  function backOut(t) {\r\n    return --t * t * ((t + 1) * s + t) + 1;\r\n  }\r\n\r\n  backOut.overshoot = custom;\r\n\r\n  return backOut;\r\n})(overshoot);\r\n\r\nexport var backInOut = (function custom(s) {\r\n  s = +s;\r\n\r\n  function backInOut(t) {\r\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\r\n  }\r\n\r\n  backInOut.overshoot = custom;\r\n\r\n  return backInOut;\r\n})(overshoot);\r\n", "import {tpmt} from \"./math.js\";\r\n\r\nvar tau = 2 * Math.PI,\r\n    amplitude = 1,\r\n    period = 0.3;\r\n\r\nexport var elasticIn = (function custom(a, p) {\r\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\r\n\r\n  function elasticIn(t) {\r\n    return a * tpmt(-(--t)) * Math.sin((s - t) / p);\r\n  }\r\n\r\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\r\n  elasticIn.period = function(p) { return custom(a, p); };\r\n\r\n  return elasticIn;\r\n})(amplitude, period);\r\n\r\nexport var elasticOut = (function custom(a, p) {\r\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\r\n\r\n  function elasticOut(t) {\r\n    return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);\r\n  }\r\n\r\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\r\n  elasticOut.period = function(p) { return custom(a, p); };\r\n\r\n  return elasticOut;\r\n})(amplitude, period);\r\n\r\nexport var elasticInOut = (function custom(a, p) {\r\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\r\n\r\n  function elasticInOut(t) {\r\n    return ((t = t * 2 - 1) < 0\r\n        ? a * tpmt(-t) * Math.sin((s - t) / p)\r\n        : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;\r\n  }\r\n\r\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\r\n  elasticInOut.period = function(p) { return custom(a, p); };\r\n\r\n  return elasticInOut;\r\n})(amplitude, period);\r\n", "import * as d3Ease from 'd3-ease';\r\n\r\ntype EaseFn = (t: number) => number;\r\n\r\ninterface EasingMap {\r\n  [key: string]: EaseFn;\r\n}\r\n\r\nconst EASING_MAP: EasingMap = {};\r\n\r\n/**\r\n * 根据名称获取对应的动画缓动函数\r\n * @param type 动画缓动函数名称\r\n */\r\nexport function getEasing(type: string) {\r\n  // 默认从 d3-ease 中获取\r\n  return EASING_MAP[type.toLowerCase()] || d3Ease[type];\r\n}\r\n\r\n/**\r\n * 注册动画缓动函数\r\n * @param type 动画缓动函数名称\r\n * @param easeFn 动画缓动函数\r\n */\r\nexport function registerEasing(type: string, easeFn: EaseFn) {\r\n  EASING_MAP[type.toLowerCase()] = easeFn;\r\n}\r\n", "export const isColorProp = (prop) => ['fill', 'stroke', 'fillStyle', 'strokeStyle'].includes(prop);\r\n\r\nexport const isGradientColor = (val) => /^[r,R,L,l]{1}[\\s]*\\(/.test(val);\r\n", "/**\r\n * @fileoverview 事件处理器\r\n * @author dxq613@gmail.com\r\n */\r\nimport GraphEvent from './graph-event';\r\nimport { ICanvas, IShape } from '../interfaces';\r\nimport { each, isParent } from '../util/util';\r\nconst CLICK_OFFSET = 40;\r\nconst LEFT_BTN_CODE = 0;\r\nconst DELEGATION_SPLIT = ':';\r\n\r\nconst EVENTS = [\r\n  'mousedown',\r\n  'mouseup',\r\n  'dblclick',\r\n  'mouseout',\r\n  'mouseover',\r\n  'mousemove',\r\n  'mouseleave',\r\n  'mouseenter',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchend',\r\n  'dragenter',\r\n  'dragover',\r\n  'dragleave',\r\n  'drop',\r\n  'contextmenu',\r\n  'mousewheel',\r\n];\r\n\r\n// 是否有委托事件监听\r\nfunction hasDelegation(events, type) {\r\n  for (const key in events) {\r\n    if (events.hasOwnProperty(key) && key.indexOf(DELEGATION_SPLIT + type) >= 0) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n// 触发目标事件，目标只能是 shape 或 canvas\r\nfunction emitTargetEvent(target, type, eventObj) {\r\n  eventObj.name = type;\r\n  eventObj.target = target;\r\n  eventObj.currentTarget = target;\r\n  eventObj.delegateTarget = target;\r\n  target.emit(type, eventObj);\r\n}\r\n\r\n// 事件冒泡, enter 和 leave 需要对 fromShape 和 toShape 进行判同\r\nfunction bubbleEvent(container, type, eventObj) {\r\n  if (eventObj.bubbles) {\r\n    let relativeShape;\r\n    let isOverEvent = false;\r\n    if (type === 'mouseenter') {\r\n      relativeShape = eventObj.fromShape;\r\n      isOverEvent = true;\r\n    } else if (type === 'mouseleave') {\r\n      isOverEvent = true;\r\n      relativeShape = eventObj.toShape;\r\n    }\r\n    // canvas 上的 mouseenter， mouseleave 事件，仅当进入或者移出 canvas 时触发\r\n    if (container.isCanvas() && isOverEvent) {\r\n      return;\r\n    }\r\n    // 如果相关图形同当前图形在同一个容器内，不触发事件\r\n    if (relativeShape && isParent(container, relativeShape)) {\r\n      // 阻止继续向上冒泡\r\n      eventObj.bubbles = false;\r\n      return;\r\n    }\r\n    // 事件名称可能在委托过程中被修改，因此事件冒泡时需要重新设置事件名称\r\n    eventObj.name = type;\r\n    eventObj.currentTarget = container;\r\n    eventObj.delegateTarget = container;\r\n    container.emit(type, eventObj);\r\n  }\r\n}\r\n\r\nclass EventController {\r\n  // 画布容器\r\n  private canvas: ICanvas;\r\n  // 正在被拖拽的图形\r\n  private draggingShape: IShape = null;\r\n  private dragging: boolean = false;\r\n  // 当前鼠标/touch所在位置的图形\r\n  private currentShape: IShape = null;\r\n  private mousedownShape: IShape = null;\r\n  private mousedownPoint = null;\r\n  private mousedownTimeStamp;\r\n\r\n  constructor(cfg) {\r\n    this.canvas = cfg.canvas;\r\n  }\r\n\r\n  init() {\r\n    this._bindEvents();\r\n  }\r\n\r\n  // 注册事件\r\n  _bindEvents() {\r\n    const el = this.canvas.get('el');\r\n    each(EVENTS, (eventName) => {\r\n      el.addEventListener(eventName, this._eventCallback);\r\n    });\r\n\r\n    if (document) {\r\n      // 处理移动到外面没有触发 shape mouse leave 的事件\r\n      // 处理拖拽到外部的问题\r\n      document.addEventListener('mousemove', this._onDocumentMove);\r\n      // 处理拖拽过程中在外部释放鼠标的问题\r\n      document.addEventListener('mouseup', this._onDocumentMouseUp);\r\n    }\r\n  }\r\n\r\n  // 清理事件\r\n  _clearEvents() {\r\n    const el = this.canvas.get('el');\r\n    each(EVENTS, (eventName) => {\r\n      el.removeEventListener(eventName, this._eventCallback);\r\n    });\r\n    if (document) {\r\n      document.removeEventListener('mousemove', this._onDocumentMove);\r\n      document.removeEventListener('mouseup', this._onDocumentMouseUp);\r\n    }\r\n  }\r\n\r\n  _getEventObj(type, event, point, target, fromShape, toShape) {\r\n    const eventObj = new GraphEvent(type, event);\r\n    eventObj.fromShape = fromShape;\r\n    eventObj.toShape = toShape;\r\n    eventObj.x = point.x;\r\n    eventObj.y = point.y;\r\n    eventObj.clientX = point.clientX;\r\n    eventObj.clientY = point.clientY;\r\n\r\n    eventObj.propagationPath.push(target);\r\n    // 事件的x,y应该是基于画布左上角的，与canvas的matrix无关\r\n    return eventObj;\r\n  }\r\n\r\n  // 统一处理所有的回调\r\n  _eventCallback = (ev) => {\r\n    const type = ev.type;\r\n    this._triggerEvent(type, ev);\r\n  };\r\n\r\n  // 根据点获取图形，提取成独立方法，便于后续优化\r\n  _getShape(point, ev: Event) {\r\n    return this.canvas.getShape(point.x, point.y, ev);\r\n  }\r\n  // 获取事件的当前点的信息\r\n  _getPointInfo(ev) {\r\n    const canvas = this.canvas;\r\n    const clientPoint = canvas.getClientByEvent(ev);\r\n    const point = canvas.getPointByEvent(ev);\r\n    return {\r\n      x: point.x,\r\n      y: point.y,\r\n      clientX: clientPoint.x,\r\n      clientY: clientPoint.y,\r\n    };\r\n  }\r\n\r\n  // 触发事件\r\n  _triggerEvent(type, ev) {\r\n    const pointInfo = this._getPointInfo(ev);\r\n    // 每次都获取图形有一定成本，后期可以考虑进行缓存策略\r\n    const shape = this._getShape(pointInfo, ev);\r\n    const method = this[`_on${type}`];\r\n    let leaveCanvas = false;\r\n    if (method) {\r\n      method.call(this, pointInfo, shape, ev);\r\n    } else {\r\n      const preShape = this.currentShape;\r\n      // 如果进入、移出画布时存在图形，则要分别触发事件\r\n      if (type === 'mouseenter' || type === 'dragenter' || type === 'mouseover') {\r\n        this._emitEvent(type, ev, pointInfo, null, null, shape); // 先进入画布\r\n        if (shape) {\r\n          this._emitEvent(type, ev, pointInfo, shape, null, shape); // 再触发图形的事件\r\n        }\r\n        if (type === 'mouseenter' && this.draggingShape) {\r\n          // 如果正在拖拽图形, 则触发 dragleave\r\n          this._emitEvent('dragenter', ev, pointInfo, null);\r\n        }\r\n      } else if (type === 'mouseleave' || type === 'dragleave' || type === 'mouseout') {\r\n        leaveCanvas = true;\r\n        if (preShape) {\r\n          this._emitEvent(type, ev, pointInfo, preShape, preShape, null); // 先触发图形的事件\r\n        }\r\n        this._emitEvent(type, ev, pointInfo, null, preShape, null); // 再触发离开画布事件\r\n        if (type === 'mouseleave' && this.draggingShape) {\r\n          this._emitEvent('dragleave', ev, pointInfo, null);\r\n        }\r\n      } else {\r\n        this._emitEvent(type, ev, pointInfo, shape, null, null); // 一般事件中不需要考虑 from, to\r\n      }\r\n    }\r\n    if (!leaveCanvas) {\r\n      this.currentShape = shape;\r\n    }\r\n    // 当鼠标从画布移动到 shape 或者从 preShape 移动到 shape 时，应用 shape 上的鼠标样式\r\n    if (shape && !shape.get('destroyed')) {\r\n      const canvas = this.canvas;\r\n      const el = canvas.get('el');\r\n      el.style.cursor = shape.attr('cursor') || canvas.get('cursor');\r\n    }\r\n  }\r\n\r\n  // 在 document 处理拖拽到画布外的事件，处理从图形上移除画布未被捕捉的问题\r\n  _onDocumentMove = (ev: Event) => {\r\n    const canvas = this.canvas;\r\n    const el = canvas.get('el');\r\n    if (el !== ev.target) {\r\n      // 不在 canvas 上移动\r\n      if (this.dragging || this.currentShape) {\r\n        const pointInfo = this._getPointInfo(ev);\r\n        // 还在拖拽过程中\r\n        if (this.dragging) {\r\n          this._emitEvent('drag', ev, pointInfo, this.draggingShape);\r\n        }\r\n        // 说明从某个图形直接移动到了画布外面，\r\n        // 修复了 mouseleave 的 bug 后不再出现这种情况\r\n        // if (this.currentShape) {\r\n        //   this._emitEvent('mouseleave', ev, pointInfo, this.currentShape, this.currentShape, null);\r\n        //   this.currentShape = null;\r\n        // }\r\n      }\r\n    }\r\n  };\r\n  // 在 document 上处理拖拽到外面，释放鼠标时触发 dragend\r\n  _onDocumentMouseUp = (ev) => {\r\n    const canvas = this.canvas;\r\n    const el = canvas.get('el');\r\n    if (el !== ev.target) {\r\n      // 不在 canvas 上移动\r\n      if (this.dragging) {\r\n        const pointInfo = this._getPointInfo(ev);\r\n        if (this.draggingShape) {\r\n          // 如果存在拖拽的图形，则也触发 drop 事件\r\n          this._emitEvent('drop', ev, pointInfo, null);\r\n        }\r\n        this._emitEvent('dragend', ev, pointInfo, this.draggingShape);\r\n        this._afterDrag(this.draggingShape, pointInfo, ev);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 记录下点击的位置、图形，便于拖拽事件、click 事件的判定\r\n  _onmousedown(pointInfo, shape, event) {\r\n    // 只有鼠标左键的 mousedown 事件才会设置 mousedownShape 等属性，避免鼠标右键的 mousedown 事件引起其他事件发生\r\n    if (event.button === LEFT_BTN_CODE) {\r\n      this.mousedownShape = shape;\r\n      this.mousedownPoint = pointInfo;\r\n      this.mousedownTimeStamp = event.timeStamp;\r\n    }\r\n    this._emitEvent('mousedown', event, pointInfo, shape, null, null); // mousedown 不考虑fromShape, toShape\r\n  }\r\n\r\n  // mouseleave 和 mouseenter 都是成对存在的\r\n  // mouseenter 和 mouseover 同时触发\r\n  _emitMouseoverEvents(event, pointInfo, fromShape, toShape) {\r\n    const el = this.canvas.get('el');\r\n    if (fromShape !== toShape) {\r\n      if (fromShape) {\r\n        this._emitEvent('mouseout', event, pointInfo, fromShape, fromShape, toShape);\r\n        this._emitEvent('mouseleave', event, pointInfo, fromShape, fromShape, toShape);\r\n        // 当鼠标从 fromShape 移动到画布上时，重置鼠标样式\r\n        if (!toShape || toShape.get('destroyed')) {\r\n          el.style.cursor = this.canvas.get('cursor');\r\n        }\r\n      }\r\n      if (toShape) {\r\n        this._emitEvent('mouseover', event, pointInfo, toShape, fromShape, toShape);\r\n        this._emitEvent('mouseenter', event, pointInfo, toShape, fromShape, toShape);\r\n      }\r\n    }\r\n  }\r\n  // dragover 不等同于 mouseover，而等同于 mousemove\r\n  _emitDragoverEvents(event, pointInfo, fromShape, toShape, isCanvasEmit) {\r\n    if (toShape) {\r\n      if (toShape !== fromShape) {\r\n        if (fromShape) {\r\n          this._emitEvent('dragleave', event, pointInfo, fromShape, fromShape, toShape);\r\n        }\r\n        this._emitEvent('dragenter', event, pointInfo, toShape, fromShape, toShape);\r\n      }\r\n      if (!isCanvasEmit) {\r\n        this._emitEvent('dragover', event, pointInfo, toShape);\r\n      }\r\n    } else if (fromShape) {\r\n      // TODO: 此处判断有问题，当 drag 图形时，也会触发一次 dragleave 事件，因为此时 toShape 为 null，这不是所期望的\r\n      // 经过空白区域\r\n      this._emitEvent('dragleave', event, pointInfo, fromShape, fromShape, toShape);\r\n    }\r\n\r\n    if (isCanvasEmit) {\r\n      this._emitEvent('dragover', event, pointInfo, toShape);\r\n    }\r\n  }\r\n\r\n  // drag 完成后，需要做一些清理工作\r\n  _afterDrag(draggingShape, pointInfo, event) {\r\n    if (draggingShape) {\r\n      draggingShape.set('capture', true); // 恢复可以拾取\r\n      this.draggingShape = null;\r\n    }\r\n    this.dragging = false;\r\n    // drag 完成后，有可能 draggingShape 已经移动到了当前位置，所以不能直接取当前图形\r\n    const shape = this._getShape(pointInfo, event);\r\n    // 拖拽完成后，进行 enter，leave 的判定\r\n    if (shape !== draggingShape) {\r\n      this._emitMouseoverEvents(event, pointInfo, draggingShape, shape);\r\n    }\r\n    this.currentShape = shape; // 更新当前 shape，如果不处理当前图形的 mouseleave 事件可能会出问题\r\n  }\r\n  // 按键抬起时，会终止拖拽、触发点击\r\n  _onmouseup(pointInfo, shape, event) {\r\n    // eevent.button === 0 表示鼠标左键事件，此处加上判断主要是为了避免右键鼠标会触发 mouseup 和 click 事件\r\n    // ref: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\r\n    if (event.button === LEFT_BTN_CODE) {\r\n      const draggingShape = this.draggingShape;\r\n      if (this.dragging) {\r\n        // 存在可以拖拽的图形，同时拖拽到其他图形上时触发 drag 事件\r\n        if (draggingShape) {\r\n          this._emitEvent('drop', event, pointInfo, shape);\r\n        }\r\n        this._emitEvent('dragend', event, pointInfo, draggingShape);\r\n        this._afterDrag(draggingShape, pointInfo, event);\r\n      } else {\r\n        this._emitEvent('mouseup', event, pointInfo, shape); // 先触发 mouseup 再触发 click\r\n        if (shape === this.mousedownShape) {\r\n          this._emitEvent('click', event, pointInfo, shape);\r\n        }\r\n        this.mousedownShape = null;\r\n        this.mousedownPoint = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  // 当触发浏览器的 dragover 事件时，不会再触发 mousemove ，所以这时候的 dragenter, dragleave 事件需要重新处理\r\n  _ondragover(pointInfo, shape, event) {\r\n    event.preventDefault(); // 如果不对 dragover 进行 preventDefault，则不会在 canvas 上触发 drop 事件\r\n    const preShape = this.currentShape;\r\n    this._emitDragoverEvents(event, pointInfo, preShape, shape, true);\r\n  }\r\n\r\n  // 大量的图形事件，都通过 mousemove 模拟\r\n  _onmousemove(pointInfo, shape, event) {\r\n    const canvas = this.canvas;\r\n    const preShape = this.currentShape;\r\n    let draggingShape = this.draggingShape;\r\n    // 正在拖拽时\r\n    if (this.dragging) {\r\n      // 正在拖拽中\r\n      if (draggingShape) {\r\n        // 如果拖拽了 shape 会触发 dragenter, dragleave, dragover 和 drag 事件\r\n        this._emitDragoverEvents(event, pointInfo, preShape, shape, false);\r\n      }\r\n      // 如果存在 draggingShape 则会在 draggingShape 上触发 drag 事件，冒泡到 canvas 上\r\n      // 否则在 canvas 上触发 drag 事件\r\n      this._emitEvent('drag', event, pointInfo, draggingShape);\r\n    } else {\r\n      const mousedownPoint = this.mousedownPoint;\r\n      if (mousedownPoint) {\r\n        // 当鼠标点击下去，同时移动时，进行 drag 判定\r\n        const mousedownShape = this.mousedownShape;\r\n        const now = event.timeStamp;\r\n        const timeWindow = now - this.mousedownTimeStamp;\r\n        const dx = mousedownPoint.clientX - pointInfo.clientX;\r\n        const dy = mousedownPoint.clientY - pointInfo.clientY;\r\n        const dist = dx * dx + dy * dy;\r\n        if (timeWindow > 120 || dist > CLICK_OFFSET) {\r\n          if (mousedownShape && mousedownShape.get('draggable')) {\r\n            // 设置了 draggable 的 shape 才能触发 drag 相关的事件\r\n            draggingShape = this.mousedownShape; // 拖动鼠标点下时的 shape\r\n            draggingShape.set('capture', false); // 禁止继续拾取，否则无法进行 dragover,dragenter,dragleave,drop的判定\r\n            this.draggingShape = draggingShape;\r\n            this.dragging = true;\r\n            this._emitEvent('dragstart', event, pointInfo, draggingShape);\r\n            // 清理按下鼠标时缓存的值\r\n            this.mousedownShape = null;\r\n            this.mousedownPoint = null;\r\n          } else if (!mousedownShape && canvas.get('draggable')) {\r\n            // 设置了 draggable 的 canvas 才能触发 drag 相关的事件\r\n            this.dragging = true;\r\n            this._emitEvent('dragstart', event, pointInfo, null);\r\n            // 清理按下鼠标时缓存的值\r\n            this.mousedownShape = null;\r\n            this.mousedownPoint = null;\r\n          } else {\r\n            this._emitMouseoverEvents(event, pointInfo, preShape, shape);\r\n            this._emitEvent('mousemove', event, pointInfo, shape);\r\n          }\r\n        } else {\r\n          this._emitMouseoverEvents(event, pointInfo, preShape, shape);\r\n          this._emitEvent('mousemove', event, pointInfo, shape);\r\n        }\r\n      } else {\r\n        // 没有按键按下时，则直接触发 mouse over 相关的各种事件\r\n        this._emitMouseoverEvents(event, pointInfo, preShape, shape);\r\n        // 始终触发移动\r\n        this._emitEvent('mousemove', event, pointInfo, shape);\r\n      }\r\n    }\r\n  }\r\n\r\n  // 触发事件\r\n  _emitEvent(type, event, pointInfo, shape, fromShape?, toShape?) {\r\n    const eventObj = this._getEventObj(type, event, pointInfo, shape, fromShape, toShape);\r\n    // 存在 shape 触发，则进行冒泡处理\r\n    if (shape) {\r\n      eventObj.shape = shape;\r\n      // 触发 shape 上的事件\r\n      emitTargetEvent(shape, type, eventObj);\r\n      let parent = shape.getParent();\r\n      // 执行冒泡\r\n      while (parent) {\r\n        // 委托事件要先触发\r\n        parent.emitDelegation(type, eventObj);\r\n        // 事件冒泡停止，不能妨碍委托事件\r\n        if (!eventObj.propagationStopped) {\r\n          bubbleEvent(parent, type, eventObj);\r\n        }\r\n        eventObj.propagationPath.push(parent);\r\n        parent = parent.getParent();\r\n      }\r\n    } else {\r\n      // 如果没有 shape 直接在 canvas 上触发\r\n      const canvas = this.canvas;\r\n      // 直接触发 canvas 上的事件\r\n      emitTargetEvent(canvas, type, eventObj);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    // 清理事件\r\n    this._clearEvents();\r\n    // 清理缓存的对象\r\n    this.canvas = null;\r\n    this.currentShape = null;\r\n    this.draggingShape = null;\r\n    this.mousedownPoint = null;\r\n    this.mousedownShape = null;\r\n    this.mousedownTimeStamp = null;\r\n  }\r\n}\r\n\r\nexport default EventController;\r\n", "import { detect } from 'detect-browser';\r\nimport Container from './container';\r\nimport { ICanvas } from '../interfaces';\r\nimport { CanvasCfg, Point, Renderer, Cursor } from '../types';\r\nimport { isBrowser, isNil, isString } from '../util/util';\r\nimport Timeline from '../animate/timeline';\r\nimport EventController from '../event/event-contoller';\r\n\r\nconst PX_SUFFIX = 'px';\r\n\r\nconst browser = detect();\r\nconst isFirefox = browser && browser.name === 'firefox';\r\n\r\nabstract class Canvas extends Container implements ICanvas {\r\n  constructor(cfg: CanvasCfg) {\r\n    super(cfg);\r\n    this.initContainer();\r\n    this.initDom();\r\n    this.initEvents();\r\n    this.initTimeline();\r\n  }\r\n\r\n  getDefaultCfg() {\r\n    const cfg = super.getDefaultCfg();\r\n    // set default cursor style for canvas\r\n    cfg['cursor'] = 'default';\r\n    // CSS transform 目前尚未经过长时间验证，为了避免影响上层业务，默认关闭，上层按需开启\r\n    cfg['supportCSSTransform'] = false;\r\n    return cfg;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 初始化容器\r\n   */\r\n  initContainer() {\r\n    let container = this.get('container');\r\n    if (isString(container)) {\r\n      container = document.getElementById(container);\r\n      this.set('container', container);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 初始化 DOM\r\n   */\r\n  initDom() {\r\n    const el = this.createDom();\r\n    this.set('el', el);\r\n    // 附加到容器\r\n    const container = this.get('container');\r\n    container.appendChild(el);\r\n    // 设置初始宽度\r\n    this.setDOMSize(this.get('width'), this.get('height'));\r\n  }\r\n\r\n  /**\r\n   * 创建画布容器\r\n   * @return {HTMLElement} 画布容器\r\n   */\r\n  abstract createDom(): HTMLElement | SVGSVGElement;\r\n\r\n  /**\r\n   * @protected\r\n   * 初始化绑定的事件\r\n   */\r\n  initEvents() {\r\n    const eventController = new EventController({\r\n      canvas: this,\r\n    });\r\n    eventController.init();\r\n    this.set('eventController', eventController);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 初始化时间轴\r\n   */\r\n  initTimeline() {\r\n    const timeline = new Timeline(this);\r\n    this.set('timeline', timeline);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 修改画布对应的 DOM 的大小\r\n   * @param {number} width  宽度\r\n   * @param {number} height 高度\r\n   */\r\n  setDOMSize(width: number, height: number) {\r\n    const el = this.get('el');\r\n    if (isBrowser) {\r\n      el.style.width = width + PX_SUFFIX;\r\n      el.style.height = height + PX_SUFFIX;\r\n    }\r\n  }\r\n\r\n  // 实现接口\r\n  changeSize(width: number, height: number) {\r\n    this.setDOMSize(width, height);\r\n    this.set('width', width);\r\n    this.set('height', height);\r\n    this.onCanvasChange('changeSize');\r\n  }\r\n\r\n  /**\r\n   * 获取当前的渲染引擎\r\n   * @return {Renderer} 返回当前的渲染引擎\r\n   */\r\n  getRenderer(): Renderer {\r\n    return this.get('renderer');\r\n  }\r\n\r\n  /**\r\n   * 获取画布的 cursor 样式\r\n   * @return {Cursor}\r\n   */\r\n  getCursor(): Cursor {\r\n    return this.get('cursor');\r\n  }\r\n\r\n  /**\r\n   * 设置画布的 cursor 样式\r\n   * @param {Cursor} cursor  cursor 样式\r\n   */\r\n  setCursor(cursor: Cursor) {\r\n    this.set('cursor', cursor);\r\n    const el = this.get('el');\r\n    if (isBrowser && el) {\r\n      // 直接设置样式，不等待鼠标移动时再设置\r\n      el.style.cursor = cursor;\r\n    }\r\n  }\r\n\r\n  // 实现接口\r\n  getPointByEvent(ev: Event): Point {\r\n    const supportCSSTransform = this.get('supportCSSTransform');\r\n    if (supportCSSTransform) {\r\n      // For Firefox <= 38\r\n      if (isFirefox && !isNil((ev as any).layerX) && (ev as any).layerX !== (ev as MouseEvent).offsetX) {\r\n        return {\r\n          x: (ev as any).layerX,\r\n          y: (ev as any).layerY,\r\n        };\r\n      }\r\n      if (!isNil((ev as MouseEvent).offsetX)) {\r\n        // For IE6+, Firefox >= 39, Chrome, Safari, Opera\r\n        return {\r\n          x: (ev as MouseEvent).offsetX,\r\n          y: (ev as MouseEvent).offsetY,\r\n        };\r\n      }\r\n    }\r\n    // should calculate by self for other cases, like Safari in ios\r\n    // TODO: support CSS transform\r\n    const { x: clientX, y: clientY } = this.getClientByEvent(ev);\r\n    return this.getPointByClient(clientX, clientY);\r\n  }\r\n\r\n  // 获取 touch 事件的 clientX 和 clientY 需要单独处理\r\n  getClientByEvent(ev: Event) {\r\n    let clientInfo: MouseEvent | Touch = ev as MouseEvent;\r\n    if ((ev as TouchEvent).touches) {\r\n      if (ev.type === 'touchend') {\r\n        clientInfo = (ev as TouchEvent).changedTouches[0];\r\n      } else {\r\n        clientInfo = (ev as TouchEvent).touches[0];\r\n      }\r\n    }\r\n    return {\r\n      x: clientInfo.clientX,\r\n      y: clientInfo.clientY,\r\n    };\r\n  }\r\n\r\n  // 实现接口\r\n  getPointByClient(clientX: number, clientY: number): Point {\r\n    const el = this.get('el');\r\n    const bbox = el.getBoundingClientRect();\r\n    return {\r\n      x: clientX - bbox.left,\r\n      y: clientY - bbox.top,\r\n    };\r\n  }\r\n\r\n  // 实现接口\r\n  getClientByPoint(x: number, y: number): Point {\r\n    const el = this.get('el');\r\n    const bbox = el.getBoundingClientRect();\r\n    return {\r\n      x: x + bbox.left,\r\n      y: y + bbox.top,\r\n    };\r\n  }\r\n\r\n  // 实现接口\r\n  draw() {}\r\n\r\n  /**\r\n   * @protected\r\n   * 销毁 DOM 容器\r\n   */\r\n  removeDom() {\r\n    const el = this.get('el');\r\n    el.parentNode.removeChild(el);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 清理所有的事件\r\n   */\r\n  clearEvents() {\r\n    const eventController = this.get('eventController');\r\n    eventController.destroy();\r\n  }\r\n\r\n  isCanvas() {\r\n    return true;\r\n  }\r\n\r\n  getParent() {\r\n    return null;\r\n  }\r\n\r\n  destroy() {\r\n    const timeline = this.get('timeline');\r\n    if (this.get('destroyed')) {\r\n      return;\r\n    }\r\n    this.clear();\r\n    // 同初始化时相反顺序调用\r\n    if (timeline) {\r\n      // 画布销毁时自动停止动画\r\n      timeline.stop();\r\n    }\r\n    this.clearEvents();\r\n    this.removeDom();\r\n    super.destroy();\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n", "import { IGroup } from '../interfaces';\r\nimport Container from './container';\r\n\r\nabstract class AbstractGroup extends Container implements IGroup {\r\n  isGroup() {\r\n    return true;\r\n  }\r\n\r\n  isEntityGroup() {\r\n    return false;\r\n  }\r\n\r\n  clone() {\r\n    const clone = super.clone();\r\n    // 获取构造函数\r\n    const children = this.getChildren();\r\n    for (let i = 0; i < children.length; i++) {\r\n      const child = children[i];\r\n      clone.add(child.clone());\r\n    }\r\n    return clone;\r\n  }\r\n}\r\n\r\nexport default AbstractGroup;\r\n", "import { IShape } from '../interfaces';\r\nimport { ShapeCfg, ShapeAttrs, BBox } from '../types';\r\nimport Element from './element';\r\nimport { multiplyVec2 } from '../util/matrix';\r\nabstract class AbstractShape extends Element implements IShape {\r\n  constructor(cfg: ShapeCfg) {\r\n    super(cfg);\r\n  }\r\n\r\n  // 是否在包围盒内\r\n  _isInBBox(refX, refY): boolean {\r\n    const bbox = this.getBBox();\r\n    return bbox.minX <= refX && bbox.maxX >= refX && bbox.minY <= refY && bbox.maxY >= refY;\r\n  }\r\n\r\n  /**\r\n   * 属性更改后需要做的事情\r\n   * @protected\r\n   * @param {ShapeAttrs} targetAttrs 渲染的图像属性\r\n   */\r\n  afterAttrsChange(targetAttrs: ShapeAttrs) {\r\n    super.afterAttrsChange(targetAttrs);\r\n    this.clearCacheBBox();\r\n  }\r\n  // 计算包围盒时，需要缓存，这是一个高频的操作\r\n  getBBox(): BBox {\r\n    let bbox = this.cfg.bbox;\r\n    if (!bbox) {\r\n      bbox = this.calculateBBox();\r\n      this.set('bbox', bbox);\r\n    }\r\n    return bbox;\r\n  }\r\n  // 计算相对于画布的包围盒\r\n  getCanvasBBox(): BBox {\r\n    let canvasBBox = this.cfg.canvasBBox;\r\n    if (!canvasBBox) {\r\n      canvasBBox = this.calculateCanvasBBox();\r\n      this.set('canvasBBox', canvasBBox);\r\n    }\r\n    return canvasBBox;\r\n  }\r\n\r\n  /**\r\n   * 计算包围盒的抽象方法\r\n   * @return {BBox} 包围盒\r\n   */\r\n  abstract calculateBBox(): BBox;\r\n\r\n  applyMatrix(matrix: number[]) {\r\n    super.applyMatrix(matrix);\r\n    // 清理掉缓存的包围盒\r\n    this.set('canvasBBox', null);\r\n  }\r\n\r\n  /**\r\n   * 计算相对于画布的包围盒，默认等同于 bbox\r\n   * @return {BBox} 包围盒\r\n   */\r\n  calculateCanvasBBox() {\r\n    const bbox = this.getBBox();\r\n    const totalMatrix = this.getTotalMatrix();\r\n    let { minX, minY, maxX, maxY } = bbox;\r\n    if (totalMatrix) {\r\n      const topLeft = multiplyVec2(totalMatrix, [bbox.minX, bbox.minY]);\r\n      const topRight = multiplyVec2(totalMatrix, [bbox.maxX, bbox.minY]);\r\n      const bottomLeft = multiplyVec2(totalMatrix, [bbox.minX, bbox.maxY]);\r\n      const bottomRight = multiplyVec2(totalMatrix, [bbox.maxX, bbox.maxY]);\r\n      minX = Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\r\n      maxX = Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\r\n      minY = Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\r\n      maxY = Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\r\n    }\r\n    const attrs = this.attrs;\r\n    // 如果存在 shadow 则计算 shadow\r\n    if (attrs.shadowColor) {\r\n      const { shadowBlur = 0, shadowOffsetX = 0, shadowOffsetY = 0 } = attrs;\r\n      const shadowLeft = minX - shadowBlur + shadowOffsetX;\r\n      const shadowRight = maxX + shadowBlur + shadowOffsetX;\r\n      const shadowTop = minY - shadowBlur + shadowOffsetY;\r\n      const shadowBottom = maxY + shadowBlur + shadowOffsetY;\r\n      minX = Math.min(minX, shadowLeft);\r\n      maxX = Math.max(maxX, shadowRight);\r\n      minY = Math.min(minY, shadowTop);\r\n      maxY = Math.max(maxY, shadowBottom);\r\n    }\r\n    return {\r\n      x: minX,\r\n      y: minY,\r\n      minX,\r\n      minY,\r\n      maxX,\r\n      maxY,\r\n      width: maxX - minX,\r\n      height: maxY - minY,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 清理缓存的 bbox\r\n   */\r\n  clearCacheBBox() {\r\n    this.set('bbox', null);\r\n    this.set('canvasBBox', null);\r\n  }\r\n\r\n  // 实现接口\r\n  isClipShape() {\r\n    return this.get('isClipShape');\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 不同的图形自己实现是否在图形内部的逻辑，要判断边和填充区域\r\n   * @param  {number}  refX 相对于图形的坐标 x\r\n   * @param  {number}  refY 相对于图形的坐标 Y\r\n   * @return {boolean} 点是否在图形内部\r\n   */\r\n  isInShape(refX: number, refY: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 是否仅仅使用 BBox 检测就可以判定拾取到图形\r\n   * 默认是 false，但是有些图形例如 image、marker 等都可直接使用 BBox 的检测而不需要使用图形拾取\r\n   * @return {Boolean} 仅仅使用 BBox 进行拾取\r\n   */\r\n  isOnlyHitBox() {\r\n    return false;\r\n  }\r\n\r\n  // 不同的 Shape 各自实现\r\n  isHit(x: number, y: number): boolean {\r\n    const startArrowShape = this.get('startArrowShape');\r\n    const endArrowShape = this.get('endArrowShape');\r\n    let vec = [x, y, 1];\r\n    vec = this.invertFromMatrix(vec);\r\n    const [refX, refY] = vec;\r\n    const inBBox = this._isInBBox(refX, refY);\r\n    // 跳过图形的拾取，在某些图形中可以省略一倍的检测成本\r\n    if (this.isOnlyHitBox()) {\r\n      return inBBox;\r\n    }\r\n    // 被裁减掉的和不在包围盒内的不进行计算\r\n    if (inBBox && !this.isClipped(refX, refY)) {\r\n      // 对图形进行拾取判断\r\n      if (this.isInShape(refX, refY)) {\r\n        return true;\r\n      }\r\n      // 对起始箭头进行拾取判断\r\n      if (startArrowShape && startArrowShape.isHit(refX, refY)) {\r\n        return true;\r\n      }\r\n      // 对结束箭头进行拾取判断\r\n      if (endArrowShape && endArrowShape.isHit(refX, refY)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default AbstractShape;\r\n", "import { SimpleBBox } from '../types';\r\nimport { IShape } from '../interfaces';\r\ntype BoxMethod = (shape: IShape) => SimpleBBox;\r\nconst cache: Map<string, BoxMethod> = new Map<string, BoxMethod>();\r\n\r\n/**\r\n * 注册计算包围盒的算法\r\n * @param type 方法名\r\n * @param method 方法\r\n */\r\nexport function register(type: string, method: BoxMethod) {\r\n  cache.set(type, method);\r\n}\r\n\r\n/**\r\n * 获取计算包围盒的算法\r\n * @param type 方法名\r\n */\r\nexport function getMethod(type: string): BoxMethod {\r\n  return cache.get(type);\r\n}\r\n", "import { SimpleBBox } from '../types';\r\nimport { IShape } from '../interfaces';\r\n\r\nexport default function (shape: IShape): SimpleBBox {\r\n  const attrs = shape.attr();\r\n  const { x, y, width, height } = attrs;\r\n  return {\r\n    x,\r\n    y,\r\n    width,\r\n    height,\r\n  };\r\n}\r\n", "import { SimpleBBox } from '../types';\r\nimport { IShape } from '../interfaces';\r\n\r\nexport default function (shape: IShape): SimpleBBox {\r\n  const { x, y, r } = shape.attr();\r\n  return {\r\n    x: x - r,\r\n    y: y - r,\r\n    width: r * 2,\r\n    height: r * 2,\r\n  };\r\n}\r\n", "import { max, min } from '@antv/util';\r\nimport { BBox } from './types';\r\n\r\n/**\r\n * 两点之间的距离\r\n * @param {number} x1 起始点 x\r\n * @param {number} y1 起始点 y\r\n * @param {number} x2 结束点 x\r\n * @param {number} y2 结束点 y\r\n * @return {number} 距离\r\n */\r\nexport function distance(x1: number, y1: number, x2: number, y2: number) {\r\n  const dx = x1 - x2;\r\n  const dy = y1 - y2;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\nexport function isNumberEqual(v1: number, v2: number) {\r\n  return Math.abs(v1 - v2) < 0.001;\r\n}\r\n\r\nexport function getBBoxByArray(xArr: number[], yArr: number[]): BBox {\r\n  const minX = min(xArr);\r\n  const minY = min(yArr);\r\n  const maxX = max(xArr);\r\n  const maxY = max(yArr);\r\n  return {\r\n    x: minX,\r\n    y: minY,\r\n    width: maxX - minX,\r\n    height: maxY - minY,\r\n  };\r\n}\r\n\r\nexport function getBBoxRange(x1: number, y1: number, x2: number, y2: number) {\r\n  return {\r\n    minX: min([x1, x2]),\r\n    maxX: max([x1, x2]),\r\n    minY: min([y1, y2]),\r\n    maxY: max([y1, y2]),\r\n  };\r\n}\r\n\r\nexport function piMod(angle: number) {\r\n  return (angle + Math.PI * 2) % (Math.PI * 2);\r\n}\r\n", "import { distance, getBBoxByArray } from './util';\r\nimport * as vec2 from 'gl-matrix/vec2';\r\nimport { BBox, Point } from './types';\r\n\r\nexport default {\r\n  /**\r\n   * 计算线段的包围盒\r\n   * @param {number} x1 起始点 x\r\n   * @param {number} y1 起始点 y\r\n   * @param {number} x2 结束点 x\r\n   * @param {number} y2 结束点 y\r\n   * @return {object} 包围盒对象\r\n   */\r\n  box(x1: number, y1: number, x2: number, y2: number): BBox {\r\n    return getBBoxByArray([x1, x2], [y1, y2]);\r\n  },\r\n  /**\r\n   * 线段的长度\r\n   * @param {number} x1 起始点 x\r\n   * @param {number} y1 起始点 y\r\n   * @param {number} x2 结束点 x\r\n   * @param {number} y2 结束点 y\r\n   * @return {number} 距离\r\n   */\r\n  length(x1: number, y1: number, x2: number, y2: number) {\r\n    return distance(x1, y1, x2, y2);\r\n  },\r\n  /**\r\n   * 根据比例获取点\r\n   * @param {number} x1 起始点 x\r\n   * @param {number} y1 起始点 y\r\n   * @param {number} x2 结束点 x\r\n   * @param {number} y2 结束点 y\r\n   * @param {number} t 指定比例\r\n   * @return {object} 包含 x, y 的点\r\n   */\r\n  pointAt(x1: number, y1: number, x2: number, y2: number, t: number): Point {\r\n    return {\r\n      x: (1 - t) * x1 + t * x2,\r\n      y: (1 - t) * y1 + t * y2,\r\n    };\r\n  },\r\n  /**\r\n   * 点到线段的距离\r\n   * @param {number} x1 起始点 x\r\n   * @param {number} y1 起始点 y\r\n   * @param {number} x2 结束点 x\r\n   * @param {number} y2 结束点 y\r\n   * @param {number} x  测试点 x\r\n   * @param {number} y  测试点 y\r\n   * @return {number} 距离\r\n   */\r\n  pointDistance(x1: number, y1: number, x2: number, y2: number, x: number, y: number): number {\r\n    // 投影距离 x1, y1 的向量，假设 p, p1, p2 三个点，投影点为 a\r\n    // p1a = p1p.p1p2/|p1p2| * (p1p 的单位向量)\r\n    const cross = (x2 - x1) * (x - x1) + (y2 - y1) * (y - y1);\r\n    if (cross < 0) {\r\n      return distance(x1, y1, x, y);\r\n    }\r\n    const lengthSquare = (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);\r\n    if (cross > lengthSquare) {\r\n      return distance(x2, y2, x, y);\r\n    }\r\n    return this.pointToLine(x1, y1, x2, y2, x, y);\r\n  },\r\n  /**\r\n   * 点到直线的距离，而不是点到线段的距离\r\n   * @param {number} x1 起始点 x\r\n   * @param {number} y1 起始点 y\r\n   * @param {number} x2 结束点 x\r\n   * @param {number} y2 结束点 y\r\n   * @param {number} x  测试点 x\r\n   * @param {number} y  测试点 y\r\n   * @return {number} 距离\r\n   */\r\n  pointToLine(x1: number, y1: number, x2: number, y2: number, x: number, y: number) {\r\n    const d = [x2 - x1, y2 - y1];\r\n    // 如果端点相等，则判定点到点的距离\r\n    if (vec2.exactEquals(d, [0, 0])) {\r\n      return Math.sqrt((x - x1) * (x - x1) + (y - y1) * (y - y1));\r\n    }\r\n    const u = [-d[1], d[0]];\r\n    vec2.normalize(u, u);\r\n    const a = [x - x1, y - y1];\r\n    return Math.abs(vec2.dot(a, u));\r\n  },\r\n  /**\r\n   * 线段的角度\r\n   * @param {number} x1 起始点 x\r\n   * @param {number} y1 起始点 y\r\n   * @param {number} x2 结束点 x\r\n   * @param {number} y2 结束点 y\r\n   * @return {number} 导数\r\n   */\r\n  tangentAngle(x1: number, y1: number, x2: number, y2: number) {\r\n    return Math.atan2(y2 - y1, x2 - x1);\r\n  },\r\n};\r\n", "import { distance } from './util';\r\nimport { Point, PointTuple } from './types';\r\n\r\nconst EPSILON = 0.0001;\r\n/**\r\n * 使用牛顿切割法求最近的点\r\n * @param {number[]} xArr      点的 x 数组\r\n * @param {number[]} yArr      点的 y 数组\r\n * @param {number}   x         指定的点 x\r\n * @param {number}   y         指定的点 y\r\n * @param {Function} tCallback 差值函数\r\n */\r\nexport function nearestPoint(\r\n  xArr: number[],\r\n  yArr: number[],\r\n  x: number,\r\n  y: number,\r\n  tCallback: (...arr: number[]) => number,\r\n  length?: number\r\n): Point {\r\n  let t: number;\r\n  let d = Infinity;\r\n  const v0: PointTuple = [x, y];\r\n\r\n  let segNum = 20;\r\n  if (length && length > 200) {\r\n    segNum = length / 10;\r\n  }\r\n  const increaseRate = 1 / segNum;\r\n\r\n  let interval = increaseRate / 10;\r\n\r\n  for (let i = 0; i <= segNum; i++) {\r\n    const _t = i * increaseRate;\r\n    const v1: PointTuple = [tCallback.apply(null, xArr.concat([_t])), tCallback.apply(null, yArr.concat([_t]))];\r\n\r\n    const d1 = distance(v0[0], v0[1], v1[0], v1[1]);\r\n    if (d1 < d) {\r\n      t = _t;\r\n      d = d1;\r\n    }\r\n  }\r\n  // 提前终止\r\n  if (t === 0) {\r\n    return {\r\n      x: xArr[0],\r\n      y: yArr[0],\r\n    };\r\n  }\r\n  if (t === 1) {\r\n    const count = xArr.length;\r\n    return {\r\n      x: xArr[count - 1],\r\n      y: yArr[count - 1],\r\n    };\r\n  }\r\n  d = Infinity;\r\n\r\n  for (let i = 0; i < 32; i++) {\r\n    if (interval < EPSILON) {\r\n      break;\r\n    }\r\n\r\n    const prev = t - interval;\r\n    const next = t + interval;\r\n\r\n    const v1 = [tCallback.apply(null, xArr.concat([prev])), tCallback.apply(null, yArr.concat([prev]))];\r\n\r\n    const d1 = distance(v0[0], v0[1], v1[0], v1[1]);\r\n    if (prev >= 0 && d1 < d) {\r\n      t = prev;\r\n      d = d1;\r\n    } else {\r\n      const v2 = [tCallback.apply(null, xArr.concat([next])), tCallback.apply(null, yArr.concat([next]))];\r\n      const d2 = distance(v0[0], v0[1], v2[0], v2[1]);\r\n      if (next <= 1 && d2 < d) {\r\n        t = next;\r\n        d = d2;\r\n      } else {\r\n        interval *= 0.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: tCallback.apply(null, xArr.concat([t])),\r\n    y: tCallback.apply(null, yArr.concat([t])),\r\n  };\r\n}\r\n\r\n// 近似求解 https://community.khronos.org/t/3d-cubic-bezier-segment-length/62363/2\r\nexport function snapLength(xArr: number[], yArr: number[]) {\r\n  let totalLength = 0;\r\n  const count = xArr.length;\r\n  for (let i = 0; i < count; i++) {\r\n    const x = xArr[i];\r\n    const y = yArr[i];\r\n    const nextX = xArr[(i + 1) % count];\r\n    const nextY = yArr[(i + 1) % count];\r\n    totalLength += distance(x, y, nextX, nextY);\r\n  }\r\n  return totalLength / 2;\r\n}\r\n", "import line from './line';\r\nimport { distance, isNumberEqual, getBBoxByArray, piMod } from './util';\r\nimport { nearestPoint } from './bezier';\r\nimport { Point } from './types';\r\n\r\n// 差值公式\r\nfunction quadraticAt(p0: number, p1: number, p2: number, t: number) {\r\n  const onet = 1 - t;\r\n  return onet * onet * p0 + 2 * t * onet * p1 + t * t * p2;\r\n}\r\n\r\n// 求极值\r\nfunction extrema(p0: number, p1: number, p2: number) {\r\n  const a = p0 + p2 - 2 * p1;\r\n  if (isNumberEqual(a, 0)) {\r\n    return [0.5];\r\n  }\r\n  const rst = (p0 - p1) / a;\r\n  if (rst <= 1 && rst >= 0) {\r\n    return [rst];\r\n  }\r\n  return [];\r\n}\r\n\r\nfunction derivativeAt(p0: number, p1: number, p2: number, t: number) {\r\n  return 2 * (1 - t) * (p1 - p0) + 2 * t * (p2 - p1);\r\n}\r\n\r\n// 分割贝塞尔曲线\r\nfunction divideQuadratic(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, t: number) {\r\n  // 划分点\r\n  const xt = quadraticAt(x1, x2, x3, t);\r\n  const yt = quadraticAt(y1, y2, y3, t);\r\n\r\n  // 分割的第一条曲线的控制点\r\n  const controlPoint1 = line.pointAt(x1, y1, x2, y2, t);\r\n  // 分割的第二条曲线的控制点\r\n  const controlPoint2 = line.pointAt(x2, y2, x3, y3, t);\r\n  return [\r\n    [x1, y1, controlPoint1.x, controlPoint1.y, xt, yt],\r\n    [xt, yt, controlPoint2.x, controlPoint2.y, x3, y3],\r\n  ];\r\n}\r\n\r\n// 使用迭代法取贝塞尔曲线的长度\r\nfunction quadraticLength(\r\n  x1: number,\r\n  y1: number,\r\n  x2: number,\r\n  y2: number,\r\n  x3: number,\r\n  y3: number,\r\n  iterationCount: number\r\n) {\r\n  if (iterationCount === 0) {\r\n    return (distance(x1, y1, x2, y2) + distance(x2, y2, x3, y3) + distance(x1, y1, x3, y3)) / 2;\r\n  }\r\n  const quadratics = divideQuadratic(x1, y1, x2, y2, x3, y3, 0.5);\r\n  const left = quadratics[0];\r\n  const right = quadratics[1];\r\n  left.push(iterationCount - 1);\r\n  right.push(iterationCount - 1);\r\n  return quadraticLength.apply(null, left) + quadraticLength.apply(null, right);\r\n}\r\n\r\nexport default {\r\n  box(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number) {\r\n    const xExtrema = extrema(x1, x2, x3)[0];\r\n    const yExtrema = extrema(y1, y2, y3)[0];\r\n    // 控制点不加入 box 的计算\r\n    const xArr = [x1, x3];\r\n    const yArr = [y1, y3];\r\n    if (xExtrema !== undefined) {\r\n      xArr.push(quadraticAt(x1, x2, x3, xExtrema));\r\n    }\r\n    if (yExtrema !== undefined) {\r\n      yArr.push(quadraticAt(y1, y2, y3, yExtrema));\r\n    }\r\n    return getBBoxByArray(xArr, yArr);\r\n  },\r\n  length(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number) {\r\n    return quadraticLength(x1, y1, x2, y2, x3, y3, 3);\r\n  },\r\n  nearestPoint(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x0: number, y0: number) {\r\n    return nearestPoint([x1, x2, x3], [y1, y2, y3], x0, y0, quadraticAt);\r\n  },\r\n  pointDistance(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x0: number, y0: number) {\r\n    const point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x0, y0);\r\n    return distance(point.x, point.y, x0, y0);\r\n  },\r\n  interpolationAt: quadraticAt,\r\n  pointAt(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, t: number): Point {\r\n    return {\r\n      x: quadraticAt(x1, x2, x3, t),\r\n      y: quadraticAt(y1, y2, y3, t),\r\n    };\r\n  },\r\n  divide(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, t: number) {\r\n    return divideQuadratic(x1, y1, x2, y2, x3, y3, t);\r\n  },\r\n  tangentAngle(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, t: number) {\r\n    const dx = derivativeAt(x1, x2, x3, t);\r\n    const dy = derivativeAt(y1, y2, y3, t);\r\n    const angle = Math.atan2(dy, dx);\r\n    return piMod(angle);\r\n  },\r\n};\r\n", "import { distance, isNumberEqual, getBBoxByArray, piMod } from './util';\r\nimport line from './line';\r\nimport { snapLength, nearestPoint } from './bezier';\r\nimport { Point } from './types';\r\n\r\nfunction cubicAt(p0: number, p1: number, p2: number, p3: number, t: number) {\r\n  const onet = 1 - t; // t * t * t 的性能大概是 Math.pow(t, 3) 的三倍\r\n  return onet * onet * onet * p0 + 3 * p1 * t * onet * onet + 3 * p2 * t * t * onet + p3 * t * t * t;\r\n}\r\n\r\nfunction derivativeAt(p0: number, p1: number, p2: number, p3: number, t: number) {\r\n  const onet = 1 - t;\r\n  return 3 * (onet * onet * (p1 - p0) + 2 * onet * t * (p2 - p1) + t * t * (p3 - p2));\r\n}\r\n\r\nfunction extrema(p0: number, p1: number, p2: number, p3: number) {\r\n  const a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;\r\n  const b = 6 * p0 - 12 * p1 + 6 * p2;\r\n  const c = 3 * p1 - 3 * p0;\r\n  const extremas = [];\r\n  let t1: number;\r\n  let t2: number;\r\n  let discSqrt: number;\r\n\r\n  if (isNumberEqual(a, 0)) {\r\n    if (!isNumberEqual(b, 0)) {\r\n      t1 = -c / b;\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        extremas.push(t1);\r\n      }\r\n    }\r\n  } else {\r\n    const disc = b * b - 4 * a * c;\r\n    if (isNumberEqual(disc, 0)) {\r\n      extremas.push(-b / (2 * a));\r\n    } else if (disc > 0) {\r\n      discSqrt = Math.sqrt(disc);\r\n      t1 = (-b + discSqrt) / (2 * a);\r\n      t2 = (-b - discSqrt) / (2 * a);\r\n      if (t1 >= 0 && t1 <= 1) {\r\n        extremas.push(t1);\r\n      }\r\n      if (t2 >= 0 && t2 <= 1) {\r\n        extremas.push(t2);\r\n      }\r\n    }\r\n  }\r\n  return extremas;\r\n}\r\n\r\n// 分割贝塞尔曲线\r\nfunction divideCubic(\r\n  x1: number,\r\n  y1: number,\r\n  x2: number,\r\n  y2: number,\r\n  x3: number,\r\n  y3: number,\r\n  x4: number,\r\n  y4: number,\r\n  t: number\r\n) {\r\n  // 划分点\r\n  const xt = cubicAt(x1, x2, x3, x4, t);\r\n  const yt = cubicAt(y1, y2, y3, y4, t);\r\n  // 计算两点之间的差值点\r\n  const c1 = line.pointAt(x1, y1, x2, y2, t);\r\n  const c2 = line.pointAt(x2, y2, x3, y3, t);\r\n  const c3 = line.pointAt(x3, y3, x4, y4, t);\r\n  const c12 = line.pointAt(c1.x, c1.y, c2.x, c2.y, t);\r\n  const c23 = line.pointAt(c2.x, c2.y, c3.x, c3.y, t);\r\n  return [\r\n    [x1, y1, c1.x, c1.y, c12.x, c12.y, xt, yt],\r\n    [xt, yt, c23.x, c23.y, c3.x, c3.y, x4, y4],\r\n  ];\r\n}\r\n\r\n// 使用迭代法取贝塞尔曲线的长度，二阶和三阶分开写，更清晰和便于调试\r\nfunction cubicLength(\r\n  x1: number,\r\n  y1: number,\r\n  x2: number,\r\n  y2: number,\r\n  x3: number,\r\n  y3: number,\r\n  x4: number,\r\n  y4: number,\r\n  iterationCount: number\r\n) {\r\n  if (iterationCount === 0) {\r\n    return snapLength([x1, x2, x3, x4], [y1, y2, y3, y4]);\r\n  }\r\n  const cubics = divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, 0.5);\r\n  const left = cubics[0];\r\n  const right = cubics[1];\r\n  left.push(iterationCount - 1);\r\n  right.push(iterationCount - 1);\r\n  return cubicLength.apply(null, left) + cubicLength.apply(null, right);\r\n}\r\n\r\nexport default {\r\n  extrema,\r\n  box(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number) {\r\n    const xArr = [x1, x4];\r\n    const yArr = [y1, y4];\r\n    const xExtrema = extrema(x1, x2, x3, x4);\r\n    const yExtrema = extrema(y1, y2, y3, y4);\r\n    for (let i = 0; i < xExtrema.length; i++) {\r\n      xArr.push(cubicAt(x1, x2, x3, x4, xExtrema[i]));\r\n    }\r\n    for (let i = 0; i < yExtrema.length; i++) {\r\n      yArr.push(cubicAt(y1, y2, y3, y4, yExtrema[i]));\r\n    }\r\n    return getBBoxByArray(xArr, yArr);\r\n  },\r\n  length(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number) {\r\n    // 迭代三次，划分成 8 段求长度\r\n    return cubicLength(x1, y1, x2, y2, x3, y3, x4, y4, 3);\r\n  },\r\n  nearestPoint(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number,\r\n    x3: number,\r\n    y3: number,\r\n    x4: number,\r\n    y4: number,\r\n    x0: number,\r\n    y0: number,\r\n    length?: number\r\n  ) {\r\n    return nearestPoint([x1, x2, x3, x4], [y1, y2, y3, y4], x0, y0, cubicAt, length);\r\n  },\r\n  pointDistance(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number,\r\n    x3: number,\r\n    y3: number,\r\n    x4: number,\r\n    y4: number,\r\n    x0: number,\r\n    y0: number,\r\n    length?: number\r\n  ) {\r\n    const point = this.nearestPoint(x1, y1, x2, y2, x3, y3, x4, y4, x0, y0, length);\r\n    return distance(point.x, point.y, x0, y0);\r\n  },\r\n  interpolationAt: cubicAt,\r\n  pointAt(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number,\r\n    x3: number,\r\n    y3: number,\r\n    x4: number,\r\n    y4: number,\r\n    t: number\r\n  ): Point {\r\n    return {\r\n      x: cubicAt(x1, x2, x3, x4, t),\r\n      y: cubicAt(y1, y2, y3, y4, t),\r\n    };\r\n  },\r\n  divide(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number, t: number) {\r\n    return divideCubic(x1, y1, x2, y2, x3, y3, x4, y4, t);\r\n  },\r\n  tangentAngle(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number,\r\n    x3: number,\r\n    y3: number,\r\n    x4: number,\r\n    y4: number,\r\n    t: number\r\n  ) {\r\n    const dx = derivativeAt(x1, x2, x3, x4, t);\r\n    const dy = derivativeAt(y1, y2, y3, y4, t);\r\n    return piMod(Math.atan2(dy, dx));\r\n  },\r\n};\r\n", "/**\r\n * @fileoverview 椭圆的一些计算，\r\n *  - 周长计算参考：https://www.mathsisfun.com/geometry/ellipse-perimeter.html\r\n *  - 距离计算参考：https://wet-robots.ghost.io/simple-method-for-distance-to-ellipse/\r\n * @author dxq613@gmail.com\r\n */\r\n\r\nimport { distance, piMod } from './util';\r\nimport { Point, BBox } from './types';\r\n\r\nfunction copysign(v1: number, v2: number) {\r\n  const absv = Math.abs(v1);\r\n  return v2 > 0 ? absv : absv * -1;\r\n}\r\n\r\nexport default {\r\n  /**\r\n   * 包围盒计算\r\n   * @param {number} x  椭圆中心 x\r\n   * @param {number} y  椭圆中心 y\r\n   * @param {number} rx 椭圆 x 方向半径\r\n   * @param {number} ry 椭圆 y 方向半径\r\n   * @return {object} 包围盒\r\n   */\r\n  box(x: number, y: number, rx: number, ry: number): BBox {\r\n    return {\r\n      x: x - rx,\r\n      y: y - ry,\r\n      width: rx * 2,\r\n      height: ry * 2,\r\n    };\r\n  },\r\n  /**\r\n   * 计算周长，使用近似法\r\n   * @param {number} x  椭圆中心 x\r\n   * @param {number} y  椭圆中心 y\r\n   * @param {number} rx 椭圆 x 方向半径\r\n   * @param {number} ry 椭圆 y 方向半径\r\n   * @return {number} 椭圆周长\r\n   */\r\n  length(x: number, y: number, rx: number, ry: number) {\r\n    return Math.PI * (3 * (rx + ry) - Math.sqrt((3 * rx + ry) * (rx + 3 * ry)));\r\n  },\r\n  /**\r\n   * 距离椭圆最近的点\r\n   * @param {number} x  椭圆中心 x\r\n   * @param {number} y  椭圆中心 y\r\n   * @param {number} rx 椭圆 x 方向半径\r\n   * @param {number} ry 椭圆 y 方向半径\r\n   * @param {number} x0  指定的点 x\r\n   * @param {number} y0  指定的点 y\r\n   * @return {object} 椭圆上距离指定点最近的点\r\n   */\r\n  nearestPoint(x: number, y: number, rx: number, ry: number, x0: number, y0: number) {\r\n    const a = rx;\r\n    const b = ry;\r\n    // 假如椭圆半径为0则返回圆心\r\n    if (a === 0 || b === 0) {\r\n      return {\r\n        x,\r\n        y,\r\n      };\r\n    }\r\n    // 转换成 0， 0 为中心的椭圆计算\r\n    const relativeX = x0 - x;\r\n    const relativeY = y0 - y;\r\n    const px = Math.abs(relativeX);\r\n    const py = Math.abs(relativeY);\r\n    const squareA = a * a;\r\n    const squareB = b * b;\r\n    // const angle0 = Math.atan2(relativeY, relativeX);\r\n    let t = Math.PI / 4;\r\n    let nearestX: number; // 椭圆上的任一点\r\n    let nearestY: number;\r\n    // 迭代 4 次\r\n    for (let i = 0; i < 4; i++) {\r\n      nearestX = a * Math.cos(t);\r\n      nearestY = b * Math.sin(t);\r\n\r\n      const ex = ((squareA - squareB) * Math.cos(t) ** 3) / a;\r\n      const ey = ((squareB - squareA) * Math.sin(t) ** 3) / b;\r\n      const rx1 = nearestX - ex;\r\n      const ry1 = nearestY - ey;\r\n\r\n      const qx = px - ex;\r\n      const qy = py - ey;\r\n      const r = Math.hypot(ry1, rx1);\r\n      const q = Math.hypot(qy, qx);\r\n\r\n      const delta_c = r * Math.asin((rx1 * qy - ry1 * qx) / (r * q));\r\n      const delta_t = delta_c / Math.sqrt(squareA + squareB - nearestX * nearestX - nearestY * nearestY);\r\n\r\n      t += delta_t;\r\n      t = Math.min(Math.PI / 2, Math.max(0, t));\r\n    }\r\n\r\n    return {\r\n      x: x + copysign(nearestX, relativeX),\r\n      y: y + copysign(nearestY, relativeY),\r\n    };\r\n  },\r\n  /**\r\n   * 点到椭圆最近的距离\r\n   * @param {number} x  椭圆中心 x\r\n   * @param {number} y  椭圆中心 y\r\n   * @param {number} rx 椭圆 x 方向半径\r\n   * @param {number} ry 椭圆 y 方向半径\r\n   * @param {number} x0  指定的点 x\r\n   * @param {number} y0  指定的点 y\r\n   * @return {number} 点到椭圆的距离\r\n   */\r\n  pointDistance(x: number, y: number, rx: number, ry: number, x0: number, y0: number) {\r\n    const nearestPoint = this.nearestPoint(x, y, rx, ry, x0, y0);\r\n    return distance(nearestPoint.x, nearestPoint.y, x0, y0);\r\n  },\r\n  /**\r\n   * 根据比例获取点\r\n   * @param {number} x 椭圆中心 x\r\n   * @param {number} y 椭圆中心 y\r\n   * @param {number} rx 椭圆 x 方向半径\r\n   * @param {number} ry 椭圆 y 方向半径\r\n   * @param {number} t 指定比例，x轴方向为 0\r\n   * @return {object} 点\r\n   */\r\n  pointAt(x: number, y: number, rx: number, ry: number, t: number): Point {\r\n    const angle = 2 * Math.PI * t; // 按照角度进行计算，而不按照周长计算\r\n    return {\r\n      x: x + rx * Math.cos(angle),\r\n      y: y + ry * Math.sin(angle),\r\n    };\r\n  },\r\n  /**\r\n   * 根据比例计算切线角度\r\n   * @param {number} x 椭圆中心 x\r\n   * @param {number} y 椭圆中心 y\r\n   * @param {number} rx 椭圆 x 方向半径\r\n   * @param {number} ry 椭圆 y 方向半径\r\n   * @param {number} t 指定比例 0 - 1 之间，x轴方向为 0。在 0-1 范围之外是循环还是返回 null，还需要调整\r\n   * @return {number} 角度，在 0 - 2PI 之间\r\n   */\r\n  tangentAngle(x: number, y: number, rx: number, ry: number, t: number) {\r\n    const angle = 2 * Math.PI * t; // 按照角度进行计算，而不按照周长计算\r\n    // 直接使用 x,y 的导数计算， x' = -rx * sin(t); y' = ry * cos(t);\r\n    const tangentAngle = Math.atan2(ry * Math.cos(angle), -rx * Math.sin(angle));\r\n    // 也可以使用指定点的切线方程计算，成本有些高\r\n    // const point = this.pointAt(0, 0, rx, ry, t); // 椭圆的切线同椭圆的中心不相关\r\n    // let tangentAngle = -1 * Math.atan((ry * ry * point.x) / (rx * rx * point.y));\r\n    // if (angle >= 0 && angle <= Math.PI) {\r\n    //   tangentAngle += Math.PI;\r\n    // }\r\n\r\n    return piMod(tangentAngle);\r\n  },\r\n};\r\n", "import { distance, piMod } from './util';\r\nimport ellipse from './ellipse';\r\nimport { Point, BBox } from './types';\r\n\r\n// 偏导数 x\r\nfunction derivativeXAt(\r\n  cx: number,\r\n  cy: number,\r\n  rx: number,\r\n  ry: number,\r\n  xRotation: number,\r\n  startAngle: number,\r\n  endAngle: number,\r\n  angle: number\r\n) {\r\n  return -1 * rx * Math.cos(xRotation) * Math.sin(angle) - ry * Math.sin(xRotation) * Math.cos(angle);\r\n}\r\n\r\n// 偏导数 y\r\nfunction derivativeYAt(\r\n  cx: number,\r\n  cy: number,\r\n  rx: number,\r\n  ry: number,\r\n  xRotation: number,\r\n  startAngle: number,\r\n  endAngle: number,\r\n  angle: number\r\n) {\r\n  return -1 * rx * Math.sin(xRotation) * Math.sin(angle) + ry * Math.cos(xRotation) * Math.cos(angle);\r\n}\r\n\r\n// x 的极值\r\nfunction xExtrema(rx: number, ry: number, xRotation: number) {\r\n  return Math.atan((-ry / rx) * Math.tan(xRotation));\r\n}\r\n\r\n// y 的极值\r\nfunction yExtrema(rx: number, ry: number, xRotation: number) {\r\n  return Math.atan(ry / (rx * Math.tan(xRotation)));\r\n}\r\n\r\n// 根据角度求 x 坐标\r\nfunction xAt(cx: number, cy: number, rx: number, ry: number, xRotation: number, angle: number) {\r\n  return rx * Math.cos(xRotation) * Math.cos(angle) - ry * Math.sin(xRotation) * Math.sin(angle) + cx;\r\n}\r\n\r\n// 根据角度求 y 坐标\r\nfunction yAt(cx: number, cy: number, rx: number, ry: number, xRotation: number, angle: number) {\r\n  return rx * Math.sin(xRotation) * Math.cos(angle) + ry * Math.cos(xRotation) * Math.sin(angle) + cy;\r\n}\r\n\r\n// 获取点在椭圆上的角度\r\nfunction getAngle(rx: number, ry: number, x0: number, y0: number) {\r\n  const angle = Math.atan2(y0 * rx, x0 * ry);\r\n  // 转换到 0 - 2PI 内\r\n  return (angle + Math.PI * 2) % (Math.PI * 2);\r\n}\r\n\r\n// 根据角度获取，x,y\r\nfunction getPoint(rx: number, ry: number, angle: number): Point {\r\n  return {\r\n    x: rx * Math.cos(angle),\r\n    y: ry * Math.sin(angle),\r\n  };\r\n}\r\n\r\n// 旋转\r\nfunction rotate(x: number, y: number, angle: number) {\r\n  const cos = Math.cos(angle);\r\n  const sin = Math.sin(angle);\r\n  return [x * cos - y * sin, x * sin + y * cos];\r\n}\r\n\r\nexport default {\r\n  /**\r\n   * 计算包围盒\r\n   * @param {number} cx         圆心 x\r\n   * @param {number} cy         圆心 y\r\n   * @param {number} rx         x 轴方向的半径\r\n   * @param {number} ry         y 轴方向的半径\r\n   * @param {number} xRotation  旋转角度\r\n   * @param {number} startAngle 起始角度\r\n   * @param {number} endAngle   结束角度\r\n   * @return {object} 包围盒对象\r\n   */\r\n  box(cx: number, cy: number, rx: number, ry: number, xRotation: number, startAngle: number, endAngle: number): BBox {\r\n    const xDim = xExtrema(rx, ry, xRotation);\r\n    let minX = Infinity;\r\n    let maxX = -Infinity;\r\n    const xs = [startAngle, endAngle];\r\n    for (let i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {\r\n      const xAngle = xDim + i;\r\n      if (startAngle < endAngle) {\r\n        if (startAngle < xAngle && xAngle < endAngle) {\r\n          xs.push(xAngle);\r\n        }\r\n      } else {\r\n        if (endAngle < xAngle && xAngle < startAngle) {\r\n          xs.push(xAngle);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < xs.length; i++) {\r\n      const x = xAt(cx, cy, rx, ry, xRotation, xs[i]);\r\n      if (x < minX) {\r\n        minX = x;\r\n      }\r\n      if (x > maxX) {\r\n        maxX = x;\r\n      }\r\n    }\r\n\r\n    const yDim = yExtrema(rx, ry, xRotation);\r\n    let minY = Infinity;\r\n    let maxY = -Infinity;\r\n    const ys = [startAngle, endAngle];\r\n    for (let i = -Math.PI * 2; i <= Math.PI * 2; i += Math.PI) {\r\n      const yAngle = yDim + i;\r\n      if (startAngle < endAngle) {\r\n        if (startAngle < yAngle && yAngle < endAngle) {\r\n          ys.push(yAngle);\r\n        }\r\n      } else {\r\n        if (endAngle < yAngle && yAngle < startAngle) {\r\n          ys.push(yAngle);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < ys.length; i++) {\r\n      const y = yAt(cx, cy, rx, ry, xRotation, ys[i]);\r\n      if (y < minY) {\r\n        minY = y;\r\n      }\r\n      if (y > maxY) {\r\n        maxY = y;\r\n      }\r\n    }\r\n\r\n    return {\r\n      x: minX,\r\n      y: minY,\r\n      width: maxX - minX,\r\n      height: maxY - minY,\r\n    };\r\n  },\r\n  /**\r\n   * 获取圆弧的长度，计算圆弧长度时不考虑旋转角度，\r\n   * 仅跟 rx, ry, startAngle, endAngle 相关\r\n   * @param {number} cx         圆心 x\r\n   * @param {number} cy         圆心 y\r\n   * @param {number} rx         x 轴方向的半径\r\n   * @param {number} ry         y 轴方向的半径\r\n   * @param {number} xRotation  旋转角度\r\n   * @param {number} startAngle 起始角度\r\n   * @param {number} endAngle   结束角度\r\n   */\r\n  length(cx: number, cy: number, rx: number, ry: number, xRotation: number, startAngle: number, endAngle: number) {},\r\n  /**\r\n   * 获取指定点到圆弧的最近距离的点\r\n   * @param {number} cx         圆心 x\r\n   * @param {number} cy         圆心 y\r\n   * @param {number} rx         x 轴方向的半径\r\n   * @param {number} ry         y 轴方向的半径\r\n   * @param {number} xRotation  旋转角度\r\n   * @param {number} startAngle 起始角度\r\n   * @param {number} endAngle   结束角度\r\n   * @param {number} x0         指定点的 x\r\n   * @param {number} y0         指定点的 y\r\n   * @return {object} 到指定点最近距离的点\r\n   */\r\n  nearestPoint(\r\n    cx: number,\r\n    cy: number,\r\n    rx: number,\r\n    ry: number,\r\n    xRotation: number,\r\n    startAngle: number,\r\n    endAngle: number,\r\n    x0: number,\r\n    y0: number\r\n  ) {\r\n    // 将最近距离问题转换成到椭圆中心 0,0 没有旋转的椭圆问题\r\n    const relativeVector = rotate(x0 - cx, y0 - cy, -xRotation);\r\n    const [x1, y1] = relativeVector;\r\n    // 计算点到椭圆的最近的点\r\n    let relativePoint = ellipse.nearestPoint(0, 0, rx, ry, x1, y1);\r\n    // 获取点在椭圆上的角度\r\n    const angle = getAngle(rx, ry, relativePoint.x, relativePoint.y);\r\n    // 点没有在圆弧上\r\n    if (angle < startAngle) {\r\n      // 小于起始圆弧\r\n      relativePoint = getPoint(rx, ry, startAngle);\r\n    } else if (angle > endAngle) {\r\n      // 大于结束圆弧\r\n      relativePoint = getPoint(rx, ry, endAngle);\r\n    }\r\n    // 旋转到 xRotation 的角度\r\n    const vector = rotate(relativePoint.x, relativePoint.y, xRotation);\r\n    return {\r\n      x: vector[0] + cx,\r\n      y: vector[1] + cy,\r\n    };\r\n  },\r\n  pointDistance(\r\n    cx: number,\r\n    cy: number,\r\n    rx: number,\r\n    ry: number,\r\n    xRotation: number,\r\n    startAngle: number,\r\n    endAngle: number,\r\n    x0: number,\r\n    y0: number\r\n  ) {\r\n    const nearestPoint = this.nearestPoint(cx, cy, rx, ry, x0, y0);\r\n    return distance(nearestPoint.x, nearestPoint.y, x0, y0);\r\n  },\r\n  pointAt(\r\n    cx: number,\r\n    cy: number,\r\n    rx: number,\r\n    ry: number,\r\n    xRotation: number,\r\n    startAngle: number,\r\n    endAngle: number,\r\n    t: number\r\n  ): Point {\r\n    const angle = (endAngle - startAngle) * t + startAngle;\r\n    return {\r\n      x: xAt(cx, cy, rx, ry, xRotation, angle),\r\n      y: yAt(cx, cy, rx, ry, xRotation, angle),\r\n    };\r\n  },\r\n  tangentAngle(\r\n    cx: number,\r\n    cy: number,\r\n    rx: number,\r\n    ry: number,\r\n    xRotation: number,\r\n    startAngle: number,\r\n    endAngle: number,\r\n    t: number\r\n  ) {\r\n    const angle = (endAngle - startAngle) * t + startAngle;\r\n    const dx = derivativeXAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, angle);\r\n    const dy = derivativeYAt(cx, cy, rx, ry, xRotation, startAngle, endAngle, angle);\r\n    return piMod(Math.atan2(dy, dx));\r\n  },\r\n};\r\n", "import line from './line';\r\nimport { distance } from './util';\r\nimport { Point, PointTuple, Segment } from './types';\r\n\r\nfunction analyzePoints(points: PointTuple[]) {\r\n  // 计算每段的长度和总的长度\r\n  let totalLength = 0;\r\n  const segments: Segment[] = [];\r\n  for (let i = 0; i < points.length - 1; i++) {\r\n    const from = points[i];\r\n    const to = points[i + 1];\r\n    const length = distance(from[0], from[1], to[0], to[1]);\r\n    const seg = {\r\n      from,\r\n      to,\r\n      length,\r\n    };\r\n    segments.push(seg);\r\n    totalLength += length;\r\n  }\r\n  return { segments, totalLength };\r\n}\r\n\r\nexport function lengthOfSegment(points: PointTuple[]) {\r\n  if (points.length < 2) {\r\n    return 0;\r\n  }\r\n  let totalLength = 0;\r\n  for (let i = 0; i < points.length - 1; i++) {\r\n    const from = points[i];\r\n    const to = points[i + 1];\r\n    totalLength += distance(from[0], from[1], to[0], to[1]);\r\n  }\r\n  return totalLength;\r\n}\r\n\r\n/**\r\n * 按照比例在数据片段中获取点\r\n * @param {array} points 点的集合\r\n * @param {number} t 百分比 0-1\r\n * @return {object} 点的坐标\r\n */\r\nexport function pointAtSegments(points: PointTuple[], t: number): Point {\r\n  // 边界判断\r\n  if (t > 1 || t < 0 || points.length < 2) {\r\n    return null;\r\n  }\r\n  const { segments, totalLength } = analyzePoints(points);\r\n  // 多个点有可能重合\r\n  if (totalLength === 0) {\r\n    return {\r\n      x: points[0][0],\r\n      y: points[0][1],\r\n    };\r\n  }\r\n  // 计算比例\r\n  let startRatio = 0;\r\n  let point = null;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const seg = segments[i];\r\n    const { from, to } = seg;\r\n    const currentRatio = seg.length / totalLength;\r\n    if (t >= startRatio && t <= startRatio + currentRatio) {\r\n      const localRatio = (t - startRatio) / currentRatio;\r\n      point = line.pointAt(from[0], from[1], to[0], to[1], localRatio);\r\n      break;\r\n    }\r\n    startRatio += currentRatio;\r\n  }\r\n  return point;\r\n}\r\n\r\n/**\r\n * 按照比例在数据片段中获取切线的角度\r\n * @param {array} points 点的集合\r\n * @param {number} t 百分比 0-1\r\n */\r\nexport function angleAtSegments(points: PointTuple[], t: number) {\r\n  // 边界判断\r\n  if (t > 1 || t < 0 || points.length < 2) {\r\n    return 0;\r\n  }\r\n  const { segments, totalLength } = analyzePoints(points);\r\n  // 计算比例\r\n  let startRatio = 0;\r\n  let angle = 0;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const seg = segments[i];\r\n    const { from, to } = seg;\r\n    const currentRatio = seg.length / totalLength;\r\n    if (t >= startRatio && t <= startRatio + currentRatio) {\r\n      angle = Math.atan2(to[1] - from[1], to[0] - from[0]);\r\n      break;\r\n    }\r\n    startRatio += currentRatio;\r\n  }\r\n  return angle;\r\n}\r\n\r\nexport function distanceAtSegment(points: PointTuple[], x: number, y: number) {\r\n  let minDistance = Infinity;\r\n  for (let i = 0; i < points.length - 1; i++) {\r\n    const point = points[i];\r\n    const nextPoint = points[i + 1];\r\n    const distance = line.pointDistance(point[0], point[1], nextPoint[0], nextPoint[1], x, y);\r\n    if (distance < minDistance) {\r\n      minDistance = distance;\r\n    }\r\n  }\r\n  return minDistance;\r\n}\r\n", "import { pointAtSegments, angleAtSegments, distanceAtSegment, lengthOfSegment } from './segments';\r\nimport { getBBoxByArray } from './util';\r\nimport { PointTuple, BBox } from './types';\r\n\r\nexport default {\r\n  /**\r\n   * 计算多折线的包围盒\r\n   * @param {array} points 点的集合 [x,y] 的形式\r\n   * @return {object} 包围盒\r\n   */\r\n  box(points: PointTuple[]): BBox {\r\n    const xArr = [];\r\n    const yArr = [];\r\n    for (let i = 0; i < points.length; i++) {\r\n      const point = points[i];\r\n      xArr.push(point[0]);\r\n      yArr.push(point[1]);\r\n    }\r\n    return getBBoxByArray(xArr, yArr);\r\n  },\r\n  /**\r\n   * 计算多折线的长度\r\n   * @param {array} points 点的集合 [x,y] 的形式\r\n   * @return {object} 多条边的长度\r\n   */\r\n  length(points: PointTuple[]) {\r\n    return lengthOfSegment(points);\r\n  },\r\n  /**\r\n   * 根据比例获取多折线的点\r\n   * @param {array} points 点的集合 [x,y] 的形式\r\n   * @param {number} t 在多折线的长度上的比例\r\n   * @return {object} 根据比例值计算出来的点\r\n   */\r\n  pointAt(points: PointTuple[], t: number) {\r\n    return pointAtSegments(points, t);\r\n  },\r\n  /**\r\n   * 指定点到多折线的距离\r\n   * @param {array} points 点的集合 [x,y] 的形式\r\n   * @param {number} x 指定点的 x\r\n   * @param {number} y 指定点的 y\r\n   * @return {number} 点到多折线的距离\r\n   */\r\n  pointDistance(points: PointTuple[], x: number, y: number) {\r\n    return distanceAtSegment(points, x, y);\r\n  },\r\n  /**\r\n   * 根据比例获取多折线的切线角度\r\n   * @param {array} points 点的集合 [x,y] 的形式\r\n   * @param {number} t 在多折线的长度上的比例\r\n   * @return {object} 根据比例值计算出来的角度\r\n   */\r\n  tangentAngle(points: PointTuple[], t: number) {\r\n    return angleAtSegments(points, t);\r\n  },\r\n};\r\n", "import { IShape } from '../interfaces';\r\n\r\n// 合并包围盒\r\nexport function mergeBBox(bbox1, bbox2) {\r\n  if (!bbox1 || !bbox2) {\r\n    return bbox1 || bbox2;\r\n  }\r\n  return {\r\n    minX: Math.min(bbox1.minX, bbox2.minX),\r\n    minY: Math.min(bbox1.minY, bbox2.minY),\r\n    maxX: Math.max(bbox1.maxX, bbox2.maxX),\r\n    maxY: Math.max(bbox1.maxY, bbox2.maxY),\r\n  };\r\n}\r\n\r\n// 合并箭头的包围盒\r\nexport function mergeArrowBBox(shape: IShape, bbox) {\r\n  const startArrowShape = shape.get('startArrowShape');\r\n  const endArrowShape = shape.get('endArrowShape');\r\n  let startArrowBBox = null;\r\n  let endArrowBBox = null;\r\n  if (startArrowShape) {\r\n    startArrowBBox = startArrowShape.getCanvasBBox();\r\n    bbox = mergeBBox(bbox, startArrowBBox);\r\n  }\r\n  if (endArrowShape) {\r\n    endArrowBBox = endArrowShape.getCanvasBBox();\r\n    bbox = mergeBBox(bbox, endArrowBBox);\r\n  }\r\n  return bbox;\r\n}\r\n", "import { Util } from '@antv/g-math';\r\nimport { SimpleBBox } from '../types';\r\nimport { IShape } from '../interfaces';\r\nimport { mergeArrowBBox } from './util';\r\n\r\nexport default function (shape: IShape): SimpleBBox {\r\n  const attrs = shape.attr();\r\n  const { points } = attrs;\r\n  const xArr = [];\r\n  const yArr = [];\r\n  for (let i = 0; i < points.length; i++) {\r\n    const point = points[i];\r\n    xArr.push(point[0]);\r\n    yArr.push(point[1]);\r\n  }\r\n  const { x, y, width, height } = Util.getBBoxByArray(xArr, yArr);\r\n  let bbox = {\r\n    minX: x,\r\n    minY: y,\r\n    maxX: x + width,\r\n    maxY: y + height,\r\n  };\r\n  bbox = mergeArrowBBox(shape, bbox);\r\n  return {\r\n    x: bbox.minX,\r\n    y: bbox.minY,\r\n    width: bbox.maxX - bbox.minX,\r\n    height: bbox.maxY - bbox.minY,\r\n  };\r\n}\r\n", "import { Util } from '@antv/g-math';\r\nimport { SimpleBBox } from '../types';\r\nimport { IShape } from '../interfaces';\r\n\r\nexport default function (shape: IShape): SimpleBBox {\r\n  const attrs = shape.attr();\r\n  const { points } = attrs;\r\n  const xArr = [];\r\n  const yArr = [];\r\n  for (let i = 0; i < points.length; i++) {\r\n    const point = points[i];\r\n    xArr.push(point[0]);\r\n    yArr.push(point[1]);\r\n  }\r\n  return Util.getBBoxByArray(xArr, yArr);\r\n}\r\n", "// 全局设置一个唯一离屏的 ctx，用于计算 isPointInPath\r\nlet offScreenCtx = null;\r\nexport function getOffScreenContext() {\r\n  if (!offScreenCtx) {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    offScreenCtx = canvas.getContext('2d');\r\n  }\r\n  return offScreenCtx;\r\n}\r\n", "import { isNil, each, isString } from './util';\r\nimport { getOffScreenContext } from './offscreen';\r\nimport { ShapeAttrs } from '../types';\r\n\r\n/**\r\n * 获取文本的高度\r\n * @param text 文本\r\n * @param fontSize 字体大小\r\n * @param lineHeight 行高，可以为空\r\n */\r\nexport function getTextHeight(text: string, fontSize: number, lineHeight?: number): number {\r\n  let lineCount = 1;\r\n  if (isString(text)) {\r\n    lineCount = text.split('\\n').length;\r\n  }\r\n  if (lineCount > 1) {\r\n    const spaceingY = getLineSpaceing(fontSize, lineHeight);\r\n    return fontSize * lineCount + spaceingY * (lineCount - 1);\r\n  }\r\n  return fontSize;\r\n}\r\n\r\n/**\r\n * 获取行间距如果文本多行，需要获取文本间距\r\n * @param fontSize 字体大小\r\n * @param lineHeight 行高\r\n */\r\nexport function getLineSpaceing(fontSize: number, lineHeight?: number): number {\r\n  return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\r\n}\r\n\r\n/**\r\n * 字体宽度\r\n * @param text 文本\r\n * @param font 字体\r\n */\r\nexport function getTextWidth(text: string, font: string) {\r\n  const context = getOffScreenContext(); // 获取离屏的 ctx 进行计算\r\n  let width = 0;\r\n  // null 或者 undefined 时，宽度为 0\r\n  if (isNil(text) || text === '') {\r\n    return width;\r\n  }\r\n  context.save();\r\n  context.font = font;\r\n  if (isString(text) && text.includes('\\n')) {\r\n    const textArr = text.split('\\n');\r\n    each(textArr, (subText) => {\r\n      const measureWidth = context.measureText(subText).width;\r\n      if (width < measureWidth) {\r\n        width = measureWidth;\r\n      }\r\n    });\r\n  } else {\r\n    width = context.measureText(text).width;\r\n  }\r\n  context.restore();\r\n  return width;\r\n}\r\n\r\nexport function assembleFont(attrs: ShapeAttrs) {\r\n  const { fontSize, fontFamily, fontWeight, fontStyle, fontVariant } = attrs;\r\n  return [fontStyle, fontVariant, fontWeight, `${fontSize}px`, fontFamily].join(' ').trim();\r\n}\r\n", "import { SimpleBBox } from '../types';\r\nimport { IShape } from '../interfaces';\r\nimport { getTextWidth, getTextHeight, assembleFont } from '../util/text';\r\n\r\nexport default function (shape: IShape): SimpleBBox {\r\n  const attrs = shape.attr();\r\n  const { x, y, text, fontSize, lineHeight } = attrs;\r\n  let font = attrs.font;\r\n  if (!font) {\r\n    // 如果未组装 font\r\n    font = assembleFont(attrs);\r\n  }\r\n  const width = getTextWidth(text, font);\r\n  let bbox;\r\n  if (!width) {\r\n    // 如果width不存在，四点共其实点\r\n    bbox = {\r\n      x,\r\n      y,\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n  } else {\r\n    const { textAlign, textBaseline } = attrs;\r\n    const height = getTextHeight(text, fontSize, lineHeight); // attrs.height\r\n    // 默认左右对齐：left, 默认上下对齐 bottom\r\n    const point = {\r\n      x,\r\n      y: y - height,\r\n    };\r\n    if (textAlign) {\r\n      if (textAlign === 'end' || textAlign === 'right') {\r\n        point.x -= width;\r\n      } else if (textAlign === 'center') {\r\n        point.x -= width / 2;\r\n      }\r\n    }\r\n    if (textBaseline) {\r\n      if (textBaseline === 'top') {\r\n        point.y += height;\r\n      } else if (textBaseline === 'middle') {\r\n        point.y += height / 2;\r\n      }\r\n    }\r\n\r\n    bbox = {\r\n      x: point.x,\r\n      y: point.y,\r\n      width: width,\r\n      height: height,\r\n    };\r\n  }\r\n  return bbox;\r\n}\r\n", "import { Quad as QuadUtil, Cubic as CubicUtil, Arc as EllipseArcUtil } from '@antv/g-math';\r\nimport { path2Segments } from '@antv/path-util';\r\nimport { isNumberEqual, max, min } from '@antv/util';\r\nimport { SimpleBBox } from '../types';\r\nimport { IShape } from '../interfaces';\r\nimport { mergeArrowBBox } from './util';\r\n\r\nfunction getPathBox(segments, lineWidth) {\r\n  let xArr = [];\r\n  let yArr = [];\r\n  const segmentsWithAngle = [];\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const { currentPoint, params, prePoint } = segment;\r\n    let box;\r\n    switch (segment.command) {\r\n      case 'Q':\r\n        box = QuadUtil.box(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4]);\r\n        break;\r\n      case 'C':\r\n        box = CubicUtil.box(prePoint[0], prePoint[1], params[1], params[2], params[3], params[4], params[5], params[6]);\r\n        break;\r\n      case 'A':\r\n        const arcParams = segment.arcParams;\r\n        box = EllipseArcUtil.box(\r\n          arcParams.cx,\r\n          arcParams.cy,\r\n          arcParams.rx,\r\n          arcParams.ry,\r\n          arcParams.xRotation,\r\n          arcParams.startAngle,\r\n          arcParams.endAngle\r\n        );\r\n        break;\r\n      default:\r\n        xArr.push(currentPoint[0]);\r\n        yArr.push(currentPoint[1]);\r\n        break;\r\n    }\r\n    if (box) {\r\n      segment.box = box;\r\n      xArr.push(box.x, box.x + box.width);\r\n      yArr.push(box.y, box.y + box.height);\r\n    }\r\n    if (lineWidth && (segment.command === 'L' || segment.command === 'M') && segment.prePoint && segment.nextPoint) {\r\n      segmentsWithAngle.push(segment);\r\n    }\r\n  }\r\n  // bbox calculation should ignore NaN for path attribute\r\n  // ref: https://github.com/antvis/g/issues/210\r\n  // ref: https://github.com/antvis/G2/issues/3109\r\n  xArr = xArr.filter((item) => !Number.isNaN(item) && item !== Infinity && item !== -Infinity);\r\n  yArr = yArr.filter((item) => !Number.isNaN(item) && item !== Infinity && item !== -Infinity);\r\n  let minX = min(xArr);\r\n  let minY = min(yArr);\r\n  let maxX = max(xArr);\r\n  let maxY = max(yArr);\r\n  if (segmentsWithAngle.length === 0) {\r\n    return {\r\n      x: minX,\r\n      y: minY,\r\n      width: maxX - minX,\r\n      height: maxY - minY,\r\n    };\r\n  }\r\n  for (let i = 0; i < segmentsWithAngle.length; i++) {\r\n    const segment = segmentsWithAngle[i];\r\n    const { currentPoint } = segment;\r\n    let extra;\r\n    if (currentPoint[0] === minX) {\r\n      extra = getExtraFromSegmentWithAngle(segment, lineWidth);\r\n      minX = minX - extra.xExtra;\r\n    } else if (currentPoint[0] === maxX) {\r\n      extra = getExtraFromSegmentWithAngle(segment, lineWidth);\r\n      maxX = maxX + extra.xExtra;\r\n    }\r\n    if (currentPoint[1] === minY) {\r\n      extra = getExtraFromSegmentWithAngle(segment, lineWidth);\r\n      minY = minY - extra.yExtra;\r\n    } else if (currentPoint[1] === maxY) {\r\n      extra = getExtraFromSegmentWithAngle(segment, lineWidth);\r\n      maxY = maxY + extra.yExtra;\r\n    }\r\n  }\r\n  return {\r\n    x: minX,\r\n    y: minY,\r\n    width: maxX - minX,\r\n    height: maxY - minY,\r\n  };\r\n}\r\n\r\nfunction getExtraFromSegmentWithAngle(segment, lineWidth) {\r\n  const { prePoint, currentPoint, nextPoint } = segment;\r\n  const currentAndPre = Math.pow(currentPoint[0] - prePoint[0], 2) + Math.pow(currentPoint[1] - prePoint[1], 2);\r\n  const currentAndNext = Math.pow(currentPoint[0] - nextPoint[0], 2) + Math.pow(currentPoint[1] - nextPoint[1], 2);\r\n  const preAndNext = Math.pow(prePoint[0] - nextPoint[0], 2) + Math.pow(prePoint[1] - nextPoint[1], 2);\r\n  // 以 currentPoint 为顶点的夹角\r\n  const currentAngle = Math.acos(\r\n    (currentAndPre + currentAndNext - preAndNext) / (2 * Math.sqrt(currentAndPre) * Math.sqrt(currentAndNext))\r\n  );\r\n  // 夹角为空、 0 或 PI 时，不需要计算夹角处的额外宽度\r\n  // 注意: 由于计算精度问题，夹角为 0 的情况计算出来的角度可能是一个很小的值，还需要判断其与 0 是否近似相等\r\n  if (!currentAngle || Math.sin(currentAngle) === 0 || isNumberEqual(currentAngle, 0)) {\r\n    return {\r\n      xExtra: 0,\r\n      yExtra: 0,\r\n    };\r\n  }\r\n  let xAngle = Math.abs(Math.atan2(nextPoint[1] - currentPoint[1], nextPoint[0] - currentPoint[0]));\r\n  let yAngle = Math.abs(Math.atan2(nextPoint[0] - currentPoint[0], nextPoint[1] - currentPoint[1]));\r\n  // 将夹角转为锐角\r\n  xAngle = xAngle > Math.PI / 2 ? Math.PI - xAngle : xAngle;\r\n  yAngle = yAngle > Math.PI / 2 ? Math.PI - yAngle : yAngle;\r\n  // 这里不考虑在水平和垂直方向的投影，直接使用最大差值\r\n  // 由于上层统一加减了二分之一线宽，这里需要进行弥补\r\n  const extra = {\r\n    // 水平方向投影\r\n    xExtra:\r\n      Math.cos(currentAngle / 2 - xAngle) * ((lineWidth / 2) * (1 / Math.sin(currentAngle / 2))) - lineWidth / 2 || 0,\r\n    // 垂直方向投影\r\n    yExtra:\r\n      Math.cos(yAngle - currentAngle / 2) * ((lineWidth / 2) * (1 / Math.sin(currentAngle / 2))) - lineWidth / 2 || 0,\r\n  };\r\n  return extra;\r\n}\r\n\r\nexport default function (shape: IShape): SimpleBBox {\r\n  const attrs = shape.attr();\r\n  const { path, stroke } = attrs;\r\n  const lineWidth = stroke ? attrs.lineWidth : 0; // 只有有 stroke 时，lineWidth 才生效\r\n  const segments = shape.get('segments') || path2Segments(path);\r\n  const { x, y, width, height } = getPathBox(segments, lineWidth);\r\n  let bbox = {\r\n    minX: x,\r\n    minY: y,\r\n    maxX: x + width,\r\n    maxY: y + height,\r\n  };\r\n  bbox = mergeArrowBBox(shape, bbox);\r\n  return {\r\n    x: bbox.minX,\r\n    y: bbox.minY,\r\n    width: bbox.maxX - bbox.minX,\r\n    height: bbox.maxY - bbox.minY,\r\n  };\r\n}\r\n", "import { SimpleBBox } from '../types';\r\nimport { IShape } from '../interfaces';\r\nimport { mergeArrowBBox } from './util';\r\n\r\nexport default function (shape: IShape): SimpleBBox {\r\n  const attrs = shape.attr();\r\n  const { x1, y1, x2, y2 } = attrs;\r\n  const minX = Math.min(x1, x2);\r\n  const maxX = Math.max(x1, x2);\r\n  const minY = Math.min(y1, y2);\r\n  const maxY = Math.max(y1, y2);\r\n  let bbox = {\r\n    minX,\r\n    maxX,\r\n    minY,\r\n    maxY,\r\n  };\r\n  bbox = mergeArrowBBox(shape, bbox);\r\n  return {\r\n    x: bbox.minX,\r\n    y: bbox.minY,\r\n    width: bbox.maxX - bbox.minX,\r\n    height: bbox.maxY - bbox.minY,\r\n  };\r\n}\r\n", "import { SimpleBBox } from '../types';\r\nimport { IShape } from '../interfaces';\r\n\r\nexport default function (shape: IShape): SimpleBBox {\r\n  const attrs = shape.attr();\r\n  const { x, y, rx, ry } = attrs;\r\n  return {\r\n    x: x - rx,\r\n    y: y - ry,\r\n    width: rx * 2,\r\n    height: ry * 2,\r\n  };\r\n}\r\n", "import { register, getMethod } from './register';\r\nimport rect from './rect';\r\nimport circle from './circle';\r\nimport polyline from './polyline';\r\nimport polygon from './polygon';\r\nimport text from './text';\r\nimport path from './path';\r\nimport line from './line';\r\nimport ellipse from './ellipse';\r\n\r\nregister('rect', rect);\r\nregister('image', rect); // image 使用 rect 的包围盒计算\r\nregister('circle', circle);\r\nregister('marker', circle); // marker 使用 circle 的计算方案\r\nregister('polyline', polyline);\r\nregister('polygon', polygon);\r\nregister('text', text);\r\nregister('path', path);\r\nregister('line', line);\r\nregister('ellipse', ellipse);\r\n\r\nexport { getMethod as getBBoxMethod, register as registerBBox };\r\n", "import { IContainer, IElement, IGroup, IShape, isAllowCapture, multiplyVec2, invert } from '@antv/g-base';\r\n\r\nfunction invertFromMatrix(v: number[], matrix: number[]): number[] {\r\n  if (matrix) {\r\n    const invertMatrix = invert(matrix);\r\n    return multiplyVec2(invertMatrix, v);\r\n  }\r\n  return v;\r\n}\r\n\r\nfunction getRefXY(element: IElement, x: number, y: number) {\r\n  // @ts-ignore\r\n  const totalMatrix = element.getTotalMatrix();\r\n  if (totalMatrix) {\r\n    const [refX, refY] = invertFromMatrix([x, y, 1], totalMatrix);\r\n    return [refX, refY];\r\n  }\r\n  return [x, y];\r\n}\r\n\r\n// 拾取前的检测，只有通过检测才能继续拾取\r\nfunction preTest(element: IElement, x: number, y: number) {\r\n  // @ts-ignore\r\n  if (element.isCanvas && element.isCanvas()) {\r\n    return true;\r\n  }\r\n  // 不允许被拾取，则返回 null\r\n  // @ts-ignore\r\n  if (!isAllowCapture(element) || element.cfg.isInView === false) {\r\n    return false;\r\n  }\r\n\r\n  if (element.cfg.clipShape) {\r\n    // 如果存在 clip\r\n    const [refX, refY] = getRefXY(element, x, y);\r\n    if (element.isClipped(refX, refY)) {\r\n      return false;\r\n    }\r\n  }\r\n  // @ts-ignore ，这个地方调用过于频繁\r\n  const bbox = element.cfg.cacheCanvasBBox || element.getCanvasBBox();\r\n  // 如果没有缓存 bbox，则说明不可见\r\n  // 注释掉的这段可能会加速拾取，上面的语句改写成 const bbox = element.cfg.cacheCanvasBBox;\r\n  // 这时候的拾取假设图形/分组在上一次绘制都在视窗内，但是上面已经判定了 isInView 所以意义不大\r\n  // 现在还调用 element.getCanvasBBox(); 一个很大的原因是便于单元测试\r\n  // if (!bbox) {\r\n  //   return false;\r\n  // }\r\n  if (!(x >= bbox.minX && x <= bbox.maxX && y >= bbox.minY && y <= bbox.maxY)) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n// 这个方法复写了 g-base 的 getShape\r\nexport function getShape(container: IContainer, x: number, y: number) {\r\n  // 没有通过检测，则返回 null\r\n  if (!preTest(container, x, y)) {\r\n    return null;\r\n  }\r\n  let shape = null;\r\n  const children = container.getChildren();\r\n  const count = children.length;\r\n  for (let i = count - 1; i >= 0; i--) {\r\n    const child = children[i];\r\n    if (child.isGroup()) {\r\n      shape = getShape(child as IGroup, x, y);\r\n    } else if (preTest(child, x, y)) {\r\n      const curShape = child as IShape;\r\n      const [refX, refY] = getRefXY(child, x, y);\r\n      // @ts-ignore\r\n      if (curShape.isInShape(refX, refY)) {\r\n        shape = child;\r\n      }\r\n    }\r\n    if (shape) {\r\n      break;\r\n    }\r\n  }\r\n  return shape;\r\n}\r\n", "export { default as Base } from './base';\r\nexport { default as Circle } from './circle';\r\nexport { default as Ellipse } from './ellipse';\r\nexport { default as Image } from './image';\r\nexport { default as Line } from './line';\r\nexport { default as Marker } from './marker';\r\nexport { default as Path } from './path';\r\nexport { default as Polygon } from './polygon';\r\nexport { default as Polyline } from './polyline';\r\nexport { default as Rect } from './rect';\r\nexport { default as Text } from './text';\r\n", "export function getPixelRatio() {\r\n  return window ? window.devicePixelRatio : 1;\r\n}\r\n\r\n/**\r\n * 两点之间的距离\r\n * @param {number} x1 起始点 x\r\n * @param {number} y1 起始点 y\r\n * @param {number} x2 结束点 x\r\n * @param {number} y2 结束点 y\r\n */\r\nexport function distance(x1: number, y1: number, x2: number, y2: number) {\r\n  const dx = x1 - x2;\r\n  const dy = y1 - y2;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\n/**\r\n * 是否在包围盒内\r\n * @param {number} minX   包围盒开始的点 x\r\n * @param {number} minY   包围盒开始的点 y\r\n * @param {number} width  宽度\r\n * @param {number} height 高度\r\n * @param {[type]} x      检测点的 x\r\n * @param {[type]} y      监测点的 y\r\n */\r\nexport function inBox(minX: number, minY: number, width: number, height: number, x, y) {\r\n  return x >= minX && x <= minX + width && y >= minY && y <= minY + height;\r\n}\r\n\r\nexport function intersectRect(box1, box2) {\r\n  return !(box2.minX > box1.maxX || box2.maxX < box1.minX || box2.minY > box1.maxY || box2.maxY < box1.minY);\r\n}\r\n\r\n// 合并两个区域\r\nexport function mergeRegion(region1, region2) {\r\n  if (!region1 || !region2) {\r\n    return region1 || region2;\r\n  }\r\n  return {\r\n    minX: Math.min(region1.minX, region2.minX),\r\n    minY: Math.min(region1.minY, region2.minY),\r\n    maxX: Math.max(region1.maxX, region2.maxX),\r\n    maxY: Math.max(region1.maxY, region2.maxY),\r\n  };\r\n}\r\n\r\n/**\r\n * 判断两个点是否重合，点坐标的格式为 [x, y]\r\n * @param {Array} point1 第一个点\r\n * @param {Array} point2 第二个点\r\n */\r\nexport function isSamePoint(point1, point2) {\r\n  return point1[0] === point2[0] && point1[1] === point2[1];\r\n}\r\n\r\nexport {\r\n  isNil,\r\n  isString,\r\n  isFunction,\r\n  isArray,\r\n  each,\r\n  toRadian,\r\n  mod,\r\n  isNumberEqual,\r\n  requestAnimationFrame,\r\n  clearAnimationFrame,\r\n} from '@antv/util';\r\n", "import { each, isArray, max, min } from '@antv/util';\r\nimport { IElement } from '../interfaces';\r\nimport { Region } from '../types';\r\nimport { parseStyle } from './parse';\r\nimport getArcParams from './arc-params';\r\nimport { mergeRegion, intersectRect } from './util';\r\nimport * as ArrowUtil from '../util/arrow';\r\n\r\nconst SHAPE_ATTRS_MAP = {\r\n  fill: 'fillStyle',\r\n  stroke: 'strokeStyle',\r\n  opacity: 'globalAlpha',\r\n};\r\n\r\nexport function applyAttrsToContext(context: CanvasRenderingContext2D, element: IElement) {\r\n  const attrs = element.attr();\r\n  for (const k in attrs) {\r\n    let v = attrs[k];\r\n    // 转换一下不与 canvas 兼容的属性名\r\n    const name = SHAPE_ATTRS_MAP[k] ? SHAPE_ATTRS_MAP[k] : k;\r\n    if (name === 'matrix' && v) {\r\n      // 设置矩阵\r\n      context.transform(v[0], v[1], v[3], v[4], v[6], v[7]);\r\n    } else if (name === 'lineDash' && context.setLineDash) {\r\n      // 设置虚线，只支持数组形式，非数组形式不做任何操作\r\n      isArray(v) && context.setLineDash(v);\r\n    } else {\r\n      if (name === 'strokeStyle' || name === 'fillStyle') {\r\n        // 如果存在渐变、pattern 这个开销有些大\r\n        // 可以考虑缓存机制，通过 hasUpdate 来避免一些运算\r\n        v = parseStyle(context, element, v);\r\n      } else if (name === 'globalAlpha') {\r\n        // opacity 效果可以叠加，子元素的 opacity 需要与父元素 opacity 相乘\r\n        v = v * context.globalAlpha;\r\n      }\r\n      context[name] = v;\r\n    }\r\n  }\r\n}\r\n\r\nexport function drawChildren(context: CanvasRenderingContext2D, children: IElement[], region?: Region) {\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i] as IElement;\r\n    if (child.cfg.visible) {\r\n      child.draw(context, region);\r\n    } else {\r\n      child.skipDraw();\r\n    }\r\n  }\r\n}\r\n\r\n// 这个地方的逻辑比较复杂，简单画了一张图：https://www.yuque.com/antv/ou292n/pcgt5g#OW1QE\r\nexport function checkRefresh(canvas, children: IElement[], region: Region) {\r\n  const refreshElements = canvas.get('refreshElements');\r\n  // 先遍历需要刷新的元素，将这些元素的父元素也设置 refresh\r\n  each(refreshElements, (el) => {\r\n    if (el !== canvas) {\r\n      let parent = el.cfg.parent;\r\n      while (parent && parent !== canvas && !parent.cfg.refresh) {\r\n        parent.cfg.refresh = true;\r\n        parent = parent.cfg.parent;\r\n      }\r\n    }\r\n  });\r\n  if (refreshElements[0] === canvas) {\r\n    setChildrenRefresh(children, region);\r\n  } else {\r\n    // 检查所有子元素是否可以刷新\r\n    checkChildrenRefresh(children, region);\r\n  }\r\n}\r\n// 检查所有的子元素是否应该更新\r\nexport function checkChildrenRefresh(children: IElement[], region: Region) {\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i] as IElement;\r\n    if (child.cfg.visible) {\r\n      // 先判断 hasChanged，因为它的优先级判断应该高于 refresh\r\n      if (child.cfg.hasChanged) {\r\n        // 如果节点发生了 change，则需要级联设置子元素的 refresh\r\n        child.cfg.refresh = true;\r\n        if (child.isGroup()) {\r\n          setChildrenRefresh(child.cfg.children, region);\r\n        }\r\n      } else if (child.cfg.refresh) {\r\n        // 如果当前图形/分组 refresh = true，说明其子节点存在 changed\r\n        if (child.isGroup()) {\r\n          checkChildrenRefresh(child.cfg.children, region);\r\n        }\r\n      } else {\r\n        // 这个分支说明此次局部刷新，所有的节点和父元素没有发生变化，仅需要检查包围盒（缓存）是否相交即可\r\n        const refresh = checkElementRefresh(child, region);\r\n        child.cfg.refresh = refresh;\r\n        if (refresh && child.isGroup()) {\r\n          // 如果需要刷新，说明子元素也需要刷新，继续进行判定\r\n          checkChildrenRefresh(child.cfg.children, region);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 由于对改变的图形放入 refreshElements 时做了优化，判定父元素 changed 时不加入\r\n// 那么有可能会出现 elements 都为空，所以最终 group\r\nexport function clearChanged(elements: IElement[]) {\r\n  for (let i = 0; i < elements.length; i++) {\r\n    const el = elements[i];\r\n    el.cfg.hasChanged = false;\r\n    // 级联清理\r\n    if (el.isGroup() && !el.destroyed) {\r\n      clearChanged(el.cfg.children);\r\n    }\r\n  }\r\n}\r\n\r\n// 当某个父元素发生改变时，调用这个方法级联设置 refresh\r\nfunction setChildrenRefresh(children: IElement[], region: Region) {\r\n  for (let i = 0; i < children.length; i++) {\r\n    const child = children[i] as IElement;\r\n    if (!child.cfg.visible) {\r\n      continue;\r\n    }\r\n    // let refresh = true;\r\n    // 获取缓存的 bbox，如果这个 bbox 还存在则说明父元素不是矩阵发生了改变\r\n    // const bbox = child.cfg.canvasBBox;\r\n    // if (bbox) {\r\n    //   // 如果这时候\r\n    //   refresh = intersectRect(bbox, region);\r\n    // }\r\n    child.cfg.refresh = true;\r\n    // 如果需要刷新当前节点，所有的子元素设置 refresh\r\n    if (child.isGroup()) {\r\n      setChildrenRefresh(child.get('children'), region);\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkElementRefresh(shape: IElement, region: Region): boolean {\r\n  const bbox = shape.cfg.cacheCanvasBBox;\r\n  const isAllow = shape.cfg.isInView && bbox && intersectRect(bbox, region);\r\n  return isAllow;\r\n}\r\n\r\n// 绘制 path\r\nexport function drawPath(shape, context, attrs, arcParamsCache) {\r\n  const { path, startArrow, endArrow } = attrs;\r\n  if (!path) {\r\n    return;\r\n  }\r\n  let currentPoint = [0, 0]; // 当前图形\r\n  let startMovePoint = [0, 0]; // 开始 M 的点，可能会有多个\r\n  let distance = {\r\n    dx: 0,\r\n    dy: 0,\r\n  };\r\n  context.beginPath();\r\n  for (let i = 0; i < path.length; i++) {\r\n    const params = path[i];\r\n    const command = params[0];\r\n    if (i === 0 && startArrow && startArrow.d) {\r\n      const tangent = shape.getStartTangent();\r\n      distance = ArrowUtil.getShortenOffset(tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1], startArrow.d);\r\n    } else if (i === path.length - 2 && path[i + 1][0] === 'Z' && endArrow && endArrow.d) {\r\n      // 为了防止结尾为 Z 的 segment 缩短不起效，需要取最后两个 segment 特殊处理\r\n      const lastPath = path[i + 1];\r\n      if (lastPath[0] === 'Z') {\r\n        const tangent = shape.getEndTangent();\r\n        distance = ArrowUtil.getShortenOffset(tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1], endArrow.d);\r\n      }\r\n    } else if (i === path.length - 1 && endArrow && endArrow.d) {\r\n      if (path[0] !== 'Z') {\r\n        const tangent = shape.getEndTangent();\r\n        distance = ArrowUtil.getShortenOffset(tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1], endArrow.d);\r\n      }\r\n    }\r\n\r\n    const { dx, dy } = distance;\r\n    // V,H,S,T 都在前面被转换成标准形式\r\n    switch (command) {\r\n      case 'M':\r\n        context.moveTo(params[1] - dx, params[2] - dy);\r\n        startMovePoint = [params[1], params[2]];\r\n        break;\r\n      case 'L':\r\n        context.lineTo(params[1] - dx, params[2] - dy);\r\n        break;\r\n      case 'Q':\r\n        context.quadraticCurveTo(params[1], params[2], params[3] - dx, params[4] - dy);\r\n        break;\r\n      case 'C':\r\n        context.bezierCurveTo(params[1], params[2], params[3], params[4], params[5] - dx, params[6] - dy);\r\n        break;\r\n      case 'A': {\r\n        let arcParams;\r\n        // 为了加速绘制，可以提供参数的缓存，各个图形自己缓存\r\n        if (arcParamsCache) {\r\n          arcParams = arcParamsCache[i];\r\n          if (!arcParams) {\r\n            arcParams = getArcParams(currentPoint, params);\r\n            arcParamsCache[i] = arcParams;\r\n          }\r\n        } else {\r\n          arcParams = getArcParams(currentPoint, params);\r\n        }\r\n        const { cx, cy, rx, ry, startAngle, endAngle, xRotation, sweepFlag } = arcParams;\r\n        // 直接使用椭圆的 api\r\n        if (context.ellipse) {\r\n          context.ellipse(cx, cy, rx, ry, xRotation, startAngle, endAngle, 1 - sweepFlag);\r\n        } else {\r\n          const r = rx > ry ? rx : ry;\r\n          const scaleX = rx > ry ? 1 : rx / ry;\r\n          const scaleY = rx > ry ? ry / rx : 1;\r\n          context.translate(cx, cy);\r\n          context.rotate(xRotation);\r\n          context.scale(scaleX, scaleY);\r\n          context.arc(0, 0, r, startAngle, endAngle, 1 - sweepFlag);\r\n          context.scale(1 / scaleX, 1 / scaleY);\r\n          context.rotate(-xRotation);\r\n          context.translate(-cx, -cy);\r\n        }\r\n        break;\r\n      }\r\n      case 'Z':\r\n        context.closePath();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // 有了 Z 后，当前节点从开始 M 的点开始\r\n    if (command === 'Z') {\r\n      currentPoint = startMovePoint;\r\n    } else {\r\n      const len = params.length;\r\n      currentPoint = [params[len - 2], params[len - 1]];\r\n    }\r\n  }\r\n}\r\n\r\n// 刷新图形元素(Shape 或者 Group)\r\nexport function refreshElement(element, changeType) {\r\n  const canvas = element.get('canvas');\r\n  // 只有存在于 canvas 上时生效\r\n  if (canvas) {\r\n    if (changeType === 'remove') {\r\n      // 一旦 remove，则无法在 element 上拿到包围盒\r\n      // destroy 后所有属性都拿不到，所以需要暂存一下\r\n      // 这是一段 hack 的代码\r\n      element._cacheCanvasBBox = element.get('cacheCanvasBBox');\r\n    }\r\n    // 防止反复刷新\r\n    if (!element.get('hasChanged')) {\r\n      // 但是始终要标记为 hasChanged，便于后面进行局部渲染\r\n      element.set('hasChanged', true);\r\n\r\n      // 本来只有局部渲染模式下，才需要记录更新的元素队列\r\n      // if (canvas.get('localRefresh')) {\r\n      //   canvas.refreshElement(element, changeType, canvas);\r\n      // }\r\n      // 但对于 https://github.com/antvis/g/issues/422 的场景，全局渲染的模式下也需要记录更新的元素队列\r\n      // 如果当前元素的父元素发生了改变，可以不放入队列，这句话大概能够提升 15% 的初次渲染性能\r\n      if (!(element.cfg.parent && element.cfg.parent.get('hasChanged'))) {\r\n        canvas.refreshElement(element, changeType, canvas);\r\n        if (canvas.get('autoDraw')) {\r\n          canvas.draw();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function getRefreshRegion(element): Region | undefined {\r\n  let region;\r\n  if (!element.destroyed) {\r\n    const cacheBox = element.get('cacheCanvasBBox');\r\n    const validCache = cacheBox && !!(cacheBox.width && cacheBox.height);\r\n    const bbox = element.getCanvasBBox();\r\n    const validBBox = bbox && !!(bbox.width && bbox.height);\r\n    // 是否是有效 bbox 判定，一些 NaN 或者 宽高为 0 的情况过滤掉\r\n    if (validCache && validBBox) {\r\n      region = mergeRegion(cacheBox, bbox);\r\n    } else if (validCache) {\r\n      region = cacheBox;\r\n    } else if (validBBox) {\r\n      region = bbox;\r\n    }\r\n  } else {\r\n    // 因为元素已经销毁所以无法获取到缓存的包围盒\r\n    region = element['_cacheCanvasBBox'];\r\n  }\r\n  return region;\r\n}\r\n\r\nexport function getMergedRegion(elements): Region {\r\n  if (!elements.length) {\r\n    return null;\r\n  }\r\n  const minXArr = [];\r\n  const minYArr = [];\r\n  const maxXArr = [];\r\n  const maxYArr = [];\r\n  each(elements, (el: IElement) => {\r\n    const region = getRefreshRegion(el);\r\n    if (region) {\r\n      minXArr.push(region.minX);\r\n      minYArr.push(region.minY);\r\n      maxXArr.push(region.maxX);\r\n      maxYArr.push(region.maxY);\r\n    }\r\n  });\r\n  return {\r\n    minX: min(minXArr),\r\n    minY: min(minYArr),\r\n    maxX: max(maxXArr),\r\n    maxY: max(maxYArr),\r\n  };\r\n}\r\n\r\nexport function mergeView(region, viewRegion) {\r\n  if (!region || !viewRegion) {\r\n    return null;\r\n  }\r\n  // 不相交，则直接返回 null\r\n  if (!intersectRect(region, viewRegion)) {\r\n    return null;\r\n  }\r\n  return {\r\n    minX: Math.max(region.minX, viewRegion.minX),\r\n    minY: Math.max(region.minY, viewRegion.minY),\r\n    maxX: Math.min(region.maxX, viewRegion.maxX),\r\n    maxY: Math.min(region.maxY, viewRegion.maxY),\r\n  };\r\n}\r\n", "import { IElement } from '@antv/g-base';\r\nimport { isString, each, isArray } from './util';\r\n\r\nconst regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\r\nconst regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\r\nconst regexPR = /^p\\s*\\(\\s*([axyn])\\s*\\)\\s*(.*)/i;\r\nconst regexColorStop = /[\\d.]+:(#[^\\s]+|[^\\)]+\\))/gi;\r\n\r\nfunction addStop(steps, gradient) {\r\n  const arr: string[] = steps.match(regexColorStop);\r\n  each(arr, (item) => {\r\n    const itemArr = item.split(':');\r\n    gradient.addColorStop(itemArr[0], itemArr[1]);\r\n  });\r\n}\r\n/**\r\n * 将边和填充设置的颜色转换成线性渐变对象\r\n * @param {CanvasRenderingContext2D} context canvas 上下文\r\n * @param {IElement}                 element  图形元素\r\n * @param {string}                   gradientStr   颜色\r\n * @returns {any} 渐变对象\r\n */\r\nexport function parseLineGradient(context: CanvasRenderingContext2D, element: IElement, gradientStr: string) {\r\n  const arr = regexLG.exec(gradientStr);\r\n  const angle = (parseFloat(arr[1]) % 360) * (Math.PI / 180);\r\n  const steps = arr[2];\r\n  const box = element.getBBox();\r\n  let start;\r\n  let end;\r\n\r\n  if (angle >= 0 && angle < (1 / 2) * Math.PI) {\r\n    start = {\r\n      x: box.minX,\r\n      y: box.minY,\r\n    };\r\n    end = {\r\n      x: box.maxX,\r\n      y: box.maxY,\r\n    };\r\n  } else if ((1 / 2) * Math.PI <= angle && angle < Math.PI) {\r\n    start = {\r\n      x: box.maxX,\r\n      y: box.minY,\r\n    };\r\n    end = {\r\n      x: box.minX,\r\n      y: box.maxY,\r\n    };\r\n  } else if (Math.PI <= angle && angle < (3 / 2) * Math.PI) {\r\n    start = {\r\n      x: box.maxX,\r\n      y: box.maxY,\r\n    };\r\n    end = {\r\n      x: box.minX,\r\n      y: box.minY,\r\n    };\r\n  } else {\r\n    start = {\r\n      x: box.minX,\r\n      y: box.maxY,\r\n    };\r\n    end = {\r\n      x: box.maxX,\r\n      y: box.minY,\r\n    };\r\n  }\r\n\r\n  const tanTheta = Math.tan(angle);\r\n  const tanTheta2 = tanTheta * tanTheta;\r\n\r\n  const x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;\r\n  const y = (tanTheta * (end.x - start.x + tanTheta * (end.y - start.y))) / (tanTheta2 + 1) + start.y;\r\n  const gradient = context.createLinearGradient(start.x, start.y, x, y);\r\n  addStop(steps, gradient);\r\n  return gradient;\r\n}\r\n\r\n/**\r\n * 将边和填充设置的颜色转换成圆形渐变对象\r\n * @param {CanvasRenderingContext2D} context canvas 上下文\r\n * @param {IElement}                 element  图形元素\r\n * @param {string}                   gradientStr   颜色\r\n * @returns {any} 渐变对象\r\n */\r\nexport function parseRadialGradient(context: CanvasRenderingContext2D, element: IElement, gradientStr: string) {\r\n  const arr = regexRG.exec(gradientStr);\r\n  const fx = parseFloat(arr[1]);\r\n  const fy = parseFloat(arr[2]);\r\n  const fr = parseFloat(arr[3]);\r\n  const steps = arr[4];\r\n  // 环半径为0时，默认无渐变，取渐变序列的最后一个颜色\r\n  if (fr === 0) {\r\n    const colors = steps.match(regexColorStop);\r\n    return colors[colors.length - 1].split(':')[1];\r\n  }\r\n  const box = element.getBBox();\r\n  const width = box.maxX - box.minX;\r\n  const height = box.maxY - box.minY;\r\n  const r = Math.sqrt(width * width + height * height) / 2;\r\n  const gradient = context.createRadialGradient(\r\n    box.minX + width * fx,\r\n    box.minY + height * fy,\r\n    0,\r\n    box.minX + width / 2,\r\n    box.minY + height / 2,\r\n    fr * r\r\n  );\r\n  addStop(steps, gradient);\r\n  return gradient;\r\n}\r\n\r\n/**\r\n * 边和填充设置的颜色转换成 pattern\r\n * @param {CanvasRenderingContext2D} context canvas 上下文\r\n * @param {IElement}                 element  图形元素\r\n * @param {string}                   patternStr   生成 pattern 的字符串\r\n */\r\nexport function parsePattern(context: CanvasRenderingContext2D, element: IElement, patternStr: string) {\r\n  // 在转换过程中进行了缓存\r\n  if (element.get('patternSource') && element.get('patternSource') === patternStr) {\r\n    return element.get('pattern');\r\n  }\r\n  let pattern;\r\n  let img;\r\n  const arr = regexPR.exec(patternStr);\r\n  let repeat = arr[1];\r\n  const source = arr[2];\r\n\r\n  // Function to be called when pattern loads\r\n  function onload() {\r\n    // Create pattern\r\n    pattern = context.createPattern(img, repeat);\r\n    element.set('pattern', pattern); // be a cache\r\n    element.set('patternSource', patternStr);\r\n  }\r\n\r\n  switch (repeat) {\r\n    case 'a':\r\n      repeat = 'repeat';\r\n      break;\r\n    case 'x':\r\n      repeat = 'repeat-x';\r\n      break;\r\n    case 'y':\r\n      repeat = 'repeat-y';\r\n      break;\r\n    case 'n':\r\n      repeat = 'no-repeat';\r\n      break;\r\n    default:\r\n      repeat = 'no-repeat';\r\n  }\r\n\r\n  img = new Image();\r\n  // If source URL is not a data URL\r\n  if (!source.match(/^data:/i)) {\r\n    // Set crossOrigin for this image\r\n    img.crossOrigin = 'Anonymous';\r\n  }\r\n  img.src = source;\r\n\r\n  if (img.complete) {\r\n    onload();\r\n  } else {\r\n    img.onload = onload;\r\n    // Fix onload() bug in IE9\r\n    img.src = img.src;\r\n  }\r\n\r\n  return pattern;\r\n}\r\n\r\nexport function parseStyle(context: CanvasRenderingContext2D, element: IElement, color: string | CanvasPattern) {\r\n  const bbox = element.getBBox();\r\n  if (isNaN(bbox.x) || isNaN(bbox.y) || isNaN(bbox.width) || isNaN(bbox.height)) {\r\n    return color;\r\n  }\r\n\r\n  if (isString(color)) {\r\n    if (color[1] === '(' || color[2] === '(') {\r\n      if (color[0] === 'l') {\r\n        // regexLG.test(color)\r\n        return parseLineGradient(context, element, color);\r\n      }\r\n      if (color[0] === 'r') {\r\n        // regexRG.test(color)\r\n        return parseRadialGradient(context, element, color);\r\n      }\r\n      if (color[0] === 'p') {\r\n        // regexPR.test(color)\r\n        return parsePattern(context, element, color);\r\n      }\r\n    }\r\n    return color;\r\n  }\r\n\r\n  if (color instanceof CanvasPattern) {\r\n    return color;\r\n  }\r\n}\r\n\r\nexport function parseRadius(radius) {\r\n  let r1 = 0;\r\n  let r2 = 0;\r\n  let r3 = 0;\r\n  let r4 = 0;\r\n  if (isArray(radius)) {\r\n    if (radius.length === 1) {\r\n      r1 = r2 = r3 = r4 = radius[0];\r\n    } else if (radius.length === 2) {\r\n      r1 = r3 = radius[0];\r\n      r2 = r4 = radius[1];\r\n    } else if (radius.length === 3) {\r\n      r1 = radius[0];\r\n      r2 = r4 = radius[1];\r\n      r3 = radius[2];\r\n    } else {\r\n      r1 = radius[0];\r\n      r2 = radius[1];\r\n      r3 = radius[2];\r\n      r4 = radius[3];\r\n    }\r\n  } else {\r\n    r1 = r2 = r3 = r4 = radius;\r\n  }\r\n  return [r1, r2, r3, r4];\r\n}\r\n", "import { mod, toRadian, isSamePoint } from './util';\r\n\r\n// 向量长度\r\nfunction vMag(v) {\r\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n}\r\n\r\n// u.v/|u||v|，计算夹角的余弦值\r\nfunction vRatio(u, v) {\r\n  // 当存在一个向量的长度为 0 时，夹角也为 0，即夹角的余弦值为 1\r\n  return vMag(u) * vMag(v) ? (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v)) : 1;\r\n}\r\n\r\n// 向量角度\r\nfunction vAngle(u, v) {\r\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\r\n}\r\n\r\n// A 0:rx 1:ry 2:x-axis-rotation 3:large-arc-flag 4:sweep-flag 5: x 6: y\r\nexport default function getArcParams(startPoint, params) {\r\n  let rx = params[1];\r\n  let ry = params[2];\r\n  const xRotation = mod(toRadian(params[3]), Math.PI * 2);\r\n  const arcFlag = params[4];\r\n  const sweepFlag = params[5];\r\n  // 弧形起点坐标\r\n  const x1 = startPoint[0];\r\n  const y1 = startPoint[1];\r\n  // 弧形终点坐标\r\n  const x2 = params[6];\r\n  const y2 = params[7];\r\n  const xp = (Math.cos(xRotation) * (x1 - x2)) / 2.0 + (Math.sin(xRotation) * (y1 - y2)) / 2.0;\r\n  const yp = (-1 * Math.sin(xRotation) * (x1 - x2)) / 2.0 + (Math.cos(xRotation) * (y1 - y2)) / 2.0;\r\n  const lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\r\n\r\n  if (lambda > 1) {\r\n    rx *= Math.sqrt(lambda);\r\n    ry *= Math.sqrt(lambda);\r\n  }\r\n  const diff = rx * rx * (yp * yp) + ry * ry * (xp * xp);\r\n\r\n  let f = diff ? Math.sqrt((rx * rx * (ry * ry) - diff) / diff) : 1;\r\n\r\n  if (arcFlag === sweepFlag) {\r\n    f *= -1;\r\n  }\r\n  if (isNaN(f)) {\r\n    f = 0;\r\n  }\r\n\r\n  // 旋转前的起点坐标，且当长半轴和短半轴的长度为 0 时，坐标按 (0, 0) 处理\r\n  const cxp = ry ? (f * rx * yp) / ry : 0;\r\n  const cyp = rx ? (f * -ry * xp) / rx : 0;\r\n\r\n  // 椭圆圆心坐标\r\n  const cx = (x1 + x2) / 2.0 + Math.cos(xRotation) * cxp - Math.sin(xRotation) * cyp;\r\n  const cy = (y1 + y2) / 2.0 + Math.sin(xRotation) * cxp + Math.cos(xRotation) * cyp;\r\n\r\n  // 起始点的单位向量\r\n  const u = [(xp - cxp) / rx, (yp - cyp) / ry];\r\n  // 终止点的单位向量\r\n  const v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\r\n  // 计算起始点和圆心的连线，与 x 轴正方向的夹角\r\n  const theta = vAngle([1, 0], u);\r\n\r\n  // 计算圆弧起始点和终止点与椭圆圆心连线的夹角\r\n  let dTheta = vAngle(u, v);\r\n\r\n  if (vRatio(u, v) <= -1) {\r\n    dTheta = Math.PI;\r\n  }\r\n  if (vRatio(u, v) >= 1) {\r\n    dTheta = 0;\r\n  }\r\n  if (sweepFlag === 0 && dTheta > 0) {\r\n    dTheta = dTheta - 2 * Math.PI;\r\n  }\r\n  if (sweepFlag === 1 && dTheta < 0) {\r\n    dTheta = dTheta + 2 * Math.PI;\r\n  }\r\n  return {\r\n    cx,\r\n    cy,\r\n    // 弧形的起点和终点相同时，长轴和短轴的长度按 0 处理\r\n    rx: isSamePoint(startPoint, [x2, y2]) ? 0 : rx,\r\n    ry: isSamePoint(startPoint, [x2, y2]) ? 0 : ry,\r\n    startAngle: theta,\r\n    endAngle: theta + dTheta,\r\n    xRotation,\r\n    arcFlag,\r\n    sweepFlag,\r\n  };\r\n}\r\n", "import { Path } from '../shape';\r\n\r\nconst { sin, cos, atan2, PI } = Math;\r\n\r\nfunction _addDefaultArrow(shape, attrs, x1, y1, x2, y2, isStart) {\r\n  const { stroke, lineWidth } = attrs;\r\n  const x = x1 - x2;\r\n  const y = y1 - y2;\r\n  const rad = atan2(y, x);\r\n  const arrowShape = new Path({\r\n    type: 'path',\r\n    canvas: shape.get('canvas'),\r\n    isArrowShape: true,\r\n    attrs: {\r\n      // 默认箭头的边长为 10，夹角为 60 度\r\n      path: `M${10 * cos(PI / 6)},${10 * sin(PI / 6)} L0,0 L${10 * cos(PI / 6)},-${10 * sin(PI / 6)}`,\r\n      // 使用 shape stroke 值\r\n      stroke,\r\n      lineWidth,\r\n    },\r\n  });\r\n  arrowShape.translate(x2, y2);\r\n  arrowShape.rotateAtPoint(x2, y2, rad);\r\n  shape.set(isStart ? 'startArrowShape' : 'endArrowShape', arrowShape);\r\n}\r\n\r\n/**\r\n * 箭头 path 的设置要求\r\n * 1. 箭头顶点坐标需要为 (0, 0)\r\n * 2. 箭头夹角的中心分割线需要与 X 轴正方向对齐\r\n */\r\nfunction _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, isStart) {\r\n  const { startArrow, endArrow, stroke, lineWidth } = attrs;\r\n  const arrowAttrs = isStart ? startArrow : endArrow;\r\n  const { d, fill: arrowFill, stroke: arrowStroke, lineWidth: arrowLineWidth, ...restAttrs } = arrowAttrs;\r\n  const x = x1 - x2;\r\n  const y = y1 - y2;\r\n  const rad = atan2(y, x);\r\n\r\n  if (d) {\r\n    x2 = x2 - cos(rad) * d;\r\n    y2 = y2 - sin(rad) * d;\r\n  }\r\n\r\n  const arrowShape = new Path({\r\n    type: 'path',\r\n    canvas: shape.get('canvas'),\r\n    isArrowShape: true,\r\n    attrs: {\r\n      ...restAttrs,\r\n      // 支持单独设置箭头的 stroke 和 lineWidth，若为空则使用 shape 的值\r\n      stroke: arrowStroke || stroke,\r\n      lineWidth: arrowLineWidth || lineWidth,\r\n      // 箭头是否填充需要手动设置，不会继承自 shape 的值\r\n      fill: arrowFill,\r\n    },\r\n  });\r\n\r\n  arrowShape.translate(x2, y2);\r\n  arrowShape.rotateAtPoint(x2, y2, rad);\r\n  shape.set(isStart ? 'startArrowShape' : 'endArrowShape', arrowShape);\r\n}\r\n\r\n/**\r\n * 如果自定义箭头并且有 d 需要做偏移，如果直接画，线条会超出箭头尖端，因此需要根据箭头偏移 d, 返回线需要缩短的距离\r\n * |----------------\r\n * |<|--------------\r\n * |\r\n * @param {number} x1 起始点 x\r\n * @param {number} y1 起始点 y\r\n * @param {number} x2 箭头作用点 x\r\n * @param {number} y2 箭头作用点 y\r\n * @param {number} d  箭头沿线条方向的偏移距离\r\n * @return {{dx: number, dy: number}} 返回线条偏移距离\r\n */\r\nexport function getShortenOffset(x1, y1, x2, y2, d) {\r\n  const rad = atan2(y2 - y1, x2 - x1);\r\n  return {\r\n    dx: cos(rad) * d,\r\n    dy: sin(rad) * d,\r\n  };\r\n}\r\n\r\n/**\r\n * 绘制起始箭头\r\n * @param {IShape} shape 图形\r\n * @param {ShapeAttrs} attrs shape 的绘图属性\r\n * @param {number} x1 起始点 x\r\n * @param {number} y1 起始点 y\r\n * @param {number} x2 箭头作用点 x\r\n * @param {number} y2 箭头作用点 y\r\n */\r\nexport function addStartArrow(shape, attrs, x1, y1, x2, y2) {\r\n  if (typeof attrs.startArrow === 'object') {\r\n    _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, true);\r\n  } else if (attrs.startArrow) {\r\n    _addDefaultArrow(shape, attrs, x1, y1, x2, y2, true);\r\n  } else {\r\n    shape.set('startArrowShape', null);\r\n  }\r\n}\r\n\r\n/**\r\n * 绘制结束箭头\r\n * @param {IShape} shape 图形\r\n * @param {ShapeAttrs} attrs shape 的绘图属性\r\n * @param {number} x1 起始点 x\r\n * @param {number} y1 起始点 y\r\n * @param {number} x2 箭头作用点 x\r\n * @param {number} y2 箭头作用点 y\r\n */\r\nexport function addEndArrow(shape, attrs, x1, y1, x2, y2) {\r\n  if (typeof attrs.endArrow === 'object') {\r\n    _addCustomizedArrow(shape, attrs, x1, y1, x2, y2, false);\r\n  } else if (attrs.endArrow) {\r\n    _addDefaultArrow(shape, attrs, x1, y1, x2, y2, false);\r\n  } else {\r\n    shape.set('startArrowShape', null);\r\n  }\r\n}\r\n", "import { AbstractGroup } from '@antv/g-base';\r\nimport { ChangeType } from '@antv/g-base';\r\nimport { IElement } from './interfaces';\r\nimport { Region } from './types';\r\nimport ShapeBase from './shape/base';\r\nimport * as Shape from './shape';\r\nimport { applyAttrsToContext, drawChildren, refreshElement } from './util/draw';\r\nimport { each, max, min } from '@antv/util';\r\nimport { intersectRect } from './util/util';\r\n\r\nclass Group extends AbstractGroup {\r\n  /**\r\n   * 一些方法调用会引起画布变化\r\n   * @param {ChangeType} changeType 改变的类型\r\n   */\r\n  onCanvasChange(changeType: ChangeType) {\r\n    refreshElement(this, changeType);\r\n  }\r\n\r\n  getShapeBase() {\r\n    return Shape;\r\n  }\r\n\r\n  getGroupBase() {\r\n    return Group;\r\n  }\r\n\r\n  // 同 shape 中的方法重复了\r\n  _applyClip(context, clip: ShapeBase) {\r\n    if (clip) {\r\n      context.save();\r\n      // 将 clip 的属性挂载到 context 上\r\n      applyAttrsToContext(context, clip);\r\n      // 绘制 clip 路径\r\n      clip.createPath(context);\r\n      context.restore();\r\n      // 裁剪\r\n      context.clip();\r\n      clip._afterDraw();\r\n    }\r\n  }\r\n\r\n  // 这个方法以前直接使用的 getCanvasBBox，由于 group 上没有缓存，所以每次重新计算，导致性能开销比较大\r\n  // 大概能够节省全局渲染 15-20% 的性能，如果不在这里加缓存优化后 10W 个节点无法达到 5-6 ms，大概能够 30-40ms\r\n  private cacheCanvasBBox() {\r\n    const children = this.cfg.children;\r\n    const xArr = [];\r\n    const yArr = [];\r\n    each(children, (child) => {\r\n      const bbox = child.cfg.cacheCanvasBBox;\r\n      // isInview 的判定是一旦图形或者分组渲染就要计算是否在视图内，\r\n      // 这个判定 10W 个图形下差不多能够节省 5-6 ms 的开销\r\n      if (bbox && child.cfg.isInView) {\r\n        xArr.push(bbox.minX, bbox.maxX);\r\n        yArr.push(bbox.minY, bbox.maxY);\r\n      }\r\n    });\r\n    let bbox = null;\r\n    if (xArr.length) {\r\n      const minX = min(xArr);\r\n      const maxX = max(xArr);\r\n      const minY = min(yArr);\r\n      const maxY = max(yArr);\r\n      bbox = {\r\n        minX,\r\n        minY,\r\n        x: minX,\r\n        y: minY,\r\n        maxX,\r\n        maxY,\r\n        width: maxX - minX,\r\n        height: maxY - minY,\r\n      };\r\n      const canvas = this.cfg.canvas;\r\n      if (canvas) {\r\n        const viewRange = canvas.getViewRange();\r\n        // 如果这个地方判定 isInView == false 设置 bbox 为 false 的话，拾取的性能会更高\r\n        // 但是目前 10W 图形的拾取在 2-5ms 内，这个优化意义不大，可以后期观察再看\r\n        this.set('isInView', intersectRect(bbox, viewRange));\r\n      }\r\n    } else {\r\n      this.set('isInView', false);\r\n    }\r\n\r\n    this.set('cacheCanvasBBox', bbox);\r\n  }\r\n\r\n  draw(context: CanvasRenderingContext2D, region?: Region) {\r\n    const children = this.cfg.children as IElement[];\r\n    const allowDraw = region ? this.cfg.refresh : true; // 局部刷新需要判定\r\n    // 这个地方需要判定，在 G6 的场景每个 group 都有 transform 的场景下性能会开销非常大\r\n    // 通过 refresh 的判定，可以不刷新没有发生过变化的分组，不在视窗内的分组等等\r\n    // 如果想进一步提升局部渲染性能，可以进一步优化 refresh 的判定，依然有潜力\r\n    if (children.length && allowDraw) {\r\n      context.save();\r\n      // group 上的矩阵和属性也会应用到上下文上\r\n      // 先将 attrs 应用到上下文中，再设置 clip。因为 clip 应该被当前元素的 matrix 所影响\r\n      applyAttrsToContext(context, this);\r\n      this._applyClip(context, this.getClip() as ShapeBase);\r\n      drawChildren(context, children, region);\r\n      context.restore();\r\n      this.cacheCanvasBBox();\r\n    }\r\n    // 这里的成本比较大，如果不绘制则不再\r\n    // this.set('cacheCanvasBBox', this.getCanvasBBox());\r\n    this.cfg.refresh = null;\r\n    // 绘制后，消除更新标记\r\n    this.set('hasChanged', false);\r\n  }\r\n  // 绘制时被跳过，一般发生在分组隐藏时\r\n  skipDraw() {\r\n    this.set('cacheCanvasBBox', null);\r\n    this.set('hasChanged', false);\r\n  }\r\n}\r\n\r\nexport default Group;\r\n", "import { AbstractShape } from '@antv/g-base';\r\nimport { ChangeType, BBox } from '@antv/g-base';\r\nimport { isNil, intersectRect } from '../util/util';\r\nimport { applyAttrsToContext, refreshElement } from '../util/draw';\r\nimport { getBBoxMethod } from '@antv/g-base';\r\nimport { Region } from '../types';\r\nimport * as Shape from './index';\r\nimport Group from '../group';\r\n\r\nclass ShapeBase extends AbstractShape {\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    // 设置默认值\r\n    return {\r\n      ...attrs,\r\n      lineWidth: 1,\r\n      lineAppendWidth: 0,\r\n      strokeOpacity: 1,\r\n      fillOpacity: 1,\r\n    };\r\n  }\r\n\r\n  getShapeBase() {\r\n    return Shape;\r\n  }\r\n\r\n  getGroupBase() {\r\n    return Group;\r\n  }\r\n\r\n  /**\r\n   * 一些方法调用会引起画布变化\r\n   * @param {ChangeType} changeType 改变的类型\r\n   */\r\n  onCanvasChange(changeType: ChangeType) {\r\n    refreshElement(this, changeType);\r\n  }\r\n\r\n  calculateBBox(): BBox {\r\n    const type = this.get('type');\r\n    const lineWidth = this.getHitLineWidth();\r\n    // const attrs = this.attr();\r\n    const bboxMethod = getBBoxMethod(type);\r\n    const box = bboxMethod(this);\r\n    const halfLineWidth = lineWidth / 2;\r\n    const minX = box.x - halfLineWidth;\r\n    const minY = box.y - halfLineWidth;\r\n    const maxX = box.x + box.width + halfLineWidth;\r\n    const maxY = box.y + box.height + halfLineWidth;\r\n    return {\r\n      x: minX,\r\n      minX,\r\n      y: minY,\r\n      minY,\r\n      width: box.width + lineWidth,\r\n      height: box.height + lineWidth,\r\n      maxX,\r\n      maxY,\r\n    };\r\n  }\r\n\r\n  isFill() {\r\n    return !!this.attrs['fill'] || this.isClipShape();\r\n  }\r\n\r\n  isStroke() {\r\n    return !!this.attrs['stroke'];\r\n  }\r\n\r\n  // 同 shape 中的方法重复了\r\n  _applyClip(context, clip: ShapeBase) {\r\n    if (clip) {\r\n      context.save();\r\n      // 将 clip 的属性挂载到 context 上\r\n      applyAttrsToContext(context, clip);\r\n      // 绘制 clip 路径\r\n      clip.createPath(context);\r\n      context.restore();\r\n      // 裁剪\r\n      context.clip();\r\n      clip._afterDraw();\r\n    }\r\n  }\r\n\r\n  // 绘制图形时需要考虑 region 限制\r\n  draw(context: CanvasRenderingContext2D, region?: Region) {\r\n    const clip = this.cfg.clipShape;\r\n    // 如果指定了 region，同时不允许刷新时，直接返回\r\n    if (region) {\r\n      if (this.cfg.refresh === false) {\r\n        // this._afterDraw();\r\n        this.set('hasChanged', false);\r\n        return;\r\n      }\r\n      // 是否相交需要考虑 clip 的包围盒\r\n      const bbox = this.getCanvasBBox();\r\n      if (!intersectRect(region, bbox)) {\r\n        // 图形的包围盒与重绘区域不相交时，也需要清除标记\r\n        this.set('hasChanged', false);\r\n        // 存在多种情形需要更新 cacheCanvasBBox 和 isInview 的判定\r\n        // 1. 之前图形在视窗内，但是现在不再视窗内\r\n        // 2. 如果当前的图形以及父元素都没有发生过变化，refresh = false 不会走到这里，所以这里的图形都是父元素发生变化，但是没有在视图内的元素\r\n        if (this.cfg.isInView) {\r\n          this._afterDraw();\r\n        }\r\n        return;\r\n      }\r\n    }\r\n    context.save();\r\n    // 先将 attrs 应用到上下文中，再设置 clip。因为 clip 应该被当前元素的 matrix 所影响\r\n    applyAttrsToContext(context, this);\r\n    this._applyClip(context, clip as ShapeBase);\r\n    this.drawPath(context);\r\n    context.restore();\r\n    this._afterDraw();\r\n  }\r\n\r\n  private getCanvasViewBox() {\r\n    const canvas = this.cfg.canvas;\r\n    if (canvas) {\r\n      // @ts-ignore\r\n      return canvas.getViewRange();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  cacheCanvasBBox() {\r\n    const canvasBBox = this.getCanvasViewBox();\r\n    // 绘制的时候缓存包围盒\r\n    if (canvasBBox) {\r\n      const bbox = this.getCanvasBBox();\r\n      const isInView = intersectRect(bbox, canvasBBox);\r\n      this.set('isInView', isInView);\r\n      // 不再视窗内 cacheCanvasBBox 设置成 null，会提升局部渲染的性能，\r\n      // 因为在局部渲染影响的包围盒计算时不考虑这个图形的包围盒\r\n      // 父元素 cacheCanvasBBox 计算的时候也不计算\r\n      if (isInView) {\r\n        this.set('cacheCanvasBBox', bbox);\r\n      } else {\r\n        this.set('cacheCanvasBBox', null);\r\n      }\r\n    }\r\n  }\r\n\r\n  _afterDraw() {\r\n    this.cacheCanvasBBox();\r\n    // 绘制后消除标记\r\n    this.set('hasChanged', false);\r\n    this.set('refresh', null);\r\n  }\r\n\r\n  skipDraw() {\r\n    this.set('cacheCanvasBBox', null);\r\n    this.set('isInView', null);\r\n    this.set('hasChanged', false);\r\n  }\r\n\r\n  /**\r\n   * 绘制图形的路径\r\n   * @param {CanvasRenderingContext2D} context 上下文\r\n   */\r\n  drawPath(context: CanvasRenderingContext2D) {\r\n    this.createPath(context);\r\n    this.strokeAndFill(context);\r\n    this.afterDrawPath(context);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 填充图形\r\n   * @param {CanvasRenderingContext2D} context context 上下文\r\n   */\r\n  fill(context: CanvasRenderingContext2D) {\r\n    context.fill();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 绘制图形边框\r\n   * @param {CanvasRenderingContext2D} context context 上下文\r\n   */\r\n  stroke(context: CanvasRenderingContext2D) {\r\n    context.stroke();\r\n  }\r\n\r\n  // 绘制或者填充\r\n  strokeAndFill(context) {\r\n    const { lineWidth, opacity, strokeOpacity, fillOpacity } = this.attrs;\r\n\r\n    if (this.isFill()) {\r\n      if (!isNil(fillOpacity) && fillOpacity !== 1) {\r\n        context.globalAlpha = fillOpacity;\r\n        this.fill(context);\r\n        context.globalAlpha = opacity;\r\n      } else {\r\n        this.fill(context);\r\n      }\r\n    }\r\n\r\n    if (this.isStroke()) {\r\n      if (lineWidth > 0) {\r\n        if (!isNil(strokeOpacity) && strokeOpacity !== 1) {\r\n          context.globalAlpha = strokeOpacity;\r\n        }\r\n        this.stroke(context);\r\n      }\r\n    }\r\n    this.afterDrawPath(context);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 绘制图形的路径\r\n   * @param {CanvasRenderingContext2D} context 上下文\r\n   */\r\n  createPath(context: CanvasRenderingContext2D) {}\r\n\r\n  /**\r\n   * 绘制完成 path 后的操作\r\n   * @param {CanvasRenderingContext2D} context 上下文\r\n   */\r\n  afterDrawPath(context: CanvasRenderingContext2D) {}\r\n\r\n  isInShape(refX: number, refY: number): boolean {\r\n    // return HitUtil.isHitShape(this, refX, refY);\r\n    const isStroke = this.isStroke();\r\n    const isFill = this.isFill();\r\n    const lineWidth = this.getHitLineWidth();\r\n    return this.isInStrokeOrPath(refX, refY, isStroke, isFill, lineWidth);\r\n  }\r\n\r\n  // 之所以不拆成 isInStroke 和 isInPath 在于两者存在一些共同的计算\r\n  isInStrokeOrPath(x, y, isStroke, isFill, lineWidth) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 获取线拾取的宽度\r\n   * @returns {number} 线的拾取宽度\r\n   */\r\n  getHitLineWidth() {\r\n    if (!this.isStroke()) {\r\n      return 0;\r\n    }\r\n    const attrs = this.attrs;\r\n    return attrs['lineWidth'] + attrs['lineAppendWidth'];\r\n  }\r\n}\r\n\r\nexport default ShapeBase;\r\n", "/**\r\n * @fileoverview 圆\r\n * @author dxq613@gmail.com\r\n */\r\n\r\nimport ShapeBase from './base';\r\nimport { distance } from '../util/util';\r\n\r\nclass Circle extends ShapeBase {\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x: 0,\r\n      y: 0,\r\n      r: 0,\r\n    };\r\n  }\r\n\r\n  isInStrokeOrPath(x, y, isStroke, isFill, lineWidth) {\r\n    const attrs = this.attr();\r\n    const cx = attrs.x;\r\n    const cy = attrs.y;\r\n    const r = attrs.r;\r\n    const halfLineWidth = lineWidth / 2;\r\n    const absDistance = distance(cx, cy, x, y);\r\n    // 直接用距离，如果同时存在边和填充时，可以减少两次计算\r\n    if (isFill && isStroke) {\r\n      return absDistance <= r + halfLineWidth;\r\n    }\r\n    if (isFill) {\r\n      return absDistance <= r;\r\n    }\r\n    if (isStroke) {\r\n      return absDistance >= r - halfLineWidth && absDistance <= r + halfLineWidth;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  createPath(context) {\r\n    const attrs = this.attr();\r\n    const cx = attrs.x;\r\n    const cy = attrs.y;\r\n    const r = attrs.r;\r\n    context.beginPath();\r\n    context.arc(cx, cy, r, 0, Math.PI * 2, false);\r\n    context.closePath();\r\n  }\r\n}\r\n\r\nexport default Circle;\r\n", "/**\r\n * @fileoverview 椭圆\r\n * @author dxq613@gmail.com\r\n */\r\n\r\nimport ShapeBase from './base';\r\n\r\n// 根据椭圆公式计算 x*x/rx*rx + y*y/ry*ry;\r\nfunction ellipseDistance(squareX, squareY, rx, ry) {\r\n  return squareX / (rx * rx) + squareY / (ry * ry);\r\n}\r\n\r\nclass Ellipse extends ShapeBase {\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x: 0,\r\n      y: 0,\r\n      rx: 0,\r\n      ry: 0,\r\n    };\r\n  }\r\n\r\n  isInStrokeOrPath(x, y, isStroke, isFill, lineWidth) {\r\n    const attrs = this.attr();\r\n    const halfLineWith = lineWidth / 2;\r\n    const cx = attrs.x;\r\n    const cy = attrs.y;\r\n    const { rx, ry } = attrs;\r\n    const squareX = (x - cx) * (x - cx);\r\n    const squareY = (y - cy) * (y - cy);\r\n    // 使用椭圆的公式： x*x/rx*rx + y*y/ry*ry = 1;\r\n    if (isFill && isStroke) {\r\n      return ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1;\r\n    }\r\n    if (isFill) {\r\n      return ellipseDistance(squareX, squareY, rx, ry) <= 1;\r\n    }\r\n    if (isStroke) {\r\n      return (\r\n        ellipseDistance(squareX, squareY, rx - halfLineWith, ry - halfLineWith) >= 1 &&\r\n        ellipseDistance(squareX, squareY, rx + halfLineWith, ry + halfLineWith) <= 1\r\n      );\r\n    }\r\n    return false;\r\n  }\r\n\r\n  createPath(context) {\r\n    const attrs = this.attr();\r\n    const cx = attrs.x;\r\n    const cy = attrs.y;\r\n    const rx = attrs.rx;\r\n    const ry = attrs.ry;\r\n    context.beginPath();\r\n    // 兼容逻辑\r\n    if (context.ellipse) {\r\n      context.ellipse(cx, cy, rx, ry, 0, 0, Math.PI * 2, false);\r\n    } else {\r\n      // 如果不支持，则使用圆来绘制，进行变形\r\n      const r = rx > ry ? rx : ry;\r\n      const scaleX = rx > ry ? 1 : rx / ry;\r\n      const scaleY = rx > ry ? ry / rx : 1;\r\n      context.save();\r\n      context.translate(cx, cy);\r\n      context.scale(scaleX, scaleY);\r\n      context.arc(0, 0, r, 0, Math.PI * 2);\r\n      context.restore();\r\n      context.closePath();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Ellipse;\r\n", "/**\r\n * @fileoverview 图片\r\n * @author dxq613@gmail.com\r\n */\r\n\r\nimport ShapeBase from './base';\r\nimport { isString, isNil } from '../util/util';\r\nfunction isCanvas(dom) {\r\n  return dom instanceof HTMLElement && isString(dom.nodeName) && dom.nodeName.toUpperCase() === 'CANVAS';\r\n}\r\n\r\nclass ImageShape extends ShapeBase {\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x: 0,\r\n      y: 0,\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n  }\r\n\r\n  initAttrs(attrs) {\r\n    this._setImage(attrs.img);\r\n  }\r\n\r\n  // image 不计算 stroke\r\n  isStroke() {\r\n    return false;\r\n  }\r\n\r\n  // 仅仅使用包围盒检测来进行拾取\r\n  // 所以不需要复写 isInStrokeOrPath 的方法\r\n  isOnlyHitBox() {\r\n    return true;\r\n  }\r\n\r\n  _afterLoading() {\r\n    if (this.get('toDraw') === true) {\r\n      const canvas = this.get('canvas');\r\n      if (canvas) {\r\n        // 这段应该改成局部渲染\r\n        canvas.draw();\r\n      } else {\r\n        // 这种方式如果发生遮挡会出现问题\r\n        this.createPath(this.get('context'));\r\n      }\r\n    }\r\n  }\r\n\r\n  _setImage(img) {\r\n    const attrs = this.attrs;\r\n    if (isString(img)) {\r\n      const image = new Image();\r\n      image.onload = () => {\r\n        // 图片未加载完，则已经被销毁\r\n        if (this.destroyed) {\r\n          return false;\r\n        }\r\n        // 缓存原始地址，可以做对比，防止重复加载图片\r\n        // 如果考虑到在加载过程中可能替换 img 属性，则情况更加复杂\r\n        // this.set('imgSrc', img);\r\n        // 这里会循环调用 _setImage 方法，但不会再走这个分支\r\n        this.attr('img', image);\r\n        this.set('loading', false);\r\n        this._afterLoading();\r\n        const callback = this.get('callback');\r\n        if (callback) {\r\n          callback.call(this);\r\n        }\r\n      };\r\n      // 设置跨域\r\n      image.crossOrigin = 'Anonymous';\r\n\r\n      image.src = img;\r\n      // loading 过程中不绘制\r\n      this.set('loading', true);\r\n    } else if (img instanceof Image) {\r\n      // 如果是一个 image 对象，则设置宽高\r\n      if (!attrs.width) {\r\n        attrs.width = img.width;\r\n      }\r\n      if (!attrs.height) {\r\n        attrs.height = img.height;\r\n      }\r\n    } else if (isCanvas(img)) {\r\n      // 如果设置了 canvas 对象\r\n      if (!attrs.width) {\r\n        attrs.width = Number(img.getAttribute('width'));\r\n      }\r\n\r\n      if (!attrs.height) {\r\n        attrs.height, Number(img.getAttribute('height'));\r\n      }\r\n    }\r\n  }\r\n\r\n  onAttrChange(name: string, value: any, originValue: any) {\r\n    super.onAttrChange(name, value, originValue);\r\n    // 如果加载的已经是当前图片，则不再处理\r\n    if (name === 'img') {\r\n      // 可以加缓冲，&& this.get('imgSrc') !== value\r\n      this._setImage(value);\r\n    }\r\n  }\r\n\r\n  createPath(context: CanvasRenderingContext2D) {\r\n    // 正在加载则不绘制\r\n    if (this.get('loading')) {\r\n      this.set('toDraw', true); // 加载完成后绘制\r\n      this.set('context', context);\r\n      return;\r\n    }\r\n    const attrs = this.attr();\r\n    const { x, y, width, height, sx, sy, swidth, sheight } = attrs;\r\n\r\n    const img = attrs.img;\r\n    if (img instanceof Image || isCanvas(img)) {\r\n      if (!isNil(sx) && !isNil(sy) && !isNil(swidth) && !isNil(sheight)) {\r\n        context.drawImage(img, sx, sy, swidth, sheight, x, y, width, height);\r\n      } else {\r\n        context.drawImage(img, x, y, width, height);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageShape;\r\n", "import { Line as LineUtil } from '@antv/g-math';\r\n\r\nexport default function inLine(x1, y1, x2, y2, lineWidth, x, y) {\r\n  const minX = Math.min(x1, x2);\r\n  const maxX = Math.max(x1, x2);\r\n  const minY = Math.min(y1, y2);\r\n  const maxY = Math.max(y1, y2);\r\n  const halfWidth = lineWidth / 2;\r\n  // 因为目前的方案是计算点到直线的距离，而有可能会在延长线上，所以要先判断是否在包围盒内\r\n  // 这种方案会在水平或者竖直的情况下载线的延长线上有半 lineWidth 的误差\r\n  if (!(x >= minX - halfWidth && x <= maxX + halfWidth && y >= minY - halfWidth && y <= maxY + halfWidth)) {\r\n    return false;\r\n  }\r\n  // 因为已经计算了包围盒，所以仅需要计算到直线的距离即可，可以显著提升性能\r\n  return LineUtil.pointToLine(x1, y1, x2, y2, x, y) <= lineWidth / 2;\r\n}\r\n", "/**\r\n * @fileoverview 线\r\n * @author dxq613@gmail.com\r\n */\r\nimport { Line as LineUtil } from '@antv/g-math';\r\nimport ShapeBase from './base';\r\nimport inLine from '../util/in-stroke/line';\r\nimport * as ArrowUtil from '../util/arrow';\r\n\r\nclass Line extends ShapeBase {\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x1: 0,\r\n      y1: 0,\r\n      x2: 0,\r\n      y2: 0,\r\n      startArrow: false,\r\n      endArrow: false,\r\n    };\r\n  }\r\n\r\n  initAttrs(attrs) {\r\n    this.setArrow();\r\n  }\r\n\r\n  // 更新属性时，检测是否更改了箭头\r\n  onAttrChange(name: string, value: any, originValue: any) {\r\n    super.onAttrChange(name, value, originValue);\r\n    // 由于箭头的绘制依赖于 line 的诸多 attrs，因此这里不再对每个 attr 进行判断，attr 每次变化都会影响箭头的更新\r\n    this.setArrow();\r\n  }\r\n\r\n  setArrow() {\r\n    const attrs = this.attr();\r\n    const { x1, y1, x2, y2, startArrow, endArrow } = attrs;\r\n    if (startArrow) {\r\n      ArrowUtil.addStartArrow(this, attrs, x2, y2, x1, y1);\r\n    }\r\n    if (endArrow) {\r\n      ArrowUtil.addEndArrow(this, attrs, x1, y1, x2, y2);\r\n    }\r\n  }\r\n\r\n  isInStrokeOrPath(x, y, isStroke, isFill, lineWidth) {\r\n    if (!isStroke || !lineWidth) {\r\n      return false;\r\n    }\r\n    const { x1, y1, x2, y2 } = this.attr();\r\n    return inLine(x1, y1, x2, y2, lineWidth, x, y);\r\n  }\r\n\r\n  createPath(context) {\r\n    const attrs = this.attr();\r\n    const { x1, y1, x2, y2, startArrow, endArrow } = attrs;\r\n    let startArrowDistance = {\r\n      dx: 0,\r\n      dy: 0,\r\n    };\r\n    let endArrowDistance = {\r\n      dx: 0,\r\n      dy: 0,\r\n    };\r\n\r\n    if (startArrow && startArrow.d) {\r\n      startArrowDistance = ArrowUtil.getShortenOffset(x1, y1, x2, y2, attrs.startArrow.d);\r\n    }\r\n    if (endArrow && endArrow.d) {\r\n      endArrowDistance = ArrowUtil.getShortenOffset(x1, y1, x2, y2, attrs.endArrow.d);\r\n    }\r\n\r\n    context.beginPath();\r\n    // 如果自定义箭头，线条相应缩进\r\n    context.moveTo(x1 + startArrowDistance.dx, y1 + startArrowDistance.dy);\r\n    context.lineTo(x2 - endArrowDistance.dx, y2 - endArrowDistance.dy);\r\n  }\r\n\r\n  afterDrawPath(context) {\r\n    const startArrowShape = this.get('startArrowShape');\r\n    const endArrowShape = this.get('endArrowShape');\r\n    if (startArrowShape) {\r\n      startArrowShape.draw(context);\r\n    }\r\n    if (endArrowShape) {\r\n      endArrowShape.draw(context);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get length of line\r\n   * @return {number} length\r\n   */\r\n  getTotalLength() {\r\n    const { x1, y1, x2, y2 } = this.attr();\r\n    return LineUtil.length(x1, y1, x2, y2);\r\n  }\r\n\r\n  /**\r\n   * Get point according to ratio\r\n   * @param {number} ratio\r\n   * @return {Point} point\r\n   */\r\n  getPoint(ratio: number) {\r\n    const { x1, y1, x2, y2 } = this.attr();\r\n    return LineUtil.pointAt(x1, y1, x2, y2, ratio);\r\n  }\r\n}\r\n\r\nexport default Line;\r\n", "/**\r\n * @fileoverview Marker\r\n * @author dxq613@gmail.com\r\n */\r\n\r\nimport { isNil } from '@antv/util';\r\nimport { path2Absolute } from '@antv/path-util';\r\nimport ShapeBase from './base';\r\nimport { isFunction } from '../util/util';\r\nimport { drawPath } from '../util/draw';\r\n\r\nconst Symbols = {\r\n  // 圆\r\n  circle(x, y, r) {\r\n    return [\r\n      ['M', x - r, y],\r\n      ['A', r, r, 0, 1, 0, x + r, y],\r\n      ['A', r, r, 0, 1, 0, x - r, y],\r\n    ];\r\n  },\r\n  // 正方形\r\n  square(x, y, r) {\r\n    return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];\r\n  },\r\n  // 菱形\r\n  diamond(x, y, r) {\r\n    return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];\r\n  },\r\n  // 三角形\r\n  triangle(x, y, r) {\r\n    const diffY = r * Math.sin((1 / 3) * Math.PI);\r\n    return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['Z']];\r\n  },\r\n  // 倒三角形\r\n  'triangle-down'(x, y, r) {\r\n    const diffY = r * Math.sin((1 / 3) * Math.PI);\r\n    return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];\r\n  },\r\n};\r\n\r\nclass Marker extends ShapeBase {\r\n  initAttrs(attrs) {\r\n    this._resetParamsCache();\r\n  }\r\n\r\n  // 重置绘制 path 存储的缓存\r\n  _resetParamsCache() {\r\n    // 为了加速 path 的绘制、拾取和计算，这个地方可以缓存很多东西\r\n    // 这些缓存都是第一次需要时计算和存储，虽然增加了复杂度，但是频繁调用的方法，性能有很大提升\r\n    this.set('paramsCache', {}); // 清理缓存\r\n  }\r\n\r\n  // 更新属性时，检测是否更改了 path\r\n  onAttrChange(name: string, value: any, originValue: any) {\r\n    super.onAttrChange(name, value, originValue);\r\n    if (['symbol', 'x', 'y', 'r', 'radius'].indexOf(name) !== -1) {\r\n      // path 相关属性更改时，清理缓存\r\n      this._resetParamsCache();\r\n    }\r\n  }\r\n\r\n  // 仅仅使用包围盒检测来进行拾取\r\n  // 所以不需要复写 isInStrokeOrPath 的方法\r\n  isOnlyHitBox() {\r\n    return true;\r\n  }\r\n\r\n  _getR(attrs) {\r\n    // 兼容 r 和 radius 两种写法，推荐使用 r\r\n    return isNil(attrs.r) ? attrs.radius : attrs.r;\r\n  }\r\n\r\n  _getPath() {\r\n    const attrs = this.attr();\r\n    const { x, y } = attrs;\r\n    const symbol = attrs.symbol || 'circle';\r\n    const r = this._getR(attrs);\r\n    let method;\r\n    let path;\r\n    if (isFunction(symbol)) {\r\n      method = symbol;\r\n      path = method(x, y, r);\r\n      // 将 path 转成绝对路径\r\n      path = path2Absolute(path);\r\n    } else {\r\n      // 内置 symbol 的 path 都是绝对路径，直接绘制即可，不需要对 path 进行特殊处理\r\n      method = Marker.Symbols[symbol];\r\n\r\n      if (!method) {\r\n        console.warn(`${symbol} marker is not supported.`);\r\n        return null;\r\n      }\r\n\r\n      path = method(x, y, r);\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  createPath(context) {\r\n    const path = this._getPath();\r\n    const paramsCache = this.get('paramsCache');\r\n    drawPath(this, context, { path }, paramsCache);\r\n  }\r\n\r\n  static Symbols = Symbols;\r\n}\r\n\r\nexport default Marker;\r\n", "/**\r\n * @fileoverview path\r\n * @author dxq613@gmail.com\r\n */\r\nimport { Point } from '@antv/g-base';\r\nimport { Cubic as CubicUtil } from '@antv/g-math';\r\nimport { each, isNil } from '@antv/util';\r\nimport ShapeBase from './base';\r\nimport { path2Absolute, path2Segments } from '@antv/path-util';\r\nimport { drawPath } from '../util/draw';\r\nimport isPointInPath from '../util/in-path/point-in-path';\r\nimport isInPolygon from '../util/in-path/polygon';\r\nimport PathUtil from '../util/path';\r\nimport * as ArrowUtil from '../util/arrow';\r\n\r\n// 是否在多个多边形内部\r\nfunction isInPolygons(polygons, x, y) {\r\n  let isHit = false;\r\n  for (let i = 0; i < polygons.length; i++) {\r\n    const points = polygons[i];\r\n    isHit = isInPolygon(points, x, y);\r\n    if (isHit) {\r\n      break;\r\n    }\r\n  }\r\n  return isHit;\r\n}\r\n\r\nclass Path extends ShapeBase {\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      startArrow: false,\r\n      endArrow: false,\r\n    };\r\n  }\r\n\r\n  initAttrs(attrs) {\r\n    this._setPathArr(attrs.path);\r\n    this.setArrow();\r\n  }\r\n\r\n  // 更新属性时，检测是否更改了 path\r\n  onAttrChange(name: string, value: any, originValue: any) {\r\n    super.onAttrChange(name, value, originValue);\r\n    if (name === 'path') {\r\n      this._setPathArr(value);\r\n    }\r\n    // 由于箭头的绘制依赖于 line 的诸多 attrs，因此这里不再对每个 attr 进行判断，attr 每次变化都会影响箭头的更新\r\n    this.setArrow();\r\n  }\r\n\r\n  // 将 path 转换成绝对路径\r\n  _setPathArr(path) {\r\n    // 转换 path 的格式\r\n    this.attrs.path = path2Absolute(path);\r\n    const hasArc = PathUtil.hasArc(path);\r\n    // 为了加速 path 的绘制、拾取和计算，这个地方可以缓存很多东西\r\n    // 这些缓存都是第一次需要时计算和存储，虽然增加了复杂度，但是频繁调用的方法，性能有很大提升\r\n    this.set('hasArc', hasArc);\r\n    this.set('paramsCache', {}); // 清理缓存\r\n    this.set('segments', null); // 延迟生成 path，在动画场景下可能不会有拾取\r\n    this.set('curve', null);\r\n    this.set('tCache', null);\r\n    this.set('totalLength', null);\r\n  }\r\n\r\n  getSegments() {\r\n    let segments = this.get('segements');\r\n    if (!segments) {\r\n      segments = path2Segments(this.attr('path'));\r\n      this.set('segments', segments);\r\n    }\r\n    return segments;\r\n  }\r\n\r\n  setArrow() {\r\n    const attrs = this.attr();\r\n    const { startArrow, endArrow } = attrs;\r\n\r\n    if (startArrow) {\r\n      const tangent = this.getStartTangent();\r\n      ArrowUtil.addStartArrow(this, attrs, tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1]);\r\n    }\r\n    if (endArrow) {\r\n      const tangent = this.getEndTangent();\r\n      ArrowUtil.addEndArrow(this, attrs, tangent[0][0], tangent[0][1], tangent[1][0], tangent[1][1]);\r\n    }\r\n  }\r\n\r\n  isInStrokeOrPath(x, y, isStroke, isFill, lineWidth) {\r\n    const segments = this.getSegments();\r\n    const hasArc = this.get('hasArc');\r\n    let isHit = false;\r\n    if (isStroke) {\r\n      const length = this.getTotalLength();\r\n      isHit = PathUtil.isPointInStroke(segments, lineWidth, x, y, length);\r\n    }\r\n    if (!isHit && isFill) {\r\n      if (hasArc) {\r\n        // 存在曲线时，暂时使用 canvas 的 api 计算，后续可以进行多边形切割\r\n        isHit = isPointInPath(this, x, y);\r\n      } else {\r\n        const path = this.attr('path');\r\n        const extractResutl = PathUtil.extractPolygons(path);\r\n        // 提取出来的多边形包含闭合的和非闭合的，在这里统一按照多边形处理\r\n        isHit = isInPolygons(extractResutl.polygons, x, y) || isInPolygons(extractResutl.polylines, x, y);\r\n      }\r\n    }\r\n    return isHit;\r\n  }\r\n\r\n  createPath(context) {\r\n    const attrs = this.attr();\r\n    const paramsCache = this.get('paramsCache'); // 由于计算圆弧的参数成本很大，所以要缓存\r\n    drawPath(this, context, attrs, paramsCache);\r\n  }\r\n\r\n  afterDrawPath(context: CanvasRenderingContext2D) {\r\n    const startArrowShape = this.get('startArrowShape');\r\n    const endArrowShape = this.get('endArrowShape');\r\n    if (startArrowShape) {\r\n      startArrowShape.draw(context);\r\n    }\r\n    if (endArrowShape) {\r\n      endArrowShape.draw(context);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get total length of path\r\n   * @return {number} length\r\n   */\r\n  getTotalLength() {\r\n    const totalLength = this.get('totalLength');\r\n    if (!isNil(totalLength)) {\r\n      return totalLength;\r\n    }\r\n    this._calculateCurve();\r\n    this._setTcache();\r\n    return this.get('totalLength');\r\n  }\r\n\r\n  /**\r\n   * Get point according to ratio\r\n   * @param {number} ratio\r\n   * @return {Point} point\r\n   */\r\n  getPoint(ratio: number): Point {\r\n    let tCache = this.get('tCache');\r\n    if (!tCache) {\r\n      this._calculateCurve();\r\n      this._setTcache();\r\n      tCache = this.get('tCache');\r\n    }\r\n\r\n    let subt;\r\n    let index;\r\n\r\n    const curve = this.get('curve');\r\n    if (!tCache || tCache.length === 0) {\r\n      if (curve) {\r\n        return {\r\n          x: curve[0][1],\r\n          y: curve[0][2],\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n    each(tCache, (v, i) => {\r\n      if (ratio >= v[0] && ratio <= v[1]) {\r\n        subt = (ratio - v[0]) / (v[1] - v[0]);\r\n        index = i;\r\n      }\r\n    });\r\n\r\n    const seg = curve[index];\r\n    if (isNil(seg) || isNil(index)) {\r\n      return null;\r\n    }\r\n    const l = seg.length;\r\n    const nextSeg = curve[index + 1];\r\n    return CubicUtil.pointAt(\r\n      seg[l - 2],\r\n      seg[l - 1],\r\n      nextSeg[1],\r\n      nextSeg[2],\r\n      nextSeg[3],\r\n      nextSeg[4],\r\n      nextSeg[5],\r\n      nextSeg[6],\r\n      subt\r\n    );\r\n  }\r\n\r\n  _calculateCurve() {\r\n    const { path } = this.attr();\r\n    this.set('curve', PathUtil.pathToCurve(path));\r\n  }\r\n\r\n  _setTcache() {\r\n    let totalLength = 0;\r\n    let tempLength = 0;\r\n    // 每段 curve 对应起止点的长度比例列表，形如: [[0, 0.25], [0.25, 0.6]. [0.6, 0.9], [0.9, 1]]\r\n    const tCache = [];\r\n    let segmentT;\r\n    let segmentL;\r\n    let segmentN;\r\n    let l;\r\n    const curve = this.get('curve');\r\n\r\n    if (!curve) {\r\n      return;\r\n    }\r\n\r\n    each(curve, (segment, i) => {\r\n      segmentN = curve[i + 1];\r\n      l = segment.length;\r\n      if (segmentN) {\r\n        totalLength +=\r\n          CubicUtil.length(\r\n            segment[l - 2],\r\n            segment[l - 1],\r\n            segmentN[1],\r\n            segmentN[2],\r\n            segmentN[3],\r\n            segmentN[4],\r\n            segmentN[5],\r\n            segmentN[6]\r\n          ) || 0;\r\n      }\r\n    });\r\n    this.set('totalLength', totalLength);\r\n\r\n    if (totalLength === 0) {\r\n      this.set('tCache', []);\r\n      return;\r\n    }\r\n\r\n    each(curve, (segment, i) => {\r\n      segmentN = curve[i + 1];\r\n      l = segment.length;\r\n      if (segmentN) {\r\n        segmentT = [];\r\n        segmentT[0] = tempLength / totalLength;\r\n        segmentL = CubicUtil.length(\r\n          segment[l - 2],\r\n          segment[l - 1],\r\n          segmentN[1],\r\n          segmentN[2],\r\n          segmentN[3],\r\n          segmentN[4],\r\n          segmentN[5],\r\n          segmentN[6]\r\n        );\r\n        // 当 path 不连续时，segmentL 可能为空，为空时需要作为 0 处理\r\n        tempLength += segmentL || 0;\r\n        segmentT[1] = tempLength / totalLength;\r\n        tCache.push(segmentT);\r\n      }\r\n    });\r\n    this.set('tCache', tCache);\r\n  }\r\n\r\n  /**\r\n   * Get start tangent vector\r\n   * @return {Array}\r\n   */\r\n  getStartTangent(): number[][] {\r\n    const segments = this.getSegments();\r\n    let result;\r\n    if (segments.length > 1) {\r\n      const startPoint = segments[0].currentPoint;\r\n      const endPoint = segments[1].currentPoint;\r\n      const tangent = segments[1].startTangent;\r\n      result = [];\r\n      if (tangent) {\r\n        result.push([startPoint[0] - tangent[0], startPoint[1] - tangent[1]]);\r\n        result.push([startPoint[0], startPoint[1]]);\r\n      } else {\r\n        result.push([endPoint[0], endPoint[1]]);\r\n        result.push([startPoint[0], startPoint[1]]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get end tangent vector\r\n   * @return {Array}\r\n   */\r\n  getEndTangent(): number[][] {\r\n    const segments = this.getSegments();\r\n    const length = segments.length;\r\n    let result;\r\n    if (length > 1) {\r\n      const startPoint = segments[length - 2].currentPoint;\r\n      const endPoint = segments[length - 1].currentPoint;\r\n      const tangent = segments[length - 1].endTangent;\r\n      result = [];\r\n      if (tangent) {\r\n        result.push([endPoint[0] - tangent[0], endPoint[1] - tangent[1]]);\r\n        result.push([endPoint[0], endPoint[1]]);\r\n      } else {\r\n        result.push([startPoint[0], startPoint[1]]);\r\n        result.push([endPoint[0], endPoint[1]]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Path;\r\n", "import { getOffScreenContext } from '@antv/g-base';\r\n\r\nexport default function isPointInPath(shape, x, y) {\r\n  const ctx = getOffScreenContext();\r\n  shape.createPath(ctx);\r\n  return ctx.isPointInPath(x, y);\r\n}\r\n", "/**\r\n * @fileoverview 判断点是否在多边形内\r\n * @author dxq613@gmail.com\r\n */\r\n\r\n// 多边形的射线检测，参考：https://blog.csdn.net/WilliamSun0122/article/details/77994526\r\nconst tolerance = 1e-6;\r\n// 三态函数，判断两个double在eps精度下的大小关系\r\nfunction dcmp(x) {\r\n  if (Math.abs(x) < tolerance) {\r\n    return 0;\r\n  }\r\n\r\n  return x < 0 ? -1 : 1;\r\n}\r\n\r\n// 判断点Q是否在p1和p2的线段上\r\nfunction onSegment(p1, p2, q) {\r\n  if (\r\n    (q[0] - p1[0]) * (p2[1] - p1[1]) === (p2[0] - p1[0]) * (q[1] - p1[1]) &&\r\n    Math.min(p1[0], p2[0]) <= q[0] &&\r\n    q[0] <= Math.max(p1[0], p2[0]) &&\r\n    Math.min(p1[1], p2[1]) <= q[1] &&\r\n    q[1] <= Math.max(p1[1], p2[1])\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n// 判断点P在多边形内-射线法\r\nexport default function isInPolygon(points, x, y) {\r\n  let isHit = false;\r\n  const n = points.length;\r\n  if (n <= 2) {\r\n    // svg 中点小于 3 个时，不显示，也无法被拾取\r\n    return false;\r\n  }\r\n  for (let i = 0; i < n; i++) {\r\n    const p1 = points[i];\r\n    const p2 = points[(i + 1) % n];\r\n    if (onSegment(p1, p2, [x, y])) {\r\n      // 点在多边形一条边上\r\n      return true;\r\n    }\r\n    // 前一个判断min(p1[1],p2[1])<P.y<=max(p1[1],p2[1])\r\n    // 后一个判断被测点 在 射线与边交点 的左边\r\n    if (\r\n      dcmp(p1[1] - y) > 0 !== dcmp(p2[1] - y) > 0 &&\r\n      dcmp(x - ((y - p1[1]) * (p1[0] - p2[0])) / (p1[1] - p2[1]) - p1[0]) < 0\r\n    ) {\r\n      isHit = !isHit;\r\n    }\r\n  }\r\n  return isHit;\r\n}\r\n", "/**\r\n * @fileoverview path 的一些工具\r\n * @author dxq613@gmail.com\r\n */\r\nimport { PathUtil } from '@antv/g-base';\r\nimport { Quad as QuadUtil } from '@antv/g-math';\r\nimport { Cubic as CubicUtil } from '@antv/g-math';\r\nimport { ext } from '@antv/matrix-util';\r\nimport * as vec3 from 'gl-matrix/vec3';\r\nimport { inBox } from './util';\r\nimport inLine from './in-stroke/line';\r\nimport inArc from './in-stroke/arc';\r\n\r\nconst { transform } = ext;\r\n\r\nfunction hasArc(path) {\r\n  let hasArc = false;\r\n  const count = path.length;\r\n  for (let i = 0; i < count; i++) {\r\n    const params = path[i];\r\n    const cmd = params[0];\r\n    if (cmd === 'C' || cmd === 'A' || cmd === 'Q') {\r\n      hasArc = true;\r\n      break;\r\n    }\r\n  }\r\n  return hasArc;\r\n}\r\n\r\nfunction isPointInStroke(segments, lineWidth, x, y, length) {\r\n  let isHit = false;\r\n  const halfWidth = lineWidth / 2;\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const segment = segments[i];\r\n    const { currentPoint, params, prePoint, box } = segment;\r\n    // 如果在前面已经生成过包围盒，直接按照包围盒计算\r\n    if (box && !inBox(box.x - halfWidth, box.y - halfWidth, box.width + lineWidth, box.height + lineWidth, x, y)) {\r\n      continue;\r\n    }\r\n    switch (segment.command) {\r\n      // L 和 Z 都是直线， M 不进行拾取\r\n      case 'L':\r\n      case 'Z':\r\n        isHit = inLine(prePoint[0], prePoint[1], currentPoint[0], currentPoint[1], lineWidth, x, y);\r\n        break;\r\n      case 'Q':\r\n        const qDistance = QuadUtil.pointDistance(\r\n          prePoint[0],\r\n          prePoint[1],\r\n          params[1],\r\n          params[2],\r\n          params[3],\r\n          params[4],\r\n          x,\r\n          y\r\n        );\r\n        isHit = qDistance <= lineWidth / 2;\r\n        break;\r\n      case 'C':\r\n        const cDistance = CubicUtil.pointDistance(\r\n          prePoint[0], // 上一段结束位置, 即 C 的起始点\r\n          prePoint[1],\r\n          params[1], // 'C' 的参数，1、2 为第一个控制点，3、4 为第二个控制点，5、6 为结束点\r\n          params[2],\r\n          params[3],\r\n          params[4],\r\n          params[5],\r\n          params[6],\r\n          x,\r\n          y,\r\n          length\r\n        );\r\n        isHit = cDistance <= lineWidth / 2;\r\n        break;\r\n      case 'A':\r\n        // 计算点到椭圆圆弧的距离，暂时使用近似算法，后面可以改成切割法求最近距离\r\n        const arcParams = segment.arcParams;\r\n        const { cx, cy, rx, ry, startAngle, endAngle, xRotation } = arcParams;\r\n        const p = [x, y, 1];\r\n        const r = rx > ry ? rx : ry;\r\n        const scaleX = rx > ry ? 1 : rx / ry;\r\n        const scaleY = rx > ry ? ry / rx : 1;\r\n        const m = transform(null, [\r\n          ['t', -cx, -cy],\r\n          ['r', -xRotation],\r\n          ['s', 1 / scaleX, 1 / scaleY],\r\n        ]);\r\n        vec3.transformMat3(p, p, m);\r\n        isHit = inArc(0, 0, r, startAngle, endAngle, lineWidth, p[0], p[1]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (isHit) {\r\n      break;\r\n    }\r\n  }\r\n  return isHit;\r\n}\r\n\r\n/**\r\n * 提取出内部的闭合多边形和非闭合的多边形，假设 path 不存在圆弧\r\n * @param {Array} path 路径\r\n * @returns {Array} 点的集合\r\n */\r\nfunction extractPolygons(path) {\r\n  const count = path.length;\r\n  const polygons = [];\r\n  const polylines = [];\r\n  let points = []; // 防止第一个命令不是 'M'\r\n  for (let i = 0; i < count; i++) {\r\n    const params = path[i];\r\n    const cmd = params[0];\r\n    if (cmd === 'M') {\r\n      // 遇到 'M' 判定是否是新数组，新数组中没有点\r\n      if (points.length) {\r\n        // 如果存在点，则说明没有遇到 'Z'，开始了一个新的多边形\r\n        polylines.push(points);\r\n        points = []; // 创建新的点\r\n      }\r\n      points.push([params[1], params[2]]);\r\n    } else if (cmd === 'Z') {\r\n      if (points.length) {\r\n        // 存在点\r\n        polygons.push(points);\r\n        points = []; // 开始新的点集合\r\n      }\r\n      // 如果不存在点，同时 'Z'，则说明是错误，不处理\r\n    } else {\r\n      points.push([params[1], params[2]]);\r\n    }\r\n  }\r\n  // 说明 points 未放入 polygons 或者 polyline\r\n  // 仅当只有一个 M，没有 Z 时会发生这种情况\r\n  if (points.length > 0) {\r\n    polylines.push(points);\r\n  }\r\n  return {\r\n    polygons,\r\n    polylines,\r\n  };\r\n}\r\n\r\nexport default {\r\n  hasArc,\r\n  extractPolygons,\r\n  isPointInStroke,\r\n  ...PathUtil,\r\n};\r\n", "import { distance } from '../util';\r\nexport default function arc(cx, cy, r, startAngle, endAngle, lineWidth, x, y) {\r\n  const angle = (Math.atan2(y - cy, x - cx) + Math.PI * 2) % (Math.PI * 2); // 转换到 0 - 2 * Math.PI 之间\r\n  if (angle < startAngle || angle > endAngle) {\r\n    return false;\r\n  }\r\n  const point = {\r\n    x: cx + r * Math.cos(angle),\r\n    y: cy + r * Math.sin(angle),\r\n  };\r\n  return distance(point.x, point.y, x, y) <= lineWidth / 2;\r\n}\r\n", "import inLine from './line';\r\n\r\nexport default function inPolyline(points: any[], lineWidth: number, x: number, y: number, isClose: boolean) {\r\n  const count = points.length;\r\n  if (count < 2) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < count - 1; i++) {\r\n    const x1 = points[i][0];\r\n    const y1 = points[i][1];\r\n    const x2 = points[i + 1][0];\r\n    const y2 = points[i + 1][1];\r\n\r\n    if (inLine(x1, y1, x2, y2, lineWidth, x, y)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // 如果封闭，则计算起始点和结束点的边\r\n  if (isClose) {\r\n    const first = points[0];\r\n    const last = points[count - 1];\r\n    if (inLine(first[0], first[1], last[0], last[1], lineWidth, x, y)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n", "/**\r\n * @fileoverview 多边形\r\n * @author dxq613@gmail.com\r\n */\r\n\r\nimport ShapeBase from './base';\r\nimport inPolyline from '../util/in-stroke/polyline';\r\nimport isInPolygon from '../util/in-path/polygon';\r\n\r\nclass Polygon extends ShapeBase {\r\n  isInStrokeOrPath(x, y, isStroke, isFill, lineWidth) {\r\n    const { points } = this.attr();\r\n    let isHit = false;\r\n    if (isStroke) {\r\n      isHit = inPolyline(points, lineWidth, x, y, true);\r\n    }\r\n    if (!isHit && isFill) {\r\n      isHit = isInPolygon(points, x, y); // isPointInPath(shape, x, y);\r\n    }\r\n    return isHit;\r\n  }\r\n\r\n  createPath(context) {\r\n    const attrs = this.attr();\r\n    const points = attrs.points;\r\n    if (points.length < 2) {\r\n      return;\r\n    }\r\n    context.beginPath();\r\n    for (let i = 0; i < points.length; i++) {\r\n      const point = points[i];\r\n      if (i === 0) {\r\n        context.moveTo(point[0], point[1]);\r\n      } else {\r\n        context.lineTo(point[0], point[1]);\r\n      }\r\n    }\r\n    context.closePath();\r\n  }\r\n}\r\n\r\nexport default Polygon;\r\n", "/**\r\n * @fileoverview 多边形\r\n * @author dxq613@gmail.com\r\n */\r\nimport { Point } from '@antv/g-base';\r\nimport { Line as LineUtil } from '@antv/g-math';\r\nimport { Polyline as PolylineUtil } from '@antv/g-math';\r\nimport { each, isNil } from '@antv/util';\r\nimport ShapeBase from './base';\r\nimport inPolyline from '../util/in-stroke/polyline';\r\nimport * as ArrowUtil from '../util/arrow';\r\n\r\nclass PolyLine extends ShapeBase {\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      startArrow: false,\r\n      endArrow: false,\r\n    };\r\n  }\r\n\r\n  initAttrs(attrs) {\r\n    this.setArrow();\r\n  }\r\n\r\n  // 更新属性时，检测是否更改了 points\r\n  onAttrChange(name: string, value: any, originValue: any) {\r\n    super.onAttrChange(name, value, originValue);\r\n    this.setArrow();\r\n    if (['points'].indexOf(name) !== -1) {\r\n      this._resetCache();\r\n    }\r\n  }\r\n\r\n  _resetCache() {\r\n    this.set('totalLength', null);\r\n    this.set('tCache', null);\r\n  }\r\n\r\n  setArrow() {\r\n    const attrs = this.attr();\r\n    const { points, startArrow, endArrow } = this.attrs;\r\n    const length = points.length;\r\n    const x1 = points[0][0];\r\n    const y1 = points[0][1];\r\n    const x2 = points[length - 1][0];\r\n    const y2 = points[length - 1][1];\r\n\r\n    if (startArrow) {\r\n      ArrowUtil.addStartArrow(this, attrs, points[1][0], points[1][1], x1, y1);\r\n    }\r\n    if (endArrow) {\r\n      ArrowUtil.addEndArrow(this, attrs, points[length - 2][0], points[length - 2][1], x2, y2);\r\n    }\r\n  }\r\n\r\n  // 不允许 fill\r\n  isFill() {\r\n    return false;\r\n  }\r\n\r\n  isInStrokeOrPath(x, y, isStroke, isFill, lineWidth) {\r\n    // 没有设置 stroke 不能被拾取, 没有线宽不能被拾取\r\n    if (!isStroke || !lineWidth) {\r\n      return false;\r\n    }\r\n    const { points } = this.attr();\r\n    return inPolyline(points, lineWidth, x, y, false);\r\n  }\r\n\r\n  // 始终填充\r\n  isStroke() {\r\n    return true;\r\n  }\r\n\r\n  createPath(context) {\r\n    const { points, startArrow, endArrow } = this.attr();\r\n    const length = points.length;\r\n    if (points.length < 2) {\r\n      return;\r\n    }\r\n    let x1 = points[0][0];\r\n    let y1 = points[0][1];\r\n    let x2 = points[length - 1][0];\r\n    let y2 = points[length - 1][1];\r\n    // 如果定义了箭头，并且是自定义箭头，线条相应缩进\r\n    if (startArrow && startArrow.d) {\r\n      const distance = ArrowUtil.getShortenOffset(x1, y1, points[1][0], points[1][1], startArrow.d);\r\n      x1 += distance.dx;\r\n      y1 += distance.dy;\r\n    }\r\n    if (endArrow && endArrow.d) {\r\n      const distance = ArrowUtil.getShortenOffset(points[length - 2][0], points[length - 2][1], x2, y2, endArrow.d);\r\n      x2 -= distance.dx;\r\n      y2 -= distance.dy;\r\n    }\r\n\r\n    context.beginPath();\r\n    context.moveTo(x1, y1);\r\n    for (let i = 0; i < length - 1; i++) {\r\n      const point = points[i];\r\n      context.lineTo(point[0], point[1]);\r\n    }\r\n    context.lineTo(x2, y2);\r\n  }\r\n\r\n  afterDrawPath(context: CanvasRenderingContext2D) {\r\n    const startArrowShape = this.get('startArrowShape');\r\n    const endArrowShape = this.get('endArrowShape');\r\n    if (startArrowShape) {\r\n      startArrowShape.draw(context);\r\n    }\r\n    if (endArrowShape) {\r\n      endArrowShape.draw(context);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get length of polyline\r\n   * @return {number} length\r\n   */\r\n  getTotalLength() {\r\n    const { points } = this.attr();\r\n    // get totalLength from cache\r\n    const totalLength = this.get('totalLength');\r\n    if (!isNil(totalLength)) {\r\n      return totalLength;\r\n    }\r\n    this.set('totalLength', PolylineUtil.length(points));\r\n    return this.get('totalLength');\r\n  }\r\n\r\n  /**\r\n   * Get point according to ratio\r\n   * @param {number} ratio\r\n   * @return {Point} point\r\n   */\r\n  getPoint(ratio: number): Point {\r\n    const { points } = this.attr();\r\n    // get tCache from cache\r\n    let tCache = this.get('tCache');\r\n    if (!tCache) {\r\n      this._setTcache();\r\n      tCache = this.get('tCache');\r\n    }\r\n\r\n    let subt;\r\n    let index;\r\n    each(tCache, (v, i) => {\r\n      if (ratio >= v[0] && ratio <= v[1]) {\r\n        subt = (ratio - v[0]) / (v[1] - v[0]);\r\n        index = i;\r\n      }\r\n    });\r\n    return LineUtil.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt);\r\n  }\r\n\r\n  _setTcache() {\r\n    const { points } = this.attr();\r\n    if (!points || points.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const totalLength = this.getTotalLength();\r\n    if (totalLength <= 0) {\r\n      return;\r\n    }\r\n\r\n    let tempLength = 0;\r\n    const tCache = [];\r\n    let segmentT;\r\n    let segmentL;\r\n\r\n    each(points, (p, i) => {\r\n      if (points[i + 1]) {\r\n        segmentT = [];\r\n        segmentT[0] = tempLength / totalLength;\r\n        segmentL = LineUtil.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);\r\n        tempLength += segmentL;\r\n        segmentT[1] = tempLength / totalLength;\r\n        tCache.push(segmentT);\r\n      }\r\n    });\r\n    this.set('tCache', tCache);\r\n  }\r\n\r\n  /**\r\n   * Get start tangent vector\r\n   * @return {Array}\r\n   */\r\n  getStartTangent(): number[][] {\r\n    const { points } = this.attr();\r\n    const result = [];\r\n    result.push([points[1][0], points[1][1]]);\r\n    result.push([points[0][0], points[0][1]]);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get end tangent vector\r\n   * @return {Array}\r\n   */\r\n  getEndTangent(): number[][] {\r\n    const { points } = this.attr();\r\n    const l = points.length - 1;\r\n    const result = [];\r\n    result.push([points[l - 1][0], points[l - 1][1]]);\r\n    result.push([points[l][0], points[l][1]]);\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default PolyLine;\r\n", "import { inBox } from '../util';\r\n\r\nexport default function inRect(minX, minY, width, height, lineWidth, x, y) {\r\n  const halfWidth = lineWidth / 2;\r\n  // 将四个边看做矩形来检测，比边的检测算法要快\r\n  return (\r\n    inBox(minX - halfWidth, minY - halfWidth, width, lineWidth, x, y) || // 上边\r\n    inBox(minX + width - halfWidth, minY - halfWidth, lineWidth, height, x, y) || // 右边\r\n    inBox(minX + halfWidth, minY + height - halfWidth, width, lineWidth, x, y) || // 下边\r\n    inBox(minX - halfWidth, minY + halfWidth, lineWidth, height, x, y)\r\n  ); // 左边\r\n}\r\n", "import inLine from './line';\r\nimport inArc from './arc';\r\n\r\nexport default function rectWithRadius(minX, minY, width, height, radius, lineWidth, x, y) {\r\n  const halfWidth = lineWidth / 2;\r\n  return (\r\n    inLine(minX + radius, minY, minX + width - radius, minY, lineWidth, x, y) ||\r\n    inLine(minX + width, minY + radius, minX + width, minY + height - radius, lineWidth, x, y) ||\r\n    inLine(minX + width - radius, minY + height, minX + radius, minY + height, lineWidth, x, y) ||\r\n    inLine(minX, minY + height - radius, minX, minY + radius, lineWidth, x, y) ||\r\n    inArc(minX + width - radius, minY + radius, radius, 1.5 * Math.PI, 2 * Math.PI, lineWidth, x, y) ||\r\n    inArc(minX + width - radius, minY + height - radius, radius, 0, 0.5 * Math.PI, lineWidth, x, y) ||\r\n    inArc(minX + radius, minY + height - radius, radius, 0.5 * Math.PI, Math.PI, lineWidth, x, y) ||\r\n    inArc(minX + radius, minY + radius, radius, Math.PI, 1.5 * Math.PI, lineWidth, x, y)\r\n  );\r\n}\r\n", "/**\r\n * @fileoverview 矩形\r\n * @author dxq613@gmail.com\r\n */\r\n\r\nimport ShapeBase from './base';\r\nimport { parseRadius } from '../util/parse';\r\nimport { inBox } from '../util/util';\r\nimport inRect from '../util/in-stroke/rect';\r\nimport inRectWithRadius from '../util/in-stroke/rect-radius';\r\nimport isPointInPath from '../util/in-path/point-in-path';\r\n\r\nclass Rect extends ShapeBase {\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x: 0,\r\n      y: 0,\r\n      width: 0,\r\n      height: 0,\r\n      radius: 0,\r\n    };\r\n  }\r\n\r\n  isInStrokeOrPath(x, y, isStroke, isFill, lineWidth) {\r\n    const attrs = this.attr();\r\n    const minX = attrs.x;\r\n    const minY = attrs.y;\r\n    const width = attrs.width;\r\n    const height = attrs.height;\r\n    const radius = attrs.radius;\r\n    // 无圆角时的策略\r\n    if (!radius) {\r\n      const halfWidth = lineWidth / 2;\r\n      // 同时填充和带有边框\r\n      if (isFill && isStroke) {\r\n        return inBox(minX - halfWidth, minY - halfWidth, width + halfWidth, height + halfWidth, x, y);\r\n      }\r\n      // 仅填充\r\n      if (isFill) {\r\n        return inBox(minX, minY, width, height, x, y);\r\n      }\r\n      if (isStroke) {\r\n        return inRect(minX, minY, width, height, lineWidth, x, y);\r\n      }\r\n    } else {\r\n      let isHit = false;\r\n      if (isStroke) {\r\n        isHit = inRectWithRadius(minX, minY, width, height, radius, lineWidth, x, y);\r\n      }\r\n      // 仅填充时带有圆角的矩形直接通过图形拾取\r\n      // 以后可以改成纯数学的近似拾取，将圆弧切割成多边形\r\n      if (!isHit && isFill) {\r\n        isHit = isPointInPath(this, x, y);\r\n      }\r\n      return isHit;\r\n    }\r\n  }\r\n\r\n  createPath(context) {\r\n    const attrs = this.attr();\r\n    const x = attrs.x;\r\n    const y = attrs.y;\r\n    const width = attrs.width;\r\n    const height = attrs.height;\r\n    const radius = attrs.radius;\r\n\r\n    context.beginPath();\r\n    if (radius === 0) {\r\n      // 改成原生的rect方法\r\n      context.rect(x, y, width, height);\r\n    } else {\r\n      const [r1, r2, r3, r4] = parseRadius(radius);\r\n      context.moveTo(x + r1, y);\r\n      context.lineTo(x + width - r2, y);\r\n      r2 !== 0 && context.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\r\n      context.lineTo(x + width, y + height - r3);\r\n      r3 !== 0 && context.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\r\n      context.lineTo(x + r4, y + height);\r\n      r4 !== 0 && context.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\r\n      context.lineTo(x, y + r1);\r\n      r1 !== 0 && context.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\r\n      context.closePath();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Rect;\r\n", "/**\r\n * @fileoverview 文本\r\n * @author dxq613@gmail.com\r\n */\r\n\r\nimport ShapeBase from './base';\r\nimport { isNil, isString, each } from '../util/util';\r\nimport { getTextHeight, assembleFont } from '@antv/g-base';\r\nclass Text extends ShapeBase {\r\n  // 默认文本属性\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x: 0,\r\n      y: 0,\r\n      text: null,\r\n      fontSize: 12,\r\n      fontFamily: 'sans-serif',\r\n      fontStyle: 'normal',\r\n      fontWeight: 'normal',\r\n      fontVariant: 'normal',\r\n      textAlign: 'start',\r\n      textBaseline: 'bottom',\r\n    };\r\n  }\r\n\r\n  // 仅仅使用包围盒检测来进行拾取\r\n  isOnlyHitBox() {\r\n    return true;\r\n  }\r\n\r\n  // 初始化时组合 font，同时判断 text 是否换行\r\n  initAttrs(attrs) {\r\n    this._assembleFont();\r\n    if (attrs.text) {\r\n      this._setText(attrs.text);\r\n    }\r\n  }\r\n  // 组装字体\r\n  _assembleFont() {\r\n    const attrs = this.attrs;\r\n    attrs.font = assembleFont(attrs);\r\n  }\r\n\r\n  // 如果文本换行，则缓存数组\r\n  _setText(text) {\r\n    let textArr = null;\r\n    if (isString(text) && text.indexOf('\\n') !== -1) {\r\n      textArr = text.split('\\n');\r\n    }\r\n    this.set('textArr', textArr);\r\n  }\r\n\r\n  // 更新属性时，检测是否更改了 font、text\r\n  onAttrChange(name: string, value: any, originValue: any) {\r\n    super.onAttrChange(name, value, originValue);\r\n    if (name.startsWith('font')) {\r\n      this._assembleFont();\r\n    }\r\n    if (name === 'text') {\r\n      this._setText(value);\r\n    }\r\n  }\r\n\r\n  // 这个方法在 text 时没有可以做的事情，如果要支持文字背景时可以考虑\r\n  // createPath(context) {\r\n\r\n  // }\r\n\r\n  // 如果文本多行，需要获取文本间距\r\n  _getSpaceingY() {\r\n    const attrs = this.attrs;\r\n    const lineHeight = attrs.lineHeight;\r\n    const fontSize = attrs.fontSize * 1;\r\n    return lineHeight ? lineHeight - fontSize : fontSize * 0.14;\r\n  }\r\n\r\n  // 绘制文本，考虑多行的场景\r\n  _drawTextArr(context, textArr, isFill) {\r\n    const attrs = this.attrs;\r\n    const textBaseline = attrs.textBaseline;\r\n    const x = attrs.x;\r\n    const y = attrs.y;\r\n    const fontSize = attrs.fontSize * 1;\r\n    const spaceingY = this._getSpaceingY();\r\n    const height = getTextHeight(attrs.text, attrs.fontSize, attrs.lineHeight);\r\n    let subY;\r\n    each(textArr, (subText, index: number) => {\r\n      subY = y + index * (spaceingY + fontSize) - height + fontSize; // bottom;\r\n      if (textBaseline === 'middle') subY += height - fontSize - (height - fontSize) / 2;\r\n      if (textBaseline === 'top') subY += height - fontSize;\r\n      if (!isNil(subText)) {\r\n        if (isFill) {\r\n          context.fillText(subText, x, subY);\r\n        } else {\r\n          context.strokeText(subText, x, subY);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // 绘制文本，同时考虑填充和绘制边框\r\n  _drawText(context, isFill) {\r\n    const attrs = this.attr();\r\n    const x = attrs.x;\r\n    const y = attrs.y;\r\n    const textArr = this.get('textArr');\r\n    if (textArr) {\r\n      this._drawTextArr(context, textArr, isFill);\r\n    } else {\r\n      const text = attrs.text;\r\n      if (!isNil(text)) {\r\n        if (isFill) {\r\n          context.fillText(text, x, y);\r\n        } else {\r\n          context.strokeText(text, x, y);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // 复写绘制和填充的逻辑：对于文本，应该先绘制边框，再进行填充\r\n  strokeAndFill(context) {\r\n    const { lineWidth, opacity, strokeOpacity, fillOpacity } = this.attrs;\r\n\r\n    if (this.isStroke()) {\r\n      if (lineWidth > 0) {\r\n        if (!isNil(strokeOpacity) && strokeOpacity !== 1) {\r\n          context.globalAlpha = opacity;\r\n        }\r\n        this.stroke(context);\r\n      }\r\n    }\r\n\r\n    if (this.isFill()) {\r\n      if (!isNil(fillOpacity) && fillOpacity !== 1) {\r\n        context.globalAlpha = fillOpacity;\r\n        this.fill(context);\r\n        context.globalAlpha = opacity;\r\n      } else {\r\n        this.fill(context);\r\n      }\r\n    }\r\n\r\n    this.afterDrawPath(context);\r\n  }\r\n\r\n  // 复写填充逻辑\r\n  fill(context) {\r\n    this._drawText(context, true);\r\n  }\r\n\r\n  // 复写绘制边框的逻辑\r\n  stroke(context) {\r\n    this._drawText(context, false);\r\n  }\r\n}\r\n\r\nexport default Text;\r\n", "import { AbstractCanvas } from '@antv/g-base';\r\nimport { ChangeType } from '@antv/g-base';\r\nimport { IElement } from './interfaces';\r\nimport { getShape } from './util/hit';\r\nimport * as Shape from './shape';\r\nimport Group from './group';\r\nimport { each, getPixelRatio, requestAnimationFrame, clearAnimationFrame } from './util/util';\r\nimport { applyAttrsToContext, drawChildren, getMergedRegion, mergeView, checkRefresh, clearChanged } from './util/draw';\r\n\r\nclass Canvas extends AbstractCanvas {\r\n  getDefaultCfg() {\r\n    const cfg = super.getDefaultCfg();\r\n    // 设置渲染引擎为 canvas，只读属性\r\n    cfg['renderer'] = 'canvas';\r\n    // 是否自动绘制，不需要用户调用 draw 方法\r\n    cfg['autoDraw'] = true;\r\n    // 是否允许局部刷新图表\r\n    cfg['localRefresh'] = true;\r\n    cfg['refreshElements'] = [];\r\n    // 是否在视图内自动裁剪\r\n    cfg['clipView'] = true;\r\n    // 是否使用快速拾取的方案，默认为 false，上层可以打开\r\n    cfg['quickHit'] = false;\r\n    return cfg;\r\n  }\r\n\r\n  /**\r\n   * 一些方法调用会引起画布变化\r\n   * @param {ChangeType} changeType 改变的类型\r\n   */\r\n  onCanvasChange(changeType: ChangeType) {\r\n    /**\r\n     * 触发画布更新的三种 changeType\r\n     * 1. attr: 修改画布的绘图属性\r\n     * 2. sort: 画布排序，图形的层次会发生变化\r\n     * 3. changeSize: 改变画布大小\r\n     */\r\n    if (changeType === 'attr' || changeType === 'sort' || changeType === 'changeSize') {\r\n      this.set('refreshElements', [this]);\r\n      this.draw();\r\n    }\r\n  }\r\n\r\n  getShapeBase() {\r\n    return Shape;\r\n  }\r\n\r\n  getGroupBase() {\r\n    return Group;\r\n  }\r\n  /**\r\n   * 获取屏幕像素比\r\n   */\r\n  getPixelRatio() {\r\n    const pixelRatio = this.get('pixelRatio') || getPixelRatio();\r\n    // 不足 1 的取 1，超出 1 的取整\r\n    return pixelRatio >= 1 ? Math.ceil(pixelRatio) : 1;\r\n  }\r\n\r\n  getViewRange() {\r\n    return {\r\n      minX: 0,\r\n      minY: 0,\r\n      maxX: this.cfg.width,\r\n      maxY: this.cfg.height,\r\n    };\r\n  }\r\n\r\n  // 复写基类的方法生成标签\r\n  createDom(): HTMLElement {\r\n    const element = document.createElement('canvas');\r\n    const context = element.getContext('2d');\r\n    // 缓存 context 对象\r\n    this.set('context', context);\r\n    return element;\r\n  }\r\n  setDOMSize(width: number, height: number) {\r\n    super.setDOMSize(width, height);\r\n    const context = this.get('context');\r\n    const el = this.get('el');\r\n    const pixelRatio = this.getPixelRatio();\r\n    el.width = pixelRatio * width;\r\n    el.height = pixelRatio * height;\r\n    // 设置 canvas 元素的宽度和高度，会重置缩放，因此 context.scale 需要在每次设置宽、高后调用\r\n    if (pixelRatio > 1) {\r\n      context.scale(pixelRatio, pixelRatio);\r\n    }\r\n  }\r\n  // 复写基类方法\r\n  clear() {\r\n    super.clear();\r\n    this._clearFrame(); // 需要清理掉延迟绘制的帧\r\n    const context = this.get('context');\r\n    const element = this.get('el');\r\n    context.clearRect(0, 0, element.width, element.height);\r\n  }\r\n\r\n  getShape(x: number, y: number) {\r\n    let shape;\r\n    if (this.get('quickHit')) {\r\n      shape = getShape(this, x, y);\r\n    } else {\r\n      shape = super.getShape(x, y, null);\r\n    }\r\n    return shape;\r\n  }\r\n  // 对绘制区域边缘取整，避免浮点数问题\r\n  _getRefreshRegion() {\r\n    const elements = this.get('refreshElements');\r\n    const viewRegion = this.getViewRange();\r\n    let region;\r\n    // 如果是当前画布整体发生了变化，则直接重绘整个画布\r\n    if (elements.length && elements[0] === this) {\r\n      region = viewRegion;\r\n    } else {\r\n      region = getMergedRegion(elements);\r\n      if (region) {\r\n        region.minX = Math.floor(region.minX);\r\n        region.minY = Math.floor(region.minY);\r\n        region.maxX = Math.ceil(region.maxX);\r\n        region.maxY = Math.ceil(region.maxY);\r\n        region.maxY += 1; // 在很多环境下字体的高低会不一致，附加一像素，避免残影\r\n        const clipView = this.get('clipView');\r\n        // 自动裁剪不在 view 内的区域\r\n        if (clipView) {\r\n          region = mergeView(region, viewRegion);\r\n        }\r\n      }\r\n    }\r\n    return region;\r\n  }\r\n\r\n  /**\r\n   * 刷新图形元素，这里仅仅是放入队列，下次绘制时进行绘制\r\n   * @param {IElement} element 图形元素\r\n   */\r\n  refreshElement(element: IElement) {\r\n    const refreshElements = this.get('refreshElements');\r\n    refreshElements.push(element);\r\n    // if (this.get('autoDraw')) {\r\n    //   this._startDraw();\r\n    // }\r\n  }\r\n  // 清理还在进行的绘制\r\n  _clearFrame() {\r\n    const drawFrame = this.get('drawFrame');\r\n    if (drawFrame) {\r\n      // 如果全部渲染时，存在局部渲染，则抛弃掉局部渲染\r\n      clearAnimationFrame(drawFrame);\r\n      this.set('drawFrame', null);\r\n      this.set('refreshElements', []);\r\n    }\r\n  }\r\n\r\n  // 手工调用绘制接口\r\n  draw() {\r\n    const drawFrame = this.get('drawFrame');\r\n    if (this.get('autoDraw') && drawFrame) {\r\n      return;\r\n    }\r\n    this._startDraw();\r\n  }\r\n  // 绘制所有图形\r\n  _drawAll() {\r\n    const context = this.get('context');\r\n    const element = this.get('el');\r\n    const children = this.getChildren() as IElement[];\r\n    context.clearRect(0, 0, element.width, element.height);\r\n    applyAttrsToContext(context, this);\r\n    drawChildren(context, children);\r\n    // 对于 https://github.com/antvis/g/issues/422 的场景，全局渲染的模式下也会记录更新的元素队列，因此全局渲染完后也需要置空\r\n    this.set('refreshElements', []);\r\n  }\r\n  // 绘制局部\r\n  _drawRegion() {\r\n    const context = this.get('context');\r\n    const refreshElements = this.get('refreshElements');\r\n    const children = this.getChildren() as IElement[];\r\n    const region = this._getRefreshRegion();\r\n    // 需要注意可能没有 region 的场景\r\n    // 一般发生在设置了 localRefresh ,在没有图形发生变化的情况下，用户调用了 draw\r\n    if (region) {\r\n      // 清理指定区域\r\n      context.clearRect(region.minX, region.minY, region.maxX - region.minX, region.maxY - region.minY);\r\n      // 保存上下文，设置 clip\r\n      context.save();\r\n      context.beginPath();\r\n      context.rect(region.minX, region.minY, region.maxX - region.minX, region.maxY - region.minY);\r\n      context.clip();\r\n      applyAttrsToContext(context, this);\r\n      // 确认更新的元素，这个优化可以提升 10 倍左右的性能，10W 个带有 group 的节点，局部渲染会从 90ms 下降到 5-6 ms\r\n      checkRefresh(this, children, region);\r\n      // 绘制子元素\r\n      drawChildren(context, children, region);\r\n      context.restore();\r\n    } else if (refreshElements.length) {\r\n      // 防止发生改变的 elements 没有 region 的场景，这会发生在多个情况下\r\n      // 1. 空的 group\r\n      // 2. 所有 elements 没有在绘图区域\r\n      // 3. group 下面的 elements 隐藏掉\r\n      // 如果不进行清理 hasChanged 的状态会不正确\r\n      clearChanged(refreshElements);\r\n    }\r\n    each(refreshElements, (element) => {\r\n      if (element.get('hasChanged')) {\r\n        // 在视窗外的 Group 元素会加入到更新队列里，但实际却没有执行 draw() 逻辑，也就没有清除 hasChanged 标记\r\n        // 即已经重绘完、但 hasChanged 标记没有清除的元素，需要统一清除掉。主要是 Group 存在问题，具体原因待排查\r\n        element.set('hasChanged', false);\r\n      }\r\n    });\r\n    this.set('refreshElements', []);\r\n  }\r\n\r\n  // 触发绘制\r\n  _startDraw() {\r\n    let drawFrame = this.get('drawFrame');\r\n    if (!drawFrame) {\r\n      drawFrame = requestAnimationFrame(() => {\r\n        if (this.get('localRefresh')) {\r\n          this._drawRegion();\r\n        } else {\r\n          this._drawAll();\r\n        }\r\n        this.set('drawFrame', null);\r\n      });\r\n      this.set('drawFrame', drawFrame);\r\n    }\r\n  }\r\n\r\n  skipDraw() {}\r\n\r\n  removeDom() {\r\n    const el = this.get('el');\r\n    // 需要清理 canvas 画布内容，否则ios下 创建的canvas垃圾未回收，导致Total canvas memory use exceeds问题\r\n    // 相关问题列表\r\n    // https://stackoverflow.com/questions/52532614/total-canvas-memory-use-exceeds-the-maximum-limit-safari-12\r\n    // https://github.com/openlayers/openlayers/issues/9291\r\n    el.width = 0;\r\n    el.height = 0;\r\n    el.parentNode.removeChild(el);\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n", "import * as Shape from './shape';\r\nexport * from '@antv/g-base';\r\nexport { IElement } from './interfaces';\r\nexport { Region } from './types';\r\nexport { default as Canvas } from './canvas';\r\nexport { default as Group } from './group';\r\nexport { Shape };\r\nexport { default as getArcParams } from './util/arc-params';\r\n\r\nexport const version = '0.5.12';\r\n", "export const SHAPE_TO_TAGS = {\r\n  rect: 'path',\r\n  circle: 'circle',\r\n  line: 'line',\r\n  path: 'path',\r\n  marker: 'path',\r\n  text: 'text',\r\n  polyline: 'polyline',\r\n  polygon: 'polygon',\r\n  image: 'image',\r\n  ellipse: 'ellipse',\r\n  dom: 'foreignObject',\r\n};\r\n\r\nexport const SVG_ATTR_MAP = {\r\n  opacity: 'opacity',\r\n  fillStyle: 'fill',\r\n  fill: 'fill',\r\n  fillOpacity: 'fill-opacity',\r\n  strokeStyle: 'stroke',\r\n  strokeOpacity: 'stroke-opacity',\r\n  stroke: 'stroke',\r\n  x: 'x',\r\n  y: 'y',\r\n  r: 'r',\r\n  rx: 'rx',\r\n  ry: 'ry',\r\n  width: 'width',\r\n  height: 'height',\r\n  x1: 'x1',\r\n  x2: 'x2',\r\n  y1: 'y1',\r\n  y2: 'y2',\r\n  lineCap: 'stroke-linecap',\r\n  lineJoin: 'stroke-linejoin',\r\n  lineWidth: 'stroke-width',\r\n  lineDash: 'stroke-dasharray',\r\n  lineDashOffset: 'stroke-dashoffset',\r\n  miterLimit: 'stroke-miterlimit',\r\n  font: 'font',\r\n  fontSize: 'font-size',\r\n  fontStyle: 'font-style',\r\n  fontVariant: 'font-variant',\r\n  fontWeight: 'font-weight',\r\n  fontFamily: 'font-family',\r\n  startArrow: 'marker-start',\r\n  endArrow: 'marker-end',\r\n  path: 'd',\r\n  class: 'class',\r\n  id: 'id',\r\n  style: 'style',\r\n  preserveAspectRatio: 'preserveAspectRatio',\r\n};\r\n\r\nexport const EVENTS = [\r\n  'click',\r\n  'mousedown',\r\n  'mouseup',\r\n  'dblclick',\r\n  'contextmenu',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'wheel',\r\n];\r\n", "import { toArray } from '@antv/util';\r\nimport { IShape, IGroup, IElement } from '../interfaces';\r\nimport { SHAPE_TO_TAGS } from '../constant';\r\n\r\n/**\r\n * 创建并返回图形的 svg 元素\r\n * @param type svg类型\r\n */\r\nexport function createSVGElement(type: string): SVGElement {\r\n  return document.createElementNS('http://www.w3.org/2000/svg', type);\r\n}\r\n\r\n/**\r\n * 创建并返回图形的 dom 元素\r\n * @param  {IShape} shape 图形\r\n * @return {SVGElement}\r\n */\r\nexport function createDom(shape: IShape) {\r\n  const type = SHAPE_TO_TAGS[shape.type];\r\n  const parent = shape.getParent();\r\n  if (!type) {\r\n    throw new Error(`the type ${shape.type} is not supported by svg`);\r\n  }\r\n  const element = createSVGElement(type);\r\n  if (shape.get('id')) {\r\n    element.id = shape.get('id');\r\n  }\r\n  shape.set('el', element);\r\n  shape.set('attrs', {});\r\n  // 对于 defs 下的 dom 节点，parent 为空，通过 context 统一挂载到 defs 节点下\r\n  if (parent) {\r\n    let parentNode = parent.get('el');\r\n    if (parentNode) {\r\n      parentNode.appendChild(element);\r\n    } else {\r\n      // parentNode maybe null for group\r\n      parentNode = (parent as IGroup).createDom();\r\n      parent.set('el', parentNode);\r\n      parentNode.appendChild(element);\r\n    }\r\n  }\r\n  return element;\r\n}\r\n\r\n/**\r\n * 对 dom 元素进行排序\r\n * @param {IElement} element  元素\r\n * @param {sorter}   function 排序函数\r\n */\r\nexport function sortDom(element: IElement, sorter: (a: IElement, b: IElement) => number) {\r\n  const el = element.get('el');\r\n  const childList = toArray(el.children).sort(sorter);\r\n  // create empty fragment\r\n  const fragment = document.createDocumentFragment();\r\n  childList.forEach((child) => {\r\n    fragment.appendChild(child);\r\n  });\r\n  el.appendChild(fragment);\r\n}\r\n\r\n/**\r\n * 将 dom 元素移动到父元素下的指定位置\r\n * @param {SVGElement} element     dom 元素\r\n * @param {number}     targetIndex 目标位置(从 0 开始)\r\n */\r\nexport function moveTo(element: SVGElement, targetIndex: number) {\r\n  const parentNode = element.parentNode;\r\n  const siblings = Array.from(parentNode.childNodes).filter(\r\n    // 要求为元素节点，且不能为 defs 节点\r\n    (node: Node) => node.nodeType === 1 && node.nodeName.toLowerCase() !== 'defs'\r\n  );\r\n  // 获取目标节点\r\n  const target = siblings[targetIndex];\r\n  const currentIndex = siblings.indexOf(element);\r\n  // 如果目标节点存在\r\n  if (target) {\r\n    // 当前索引 > 目标索引，直接插入到目标节点之前即可\r\n    if (currentIndex > targetIndex) {\r\n      parentNode.insertBefore(element, target);\r\n    } else if (currentIndex < targetIndex) {\r\n      // 当前索引 < 目标索引\r\n      // 获取目标节点的下一个节点\r\n      const targetNext = siblings[targetIndex + 1];\r\n      // 如果目标节点的下一个节点存在，插入到该节点之前\r\n      if (targetNext) {\r\n        parentNode.insertBefore(element, targetNext);\r\n      } else {\r\n        // 如果该节点不存在，则追加到末尾\r\n        parentNode.appendChild(element);\r\n      }\r\n    }\r\n  } else {\r\n    parentNode.appendChild(element);\r\n  }\r\n}\r\n", "import { createDom } from './dom';\r\n\r\nexport function setShadow(model, context) {\r\n  const el = model.cfg.el;\r\n  const attrs = model.attr();\r\n  const cfg = {\r\n    dx: attrs.shadowOffsetX,\r\n    dy: attrs.shadowOffsetY,\r\n    blur: attrs.shadowBlur,\r\n    color: attrs.shadowColor,\r\n  };\r\n  if (!cfg.dx && !cfg.dy && !cfg.blur && !cfg.color) {\r\n    el.removeAttribute('filter');\r\n  } else {\r\n    let id = context.find('filter', cfg);\r\n    if (!id) {\r\n      id = context.addShadow(cfg);\r\n    }\r\n    el.setAttribute('filter', `url(#${id})`);\r\n  }\r\n}\r\n\r\nexport function setTransform(model) {\r\n  const { matrix } = model.attr();\r\n  if (matrix) {\r\n    const el = model.cfg.el;\r\n    let transform: any = [];\r\n    for (let i = 0; i < 9; i += 3) {\r\n      transform.push(`${matrix[i]},${matrix[i + 1]}`);\r\n    }\r\n    transform = transform.join(',');\r\n    if (transform.indexOf('NaN') === -1) {\r\n      el.setAttribute('transform', `matrix(${transform})`);\r\n    } else {\r\n      console.warn('invalid matrix:', matrix);\r\n    }\r\n  }\r\n}\r\n\r\nexport function setClip(model, context) {\r\n  const clip = model.getClip();\r\n  const el = model.get('el');\r\n  if (!clip) {\r\n    el.removeAttribute('clip-path');\r\n  } else if (clip && !el.hasAttribute('clip-path')) {\r\n    createDom(clip);\r\n    clip.createPath(context);\r\n    const id = context.addClip(clip);\r\n    el.setAttribute('clip-path', `url(#${id})`);\r\n  }\r\n}\r\n", "import { ChangeType } from '@antv/g-base';\r\nimport { IElement } from '../interfaces';\r\nimport { setTransform, setClip } from './svg';\r\nimport { sortDom, moveTo } from './dom';\r\nimport Defs from '../defs';\r\n\r\nexport function drawChildren(context: Defs, children: IElement[]) {\r\n  children.forEach((child) => {\r\n    child.draw(context);\r\n  });\r\n}\r\n\r\n/**\r\n * 更新元素，包括 group 和 shape\r\n * @param {IElement} element       SVG 元素\r\n * @param {ChangeType} changeType  更新类型\r\n */\r\nexport function refreshElement(element: IElement, changeType: ChangeType) {\r\n  // 对于还没有挂载到画布下的元素，canvas 可能为空\r\n  const canvas = element.get('canvas');\r\n  // 只有挂载到画布下，才对元素进行实际渲染\r\n  if (canvas && canvas.get('autoDraw')) {\r\n    const context = canvas.get('context');\r\n    const parent = element.getParent();\r\n    const parentChildren = parent ? parent.getChildren() : [canvas];\r\n    const el = element.get('el');\r\n    if (changeType === 'remove') {\r\n      const isClipShape = element.get('isClipShape');\r\n      // 对于 clip，不仅需要将 clipShape 对于的 SVG 元素删除，还需要将上层的 clipPath 元素也删除\r\n      if (isClipShape) {\r\n        const clipPathEl = el && el.parentNode;\r\n        const defsEl = clipPathEl && clipPathEl.parentNode;\r\n        if (clipPathEl && defsEl) {\r\n          defsEl.removeChild(clipPathEl);\r\n        }\r\n      } else if (el && el.parentNode) {\r\n        el.parentNode.removeChild(el);\r\n      }\r\n    } else if (changeType === 'show') {\r\n      el.setAttribute('visibility', 'visible');\r\n    } else if (changeType === 'hide') {\r\n      el.setAttribute('visibility', 'hidden');\r\n    } else if (changeType === 'zIndex') {\r\n      moveTo(el, parentChildren.indexOf(element));\r\n    } else if (changeType === 'sort') {\r\n      const children = element.get('children');\r\n      if (children && children.length) {\r\n        sortDom(element, (a: IElement, b: IElement) => {\r\n          return children.indexOf(a) - children.indexOf(b) ? 1 : 0;\r\n        });\r\n      }\r\n    } else if (changeType === 'clear') {\r\n      // el maybe null for group\r\n      if (el) {\r\n        el.innerHTML = '';\r\n      }\r\n    } else if (changeType === 'matrix') {\r\n      setTransform(element);\r\n    } else if (changeType === 'clip') {\r\n      setClip(element, context);\r\n    } else if (changeType === 'attr') {\r\n      // 已在 afterAttrsChange 进行了处理，此处 do nothing\r\n    } else if (changeType === 'add') {\r\n      element.draw(context);\r\n    }\r\n  }\r\n}\r\n", "export { default as Base } from './base';\r\nexport { default as Circle } from './circle';\r\nexport { default as Dom } from './dom';\r\nexport { default as Ellipse } from './ellipse';\r\nexport { default as Image } from './image';\r\nexport { default as Line } from './line';\r\nexport { default as Marker } from './marker';\r\nexport { default as Path } from './path';\r\nexport { default as Polygon } from './polygon';\r\nexport { default as Polyline } from './polyline';\r\nexport { default as Rect } from './rect';\r\nexport { default as Text } from './text';\r\n", "import { AbstractGroup } from '@antv/g-base';\r\nimport { ChangeType } from '@antv/g-base';\r\nimport { each } from '@antv/util';\r\nimport { IElement, IGroup } from './interfaces';\r\nimport * as Shape from './shape';\r\nimport Defs from './defs';\r\nimport { drawChildren, refreshElement } from './util/draw';\r\nimport { setClip, setTransform } from './util/svg';\r\nimport { SVG_ATTR_MAP } from './constant';\r\nimport { createSVGElement } from './util/dom';\r\n\r\nclass Group extends AbstractGroup {\r\n  // SVG 中分组对应实体标签 <g>\r\n  isEntityGroup() {\r\n    return true;\r\n  }\r\n\r\n  createDom() {\r\n    const element = createSVGElement('g');\r\n    this.set('el', element);\r\n    const parent = this.getParent();\r\n    if (parent) {\r\n      let parentNode = parent.get('el');\r\n      if (parentNode) {\r\n        parentNode.appendChild(element);\r\n      } else {\r\n        // parentNode maybe null for group\r\n        parentNode = (parent as IGroup).createDom();\r\n        parent.set('el', parentNode);\r\n        parentNode.appendChild(element);\r\n      }\r\n    }\r\n    return element;\r\n  }\r\n\r\n  // 覆盖基类的 afterAttrsChange 方法\r\n  afterAttrsChange(targetAttrs) {\r\n    super.afterAttrsChange(targetAttrs);\r\n    const canvas = this.get('canvas');\r\n    // 只有挂载到画布下，才对元素进行实际渲染\r\n    if (canvas && canvas.get('autoDraw')) {\r\n      const context = canvas.get('context');\r\n      this.createPath(context, targetAttrs);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 一些方法调用会引起画布变化\r\n   * @param {ChangeType} changeType 改变的类型\r\n   */\r\n  onCanvasChange(changeType: ChangeType) {\r\n    refreshElement(this, changeType);\r\n  }\r\n\r\n  getShapeBase() {\r\n    return Shape;\r\n  }\r\n\r\n  getGroupBase() {\r\n    return Group;\r\n  }\r\n\r\n  draw(context: Defs) {\r\n    const children = this.getChildren() as IElement[];\r\n    const el = this.get('el');\r\n    if (this.get('destroyed')) {\r\n      if (el) {\r\n        el.parentNode.removeChild(el);\r\n      }\r\n    } else {\r\n      if (!el) {\r\n        this.createDom();\r\n      }\r\n      setClip(this, context);\r\n      this.createPath(context);\r\n      if (children.length) {\r\n        drawChildren(context, children);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制分组的路径\r\n   * @param {Defs} context 上下文\r\n   * @param {ShapeAttrs} targetAttrs 渲染的目标属性\r\n   */\r\n  createPath(context: Defs, targetAttrs?) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      if (SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n    setTransform(this);\r\n  }\r\n}\r\n\r\nexport default Group;\r\n", "import { AbstractShape } from '@antv/g-base';\r\nimport { ShapeAttrs, ChangeType, BBox } from '@antv/g-base';\r\nimport { IShape } from '../interfaces';\r\nimport Defs from '../defs';\r\nimport { setShadow, setTransform, setClip } from '../util/svg';\r\nimport { createDom } from '../util/dom';\r\nimport { refreshElement } from '../util/draw';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport * as Shape from './index';\r\nimport Group from '../group';\r\nimport { getBBoxMethod } from '@antv/g-base';\r\n\r\nclass ShapeBase extends AbstractShape implements IShape {\r\n  type: string = 'svg';\r\n  canFill: boolean = false;\r\n  canStroke: boolean = false;\r\n\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    // 设置默认值\r\n    return {\r\n      ...attrs,\r\n      lineWidth: 1,\r\n      lineAppendWidth: 0,\r\n      strokeOpacity: 1,\r\n      fillOpacity: 1,\r\n    };\r\n  }\r\n\r\n  // 覆盖基类的 afterAttrsChange 方法\r\n  afterAttrsChange(targetAttrs: ShapeAttrs) {\r\n    super.afterAttrsChange(targetAttrs);\r\n    const canvas = this.get('canvas');\r\n    // 只有挂载到画布下，才对元素进行实际渲染\r\n    if (canvas && canvas.get('autoDraw')) {\r\n      const context = canvas.get('context');\r\n      this.draw(context, targetAttrs);\r\n    }\r\n  }\r\n\r\n  getShapeBase() {\r\n    return Shape;\r\n  }\r\n\r\n  getGroupBase() {\r\n    return Group;\r\n  }\r\n\r\n  /**\r\n   * 一些方法调用会引起画布变化\r\n   * @param {ChangeType} changeType 改变的类型\r\n   */\r\n  onCanvasChange(changeType: ChangeType) {\r\n    refreshElement(this, changeType);\r\n  }\r\n\r\n  calculateBBox(): BBox {\r\n    const el = this.get('el');\r\n    let bbox = null;\r\n    // 包围盒计算依赖于绘制，如果还没有生成对应的 Dom 元素，则包围盒的长宽均为 0\r\n    if (el) {\r\n      bbox = el.getBBox();\r\n    } else {\r\n      const bboxMethod = getBBoxMethod(this.get('type'));\r\n      if (bboxMethod) {\r\n        bbox = bboxMethod(this);\r\n      }\r\n    }\r\n    if (bbox) {\r\n      const { x, y, width, height } = bbox;\r\n      const lineWidth = this.getHitLineWidth();\r\n      const halfWidth = lineWidth / 2;\r\n      const minX = x - halfWidth;\r\n      const minY = y - halfWidth;\r\n      const maxX = x + width + halfWidth;\r\n      const maxY = y + height + halfWidth;\r\n      return {\r\n        x: minX,\r\n        y: minY,\r\n        minX,\r\n        minY,\r\n        maxX,\r\n        maxY,\r\n        width: width + lineWidth,\r\n        height: height + lineWidth,\r\n      };\r\n    }\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      minX: 0,\r\n      minY: 0,\r\n      maxX: 0,\r\n      maxY: 0,\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n  }\r\n\r\n  isFill() {\r\n    const { fill, fillStyle } = this.attr();\r\n    return (fill || fillStyle || this.isClipShape()) && this.canFill;\r\n  }\r\n\r\n  isStroke() {\r\n    const { stroke, strokeStyle } = this.attr();\r\n    return (stroke || strokeStyle) && this.canStroke;\r\n  }\r\n\r\n  draw(context, targetAttrs) {\r\n    const el = this.get('el');\r\n    if (this.get('destroyed')) {\r\n      if (el) {\r\n        el.parentNode.removeChild(el);\r\n      }\r\n    } else {\r\n      if (!el) {\r\n        createDom(this);\r\n      }\r\n      setClip(this, context);\r\n      this.createPath(context, targetAttrs);\r\n      this.shadow(context, targetAttrs);\r\n      this.strokeAndFill(context, targetAttrs);\r\n      this.transform(targetAttrs);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * 绘制图形的路径\r\n   * @param {Defs} context 上下文\r\n   * @param {ShapeAttrs} targetAttrs 渲染的目标属性\r\n   */\r\n  createPath(context: Defs, targetAttrs?: ShapeAttrs) {}\r\n\r\n  // stroke and fill\r\n  strokeAndFill(context, targetAttrs?) {\r\n    const attrs = targetAttrs || this.attr();\r\n    const { fill, fillStyle, stroke, strokeStyle, fillOpacity, strokeOpacity, lineWidth } = attrs;\r\n    const el = this.get('el');\r\n\r\n    if (this.canFill) {\r\n      // 初次渲染和更新渲染的逻辑有所不同: 初次渲染值为空时，需要设置为 none，否则就会是黑色，而更新渲染则不需要\r\n      if (!targetAttrs) {\r\n        this._setColor(context, 'fill', fill || fillStyle);\r\n      } else if ('fill' in attrs) {\r\n        this._setColor(context, 'fill', fill);\r\n      } else if ('fillStyle' in attrs) {\r\n        // compatible with fillStyle\r\n        this._setColor(context, 'fill', fillStyle);\r\n      }\r\n      if (fillOpacity) {\r\n        el.setAttribute(SVG_ATTR_MAP['fillOpacity'], fillOpacity);\r\n      }\r\n    }\r\n\r\n    if (this.canStroke && lineWidth > 0) {\r\n      if (!targetAttrs) {\r\n        this._setColor(context, 'stroke', stroke || strokeStyle);\r\n      } else if ('stroke' in attrs) {\r\n        this._setColor(context, 'stroke', stroke);\r\n      } else if ('strokeStyle' in attrs) {\r\n        // compatible with strokeStyle\r\n        this._setColor(context, 'stroke', strokeStyle);\r\n      }\r\n      if (strokeOpacity) {\r\n        el.setAttribute(SVG_ATTR_MAP['strokeOpacity'], strokeOpacity);\r\n      }\r\n      if (lineWidth) {\r\n        el.setAttribute(SVG_ATTR_MAP['lineWidth'], lineWidth);\r\n      }\r\n    }\r\n  }\r\n\r\n  _setColor(context, attr, value) {\r\n    const el = this.get('el');\r\n    if (!value) {\r\n      // need to set `none` to avoid default value\r\n      el.setAttribute(SVG_ATTR_MAP[attr], 'none');\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    if (/^[r,R,L,l]{1}[\\s]*\\(/.test(value)) {\r\n      let id = context.find('gradient', value);\r\n      if (!id) {\r\n        id = context.addGradient(value);\r\n      }\r\n      el.setAttribute(SVG_ATTR_MAP[attr], `url(#${id})`);\r\n    } else if (/^[p,P]{1}[\\s]*\\(/.test(value)) {\r\n      let id = context.find('pattern', value);\r\n      if (!id) {\r\n        id = context.addPattern(value);\r\n      }\r\n      el.setAttribute(SVG_ATTR_MAP[attr], `url(#${id})`);\r\n    } else {\r\n      el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n    }\r\n  }\r\n\r\n  shadow(context, targetAttrs?) {\r\n    const attrs = this.attr();\r\n    const { shadowOffsetX, shadowOffsetY, shadowBlur, shadowColor } = targetAttrs || attrs;\r\n    if (shadowOffsetX || shadowOffsetY || shadowBlur || shadowColor) {\r\n      setShadow(this, context);\r\n    }\r\n  }\r\n\r\n  transform(targetAttrs?) {\r\n    const attrs = this.attr();\r\n    const { matrix } = targetAttrs || attrs;\r\n    if (matrix) {\r\n      setTransform(this);\r\n    }\r\n  }\r\n\r\n  isInShape(refX: number, refY: number): boolean {\r\n    return this.isPointInPath(refX, refY);\r\n  }\r\n\r\n  isPointInPath(refX: number, refY: number): boolean {\r\n    const el = this.get('el');\r\n    const canvas = this.get('canvas');\r\n    const bbox = canvas.get('el').getBoundingClientRect();\r\n    const clientX = refX + bbox.left;\r\n    const clientY = refY + bbox.top;\r\n    const element = document.elementFromPoint(clientX, clientY);\r\n    if (element && element.isEqualNode(el)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 获取线拾取的宽度\r\n   * @returns {number} 线的拾取宽度\r\n   */\r\n  getHitLineWidth() {\r\n    const { lineWidth, lineAppendWidth } = this.attrs;\r\n    if (this.isStroke()) {\r\n      return lineWidth + lineAppendWidth;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport default ShapeBase;\r\n", "/**\r\n * @fileoverview circle\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { each } from '@antv/util';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport ShapeBase from './base';\r\n\r\nclass Circle extends ShapeBase {\r\n  type: string = 'circle';\r\n  canFill: boolean = true;\r\n  canStroke: boolean = true;\r\n\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x: 0,\r\n      y: 0,\r\n      r: 0,\r\n    };\r\n  }\r\n\r\n  createPath(context, targetAttrs) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      // 圆和椭圆的点坐标属性不是 x, y，而是 cx, cy\r\n      if (attr === 'x' || attr === 'y') {\r\n        el.setAttribute(`c${attr}`, value);\r\n      } else if (SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default Circle;\r\n", "/**\r\n * @fileoverview dom\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { each } from '@antv/util';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport ShapeBase from './base';\r\n\r\nclass Dom extends ShapeBase {\r\n  type: string = 'dom';\r\n  canFill: boolean = false;\r\n  canStroke: boolean = false;\r\n\r\n  createPath(context, targetAttrs) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      if (SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n    if (typeof attrs['html'] === 'function') {\r\n      const element = attrs['html'].call(this, attrs);\r\n      if (element instanceof Element || element instanceof HTMLDocument) {\r\n        const children = el.childNodes;\r\n        for (let i = children.length - 1; i >= 0; i--) {\r\n          el.removeChild(children[i]);\r\n        }\r\n        el.appendChild(element); // append to el if it's an element\r\n      } else {\r\n        el.innerHTML = element; // set innerHTML\r\n      }\r\n    } else {\r\n      el.innerHTML = attrs['html']; // set innerHTML\r\n    }\r\n  }\r\n}\r\n\r\nexport default Dom;\r\n", "/**\r\n * @fileoverview ellipse\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { each } from '@antv/util';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport ShapeBase from './base';\r\n\r\nclass Ellipse extends ShapeBase {\r\n  type: string = 'ellipse';\r\n  canFill: boolean = true;\r\n  canStroke: boolean = true;\r\n\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x: 0,\r\n      y: 0,\r\n      rx: 0,\r\n      ry: 0,\r\n    };\r\n  }\r\n\r\n  createPath(context, targetAttrs) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      // 圆和椭圆的点坐标属性不是 x, y，而是 cx, cy\r\n      if (attr === 'x' || attr === 'y') {\r\n        el.setAttribute(`c${attr}`, value);\r\n      } else if (SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default Ellipse;\r\n", "/**\r\n * @fileoverview image\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { each, isString } from '@antv/util';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport ShapeBase from './base';\r\n\r\nclass Image extends ShapeBase {\r\n  type: string = 'image';\r\n  canFill: boolean = false;\r\n  canStroke: boolean = false;\r\n\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x: 0,\r\n      y: 0,\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n  }\r\n\r\n  createPath(context, targetAttrs) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      if (attr === 'img') {\r\n        this._setImage(attrs.img);\r\n      } else if (SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n  }\r\n\r\n  setAttr(name: string, value: any) {\r\n    this.attrs[name] = value;\r\n    if (name === 'img') {\r\n      this._setImage(value);\r\n    }\r\n  }\r\n\r\n  _setImage(img) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    if (isString(img)) {\r\n      el.setAttribute('href', img);\r\n    } else if (img instanceof (window as any).Image) {\r\n      if (!attrs.width) {\r\n        el.setAttribute('width', img.width);\r\n        this.attr('width', img.width);\r\n      }\r\n      if (!attrs.height) {\r\n        el.setAttribute('height', img.height);\r\n        this.attr('height', img.height);\r\n      }\r\n      el.setAttribute('href', img.src);\r\n    } else if (img instanceof HTMLElement && isString(img.nodeName) && img.nodeName.toUpperCase() === 'CANVAS') {\r\n      // @ts-ignore\r\n      el.setAttribute('href', img.toDataURL());\r\n    } else if (img instanceof ImageData) {\r\n      const canvas = document.createElement('canvas');\r\n      canvas.setAttribute('width', `${img.width}`);\r\n      canvas.setAttribute('height', `${img.height}`);\r\n      canvas.getContext('2d').putImageData(img, 0, 0);\r\n      if (!attrs.width) {\r\n        el.setAttribute('width', `${img.width}`);\r\n        this.attr('width', img.width);\r\n      }\r\n      if (!attrs.height) {\r\n        el.setAttribute('height', `${img.height}`);\r\n        this.attr('height', img.height);\r\n      }\r\n      el.setAttribute('href', canvas.toDataURL());\r\n    }\r\n  }\r\n}\r\n\r\nexport default Image;\r\n", "/**\r\n * @fileoverview line\r\n * @author dengfuping_develop@163.com\r\n */\r\nimport { Line as LineUtil } from '@antv/g-math';\r\nimport { each, isObject } from '@antv/util';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport ShapeBase from './base';\r\n\r\nclass Line extends ShapeBase {\r\n  type: string = 'line';\r\n  canFill: boolean = false;\r\n  canStroke: boolean = true;\r\n\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x1: 0,\r\n      y1: 0,\r\n      x2: 0,\r\n      y2: 0,\r\n      startArrow: false,\r\n      endArrow: false,\r\n    };\r\n  }\r\n\r\n  createPath(context, targetAttrs) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      if (attr === 'startArrow' || attr === 'endArrow') {\r\n        if (value) {\r\n          const id = isObject(value)\r\n            ? context.addArrow(attrs, SVG_ATTR_MAP[attr])\r\n            : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);\r\n          el.setAttribute(SVG_ATTR_MAP[attr], `url(#${id})`);\r\n        } else {\r\n          el.removeAttribute(SVG_ATTR_MAP[attr]);\r\n        }\r\n      } else if (SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Use math calculation to get length of line\r\n   * @return {number} length\r\n   */\r\n  getTotalLength() {\r\n    const { x1, y1, x2, y2 } = this.attr();\r\n    return LineUtil.length(x1, y1, x2, y2);\r\n  }\r\n\r\n  /**\r\n   * Use math calculation to get point according to ratio as same sa Canvas version\r\n   * @param {number} ratio\r\n   * @return {Point} point\r\n   */\r\n  getPoint(ratio: number) {\r\n    const { x1, y1, x2, y2 } = this.attr();\r\n    return LineUtil.pointAt(x1, y1, x2, y2, ratio);\r\n  }\r\n}\r\n\r\nexport default Line;\r\n", "/**\r\n * @fileoverview marker\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { isArray, isFunction } from '@antv/util';\r\nimport ShapeBase from '../base';\r\nimport symbolsFactory from './symbols';\r\n\r\nclass Marker extends ShapeBase {\r\n  type: string = 'marker';\r\n  canFill: boolean = true;\r\n  canStroke: boolean = true;\r\n\r\n  // 作为其静态属性\r\n  public static symbolsFactory = symbolsFactory;\r\n\r\n  createPath(context) {\r\n    const el = this.get('el');\r\n    el.setAttribute('d', this._assembleMarker());\r\n  }\r\n\r\n  _assembleMarker() {\r\n    const d = this._getPath();\r\n    if (isArray(d)) {\r\n      return d\r\n        .map((path) => {\r\n          return path.join(' ');\r\n        })\r\n        .join('');\r\n    }\r\n    return d;\r\n  }\r\n\r\n  _getPath(): any[] {\r\n    const attrs = this.attr();\r\n    const { x, y } = attrs;\r\n    // 兼容 r 和 radius 两种写法，推荐使用 r\r\n    const r = attrs.r || attrs.radius;\r\n    const symbol = attrs.symbol || 'circle';\r\n    let method;\r\n    if (isFunction(symbol)) {\r\n      method = symbol;\r\n    } else {\r\n      method = symbolsFactory.get(symbol);\r\n    }\r\n\r\n    if (!method) {\r\n      console.warn(`${method} symbol is not exist.`);\r\n      return null;\r\n    }\r\n    return method(x, y, r);\r\n  }\r\n}\r\n\r\nexport default Marker;\r\n", "const Symbols = {\r\n  // 圆\r\n  circle(x: number, y: number, r: number): any[] {\r\n    return [\r\n      ['M', x, y],\r\n      ['m', -r, 0],\r\n      ['a', r, r, 0, 1, 0, r * 2, 0],\r\n      ['a', r, r, 0, 1, 0, -r * 2, 0],\r\n    ];\r\n  },\r\n  // 正方形\r\n  square(x: number, y: number, r: number): any[] {\r\n    return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];\r\n  },\r\n  // 菱形\r\n  diamond(x: number, y: number, r: number): any[] {\r\n    return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];\r\n  },\r\n  // 三角形\r\n  triangle(x: number, y: number, r: number): any[] {\r\n    const diffY = r * Math.sin((1 / 3) * Math.PI);\r\n    return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['z']];\r\n  },\r\n  // 倒三角形\r\n  triangleDown(x: number, y: number, r: number): any[] {\r\n    const diffY = r * Math.sin((1 / 3) * Math.PI);\r\n    return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];\r\n  },\r\n};\r\n\r\nexport type SymbolFunc = (x: number, y: number, r: number) => any[];\r\n\r\nexport default {\r\n  get(type: string): SymbolFunc {\r\n    return Symbols[type];\r\n  },\r\n\r\n  register(type: string, func: SymbolFunc) {\r\n    Symbols[type] = func;\r\n  },\r\n\r\n  remove(type: string) {\r\n    delete Symbols[type];\r\n  },\r\n\r\n  getAll() {\r\n    return Symbols;\r\n  },\r\n};\r\n", "/**\r\n * @fileoverview path\r\n * @author dengfuping_develop@163.com\r\n */\r\nimport { Point } from '@antv/g-base';\r\nimport { each, isArray, isObject } from '@antv/util';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport ShapeBase from './base';\r\n\r\nclass Path extends ShapeBase {\r\n  type: string = 'path';\r\n  canFill: boolean = true;\r\n  canStroke: boolean = true;\r\n\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      startArrow: false,\r\n      endArrow: false,\r\n    };\r\n  }\r\n\r\n  createPath(context, targetAttrs) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      if (attr === 'path' && isArray(value)) {\r\n        el.setAttribute('d', this._formatPath(value));\r\n      } else if (attr === 'startArrow' || attr === 'endArrow') {\r\n        if (value) {\r\n          const id = isObject(value)\r\n            ? context.addArrow(attrs, SVG_ATTR_MAP[attr])\r\n            : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);\r\n          el.setAttribute(SVG_ATTR_MAP[attr], `url(#${id})`);\r\n        } else {\r\n          el.removeAttribute(SVG_ATTR_MAP[attr]);\r\n        }\r\n      } else if (SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n  }\r\n\r\n  _formatPath(value) {\r\n    const newValue = value\r\n      .map((path) => {\r\n        return path.join(' ');\r\n      })\r\n      .join('');\r\n    if (~newValue.indexOf('NaN')) {\r\n      return '';\r\n    }\r\n    return newValue;\r\n  }\r\n\r\n  /**\r\n   * Get total length of path\r\n   * 尽管通过浏览器的 SVGPathElement.getTotalLength() 接口获取的 path 长度，\r\n   * 与 Canvas 版本通过数学计算的方式得到的长度有一些细微差异，但最大误差在个位数像素，精度上可以能接受\r\n   * @return {number} length\r\n   */\r\n  getTotalLength() {\r\n    const el = this.get('el');\r\n    return el ? el.getTotalLength() : null;\r\n  }\r\n\r\n  /**\r\n   * Get point according to ratio\r\n   * @param {number} ratio\r\n   * @return {Point} point\r\n   */\r\n  getPoint(ratio: number): Point {\r\n    const el = this.get('el');\r\n    const totalLength = this.getTotalLength();\r\n    // @see https://github.com/antvis/g/issues/634\r\n    if (totalLength === 0) {\r\n      return null;\r\n    }\r\n    const point = el ? el.getPointAtLength(ratio * totalLength) : null;\r\n    return point\r\n      ? {\r\n          x: point.x,\r\n          y: point.y,\r\n        }\r\n      : null;\r\n  }\r\n}\r\n\r\nexport default Path;\r\n", "/**\r\n * @fileoverview polygon\r\n * @author dengfuping_develop@163.com\r\n */\r\nimport { each, isArray } from '@antv/util';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport ShapeBase from './base';\r\n\r\nclass Polygon extends ShapeBase {\r\n  type: string = 'polygon';\r\n  canFill: boolean = true;\r\n  canStroke: boolean = true;\r\n\r\n  createPath(context, targetAttrs) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      if (attr === 'points' && isArray(value) && value.length >= 2) {\r\n        el.setAttribute('points', value.map((point) => `${point[0]},${point[1]}`).join(' '));\r\n      } else if (SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default Polygon;\r\n", "/**\r\n * @fileoverview polyline\r\n * @author dengfuping_develop@163.com\r\n */\r\nimport { Point } from '@antv/g-base';\r\nimport { Polyline as PolylineUtil } from '@antv/g-math';\r\nimport { Line as LineUtil } from '@antv/g-math';\r\nimport { each, isArray, isNil } from '@antv/util';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport ShapeBase from './base';\r\n\r\nclass Polyline extends ShapeBase {\r\n  type: string = 'polyline';\r\n  canFill: boolean = true;\r\n  canStroke: boolean = true;\r\n\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      startArrow: false,\r\n      endArrow: false,\r\n    };\r\n  }\r\n\r\n  // 更新属性时，检测是否更改了 points\r\n  onAttrChange(name: string, value: any, originValue: any) {\r\n    super.onAttrChange(name, value, originValue);\r\n    if (['points'].indexOf(name) !== -1) {\r\n      this._resetCache();\r\n    }\r\n  }\r\n\r\n  _resetCache() {\r\n    this.set('totalLength', null);\r\n    this.set('tCache', null);\r\n  }\r\n\r\n  createPath(context, targetAttrs) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      if (attr === 'points' && isArray(value) && value.length >= 2) {\r\n        el.setAttribute('points', value.map((point) => `${point[0]},${point[1]}`).join(' '));\r\n      } else if (SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get length of polyline\r\n   * @return {number} length\r\n   */\r\n  getTotalLength() {\r\n    const { points } = this.attr();\r\n    // get totalLength from cache\r\n    const totalLength = this.get('totalLength');\r\n    if (!isNil(totalLength)) {\r\n      return totalLength;\r\n    }\r\n    this.set('totalLength', PolylineUtil.length(points));\r\n    return this.get('totalLength');\r\n  }\r\n\r\n  /**\r\n   * Get point according to ratio\r\n   * @param {number} ratio\r\n   * @return {Point} point\r\n   */\r\n  getPoint(ratio: number): Point {\r\n    const { points } = this.attr();\r\n    // get tCache from cache\r\n    let tCache = this.get('tCache');\r\n    if (!tCache) {\r\n      this._setTcache();\r\n      tCache = this.get('tCache');\r\n    }\r\n\r\n    let subt;\r\n    let index;\r\n    each(tCache, (v, i) => {\r\n      if (ratio >= v[0] && ratio <= v[1]) {\r\n        subt = (ratio - v[0]) / (v[1] - v[0]);\r\n        index = i;\r\n      }\r\n    });\r\n    return LineUtil.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt);\r\n  }\r\n\r\n  _setTcache() {\r\n    const { points } = this.attr();\r\n    if (!points || points.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const totalLength = this.getTotalLength();\r\n    if (totalLength <= 0) {\r\n      return;\r\n    }\r\n\r\n    let tempLength = 0;\r\n    const tCache = [];\r\n    let segmentT;\r\n    let segmentL;\r\n\r\n    each(points, (p, i) => {\r\n      if (points[i + 1]) {\r\n        segmentT = [];\r\n        segmentT[0] = tempLength / totalLength;\r\n        segmentL = LineUtil.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);\r\n        tempLength += segmentL;\r\n        segmentT[1] = tempLength / totalLength;\r\n        tCache.push(segmentT);\r\n      }\r\n    });\r\n    this.set('tCache', tCache);\r\n  }\r\n\r\n  /**\r\n   * Get start tangent vector\r\n   * @return {Array}\r\n   */\r\n  getStartTangent(): number[][] {\r\n    const { points } = this.attr();\r\n    const result = [];\r\n    result.push([points[1][0], points[1][1]]);\r\n    result.push([points[0][0], points[0][1]]);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get end tangent vector\r\n   * @return {Array}\r\n   */\r\n  getEndTangent(): number[][] {\r\n    const { points } = this.attr();\r\n    const l = points.length - 1;\r\n    const result = [];\r\n    result.push([points[l - 1][0], points[l - 1][1]]);\r\n    result.push([points[l][0], points[l][1]]);\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Polyline;\r\n", "/**\r\n * @fileoverview rect\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { each, isArray } from '@antv/util';\r\nimport ShapeBase from './base';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport { parseRadius } from '../util/format';\r\n\r\nclass Rect extends ShapeBase {\r\n  type: string = 'rect';\r\n  canFill: boolean = true;\r\n  canStroke: boolean = true;\r\n\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x: 0,\r\n      y: 0,\r\n      width: 0,\r\n      height: 0,\r\n      radius: 0,\r\n    };\r\n  }\r\n\r\n  createPath(context, targetAttrs) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    // 加上状态量，用来标记 path 是否已组装\r\n    let completed = false;\r\n    // 和组装 path 相关的绘图属性\r\n    const pathRelatedAttrs = ['x', 'y', 'width', 'height', 'radius'];\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      if (pathRelatedAttrs.indexOf(attr) !== -1 && !completed) {\r\n        el.setAttribute('d', this._assembleRect(attrs));\r\n        completed = true;\r\n      } else if (pathRelatedAttrs.indexOf(attr) === -1 && SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n  }\r\n\r\n  _assembleRect(attrs) {\r\n    const x = attrs.x;\r\n    const y = attrs.y;\r\n    const w = attrs.width;\r\n    const h = attrs.height;\r\n    const radius = attrs.radius;\r\n\r\n    if (!radius) {\r\n      return `M ${x},${y} l ${w},0 l 0,${h} l${-w} 0 z`;\r\n    }\r\n    const r = parseRadius(radius);\r\n    if (isArray(radius)) {\r\n      if (radius.length === 1) {\r\n        r.r1 = r.r2 = r.r3 = r.r4 = radius[0];\r\n      } else if (radius.length === 2) {\r\n        r.r1 = r.r3 = radius[0];\r\n        r.r2 = r.r4 = radius[1];\r\n      } else if (radius.length === 3) {\r\n        r.r1 = radius[0];\r\n        r.r2 = r.r4 = radius[1];\r\n        r.r3 = radius[2];\r\n      } else {\r\n        r.r1 = radius[0];\r\n        r.r2 = radius[1];\r\n        r.r3 = radius[2];\r\n        r.r4 = radius[3];\r\n      }\r\n    } else {\r\n      r.r1 = r.r2 = r.r3 = r.r4 = radius;\r\n    }\r\n    const d = [\r\n      [`M ${x + r.r1},${y}`],\r\n      [`l ${w - r.r1 - r.r2},0`],\r\n      [`a ${r.r2},${r.r2},0,0,1,${r.r2},${r.r2}`],\r\n      [`l 0,${h - r.r2 - r.r3}`],\r\n      [`a ${r.r3},${r.r3},0,0,1,${-r.r3},${r.r3}`],\r\n      [`l ${r.r3 + r.r4 - w},0`],\r\n      [`a ${r.r4},${r.r4},0,0,1,${-r.r4},${-r.r4}`],\r\n      [`l 0,${r.r4 + r.r1 - h}`],\r\n      [`a ${r.r1},${r.r1},0,0,1,${r.r1},${-r.r1}`],\r\n      ['z'],\r\n    ];\r\n    return d.join(' ');\r\n  }\r\n}\r\n\r\nexport default Rect;\r\n", "import { each, isArray, isString } from '@antv/util';\r\n\r\nconst regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi;\r\nconst regexDot = /[^\\s,]+/gi;\r\n\r\nexport function parseRadius(radius) {\r\n  let r1 = 0;\r\n  let r2 = 0;\r\n  let r3 = 0;\r\n  let r4 = 0;\r\n  if (isArray(radius)) {\r\n    if (radius.length === 1) {\r\n      r1 = r2 = r3 = r4 = radius[0];\r\n    } else if (radius.length === 2) {\r\n      r1 = r3 = radius[0];\r\n      r2 = r4 = radius[1];\r\n    } else if (radius.length === 3) {\r\n      r1 = radius[0];\r\n      r2 = r4 = radius[1];\r\n      r3 = radius[2];\r\n    } else {\r\n      r1 = radius[0];\r\n      r2 = radius[1];\r\n      r3 = radius[2];\r\n      r4 = radius[3];\r\n    }\r\n  } else {\r\n    r1 = r2 = r3 = r4 = radius;\r\n  }\r\n  return {\r\n    r1,\r\n    r2,\r\n    r3,\r\n    r4,\r\n  };\r\n}\r\n\r\nexport function parsePath(path) {\r\n  path = path || [];\r\n  if (isArray(path)) {\r\n    return path;\r\n  }\r\n\r\n  if (isString(path)) {\r\n    path = path.match(regexTags);\r\n    each(path, (item, index) => {\r\n      item = item.match(regexDot);\r\n      if (item[0].length > 1) {\r\n        const tag = item[0].charAt(0);\r\n        item.splice(1, 0, item[0].substr(1));\r\n        item[0] = tag;\r\n      }\r\n      each(item, (sub, i) => {\r\n        if (!isNaN(sub)) {\r\n          item[i] = +sub;\r\n        }\r\n      });\r\n      path[index] = item;\r\n    });\r\n    return path;\r\n  }\r\n}\r\n", "/**\r\n * @fileoverview text\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { each } from '@antv/util';\r\nimport { detect } from 'detect-browser';\r\nimport { setTransform } from '../util/svg';\r\nimport { SVG_ATTR_MAP } from '../constant';\r\nimport ShapeBase from './base';\r\n\r\nconst LETTER_SPACING = 0.3;\r\n\r\nconst BASELINE_MAP = {\r\n  top: 'before-edge',\r\n  middle: 'central',\r\n  bottom: 'after-edge',\r\n  alphabetic: 'baseline',\r\n  hanging: 'hanging',\r\n};\r\n\r\n// for FireFox\r\nconst BASELINE_MAP_FOR_FIREFOX = {\r\n  top: 'text-before-edge',\r\n  middle: 'central',\r\n  bottom: 'text-after-edge',\r\n  alphabetic: 'alphabetic',\r\n  hanging: 'hanging',\r\n};\r\n\r\nconst ANCHOR_MAP = {\r\n  left: 'left',\r\n  start: 'left',\r\n  center: 'middle',\r\n  right: 'end',\r\n  end: 'end',\r\n};\r\n\r\nclass Text extends ShapeBase {\r\n  type: string = 'text';\r\n  canFill: boolean = true;\r\n  canStroke: boolean = true;\r\n\r\n  getDefaultAttrs() {\r\n    const attrs = super.getDefaultAttrs();\r\n    return {\r\n      ...attrs,\r\n      x: 0,\r\n      y: 0,\r\n      text: null,\r\n      fontSize: 12,\r\n      fontFamily: 'sans-serif',\r\n      fontStyle: 'normal',\r\n      fontWeight: 'normal',\r\n      fontVariant: 'normal',\r\n      textAlign: 'start',\r\n      textBaseline: 'bottom',\r\n    };\r\n  }\r\n\r\n  createPath(context, targetAttrs) {\r\n    const attrs = this.attr();\r\n    const el = this.get('el');\r\n    this._setFont();\r\n    each(targetAttrs || attrs, (value, attr) => {\r\n      if (attr === 'text') {\r\n        this._setText(`${value}`);\r\n      } else if (attr === 'matrix' && value) {\r\n        setTransform(this);\r\n      } else if (SVG_ATTR_MAP[attr]) {\r\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\r\n      }\r\n    });\r\n    el.setAttribute('paint-order', 'stroke');\r\n    el.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');\r\n  }\r\n\r\n  _setFont() {\r\n    const el = this.get('el');\r\n    const { textBaseline, textAlign } = this.attr();\r\n\r\n    const browser = detect();\r\n    if (browser && browser.name === 'firefox') {\r\n      // compatible with FireFox browser, ref: https://github.com/antvis/g/issues/119\r\n      el.setAttribute('dominant-baseline', BASELINE_MAP_FOR_FIREFOX[textBaseline] || 'alphabetic');\r\n    } else {\r\n      el.setAttribute('alignment-baseline', BASELINE_MAP[textBaseline] || 'baseline');\r\n    }\r\n\r\n    el.setAttribute('text-anchor', ANCHOR_MAP[textAlign] || 'left');\r\n  }\r\n\r\n  _setText(text) {\r\n    const el = this.get('el');\r\n    const { x, textBaseline: baseline = 'bottom' } = this.attr();\r\n    if (!text) {\r\n      el.innerHTML = '';\r\n    } else if (~text.indexOf('\\n')) {\r\n      const textArr = text.split('\\n');\r\n      const textLen = textArr.length - 1;\r\n      let arr = '';\r\n      each(textArr, (segment, i: number) => {\r\n        if (i === 0) {\r\n          if (baseline === 'alphabetic') {\r\n            arr += `<tspan x=\"${x}\" dy=\"${-textLen}em\">${segment}</tspan>`;\r\n          } else if (baseline === 'top') {\r\n            arr += `<tspan x=\"${x}\" dy=\"0.9em\">${segment}</tspan>`;\r\n          } else if (baseline === 'middle') {\r\n            arr += `<tspan x=\"${x}\" dy=\"${-(textLen - 1) / 2}em\">${segment}</tspan>`;\r\n          } else if (baseline === 'bottom') {\r\n            arr += `<tspan x=\"${x}\" dy=\"-${textLen + LETTER_SPACING}em\">${segment}</tspan>`;\r\n          } else if (baseline === 'hanging') {\r\n            arr += `<tspan x=\"${x}\" dy=\"${-(textLen - 1) - LETTER_SPACING}em\">${segment}</tspan>`;\r\n          }\r\n        } else {\r\n          arr += `<tspan x=\"${x}\" dy=\"1em\">${segment}</tspan>`;\r\n        }\r\n      });\r\n      el.innerHTML = arr;\r\n    } else {\r\n      el.innerHTML = text;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Text;\r\n", "/**\r\n * @fileoverview defs\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { uniqueId } from '@antv/util';\r\nimport Gradient from './gradient';\r\nimport Shadow from './shadow';\r\nimport Arrow from './arrow';\r\nimport Clip from './clip';\r\nimport Pattern from './pattern';\r\nimport { createSVGElement } from '../util/dom';\r\n\r\nclass Defs {\r\n  id: string;\r\n  defaultArrow: {};\r\n  children: any[];\r\n  el: SVGDefsElement;\r\n  canvas: SVGSVGElement;\r\n\r\n  constructor(canvas) {\r\n    const el = createSVGElement('defs') as SVGDefsElement;\r\n    const id = uniqueId('defs_');\r\n    el.id = id;\r\n    canvas.appendChild(el);\r\n    this.children = [];\r\n    this.defaultArrow = {};\r\n    this.el = el;\r\n    this.canvas = canvas;\r\n  }\r\n\r\n  find(type, attr) {\r\n    const children = this.children;\r\n    let result = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i].match(type, attr)) {\r\n        result = children[i].id;\r\n        break;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  findById(id) {\r\n    const children = this.children;\r\n    let flag = null;\r\n    for (let i = 0; i < children.length; i++) {\r\n      if (children[i].id === id) {\r\n        flag = children[i];\r\n        break;\r\n      }\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  add(item) {\r\n    this.children.push(item);\r\n    item.canvas = this.canvas;\r\n    item.parent = this;\r\n  }\r\n\r\n  getDefaultArrow(attrs, name) {\r\n    const stroke = attrs.stroke || attrs.strokeStyle;\r\n    if (this.defaultArrow[stroke]) {\r\n      return this.defaultArrow[stroke].id;\r\n    }\r\n    const arrow = new Arrow(attrs, name);\r\n    this.defaultArrow[stroke] = arrow;\r\n    this.el.appendChild(arrow.el);\r\n    this.add(arrow);\r\n    return arrow.id;\r\n  }\r\n\r\n  addGradient(cfg) {\r\n    const gradient = new Gradient(cfg);\r\n    this.el.appendChild(gradient.el);\r\n    this.add(gradient);\r\n    return gradient.id;\r\n  }\r\n\r\n  addArrow(attrs, name) {\r\n    const arrow = new Arrow(attrs, name);\r\n    this.el.appendChild(arrow.el);\r\n    this.add(arrow);\r\n    return arrow.id;\r\n  }\r\n\r\n  addShadow(cfg) {\r\n    const shadow = new Shadow(cfg);\r\n    this.el.appendChild(shadow.el);\r\n    this.add(shadow);\r\n    return shadow.id;\r\n  }\r\n\r\n  addPattern(cfg) {\r\n    const pattern = new Pattern(cfg);\r\n    this.el.appendChild(pattern.el);\r\n    this.add(pattern);\r\n    return pattern.id;\r\n  }\r\n\r\n  addClip(cfg) {\r\n    const clip = new Clip(cfg);\r\n    this.el.appendChild(clip.el);\r\n    this.add(clip);\r\n    return clip.id;\r\n  }\r\n}\r\n\r\nexport default Defs;\r\n", "/**\r\n * @fileoverview gradient\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { each, mod, toRadian, uniqueId } from '@antv/util';\r\nimport { createSVGElement } from '../util/dom';\r\n\r\nconst regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\r\nconst regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\r\nconst regexColorStop = /[\\d.]+:(#[^\\s]+|[^)]+\\))/gi;\r\n\r\nfunction addStop(steps) {\r\n  const arr = steps.match(regexColorStop);\r\n  if (!arr) {\r\n    return '';\r\n  }\r\n  let stops = '';\r\n  arr.sort((a, b) => {\r\n    a = a.split(':');\r\n    b = b.split(':');\r\n    return Number(a[0]) - Number(b[0]);\r\n  });\r\n  each(arr, (item: any) => {\r\n    item = item.split(':');\r\n    stops += `<stop offset=\"${item[0]}\" stop-color=\"${item[1]}\"></stop>`;\r\n  });\r\n  return stops;\r\n}\r\n\r\nfunction parseLineGradient(color, el) {\r\n  const arr = regexLG.exec(color);\r\n  const angle = mod(toRadian(parseFloat(arr[1])), Math.PI * 2);\r\n  const steps = arr[2];\r\n  let start;\r\n  let end;\r\n\r\n  if (angle >= 0 && angle < 0.5 * Math.PI) {\r\n    start = {\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n    end = {\r\n      x: 1,\r\n      y: 1,\r\n    };\r\n  } else if (0.5 * Math.PI <= angle && angle < Math.PI) {\r\n    start = {\r\n      x: 1,\r\n      y: 0,\r\n    };\r\n    end = {\r\n      x: 0,\r\n      y: 1,\r\n    };\r\n  } else if (Math.PI <= angle && angle < 1.5 * Math.PI) {\r\n    start = {\r\n      x: 1,\r\n      y: 1,\r\n    };\r\n    end = {\r\n      x: 0,\r\n      y: 0,\r\n    };\r\n  } else {\r\n    start = {\r\n      x: 0,\r\n      y: 1,\r\n    };\r\n    end = {\r\n      x: 1,\r\n      y: 0,\r\n    };\r\n  }\r\n\r\n  const tanTheta = Math.tan(angle);\r\n  const tanTheta2 = tanTheta * tanTheta;\r\n\r\n  const x = (end.x - start.x + tanTheta * (end.y - start.y)) / (tanTheta2 + 1) + start.x;\r\n  const y = (tanTheta * (end.x - start.x + tanTheta * (end.y - start.y))) / (tanTheta2 + 1) + start.y;\r\n  el.setAttribute('x1', start.x);\r\n  el.setAttribute('y1', start.y);\r\n  el.setAttribute('x2', x);\r\n  el.setAttribute('y2', y);\r\n  el.innerHTML = addStop(steps);\r\n}\r\n\r\nfunction parseRadialGradient(color, self) {\r\n  const arr = regexRG.exec(color);\r\n  const cx = parseFloat(arr[1]);\r\n  const cy = parseFloat(arr[2]);\r\n  const r = parseFloat(arr[3]);\r\n  const steps = arr[4];\r\n  self.setAttribute('cx', cx);\r\n  self.setAttribute('cy', cy);\r\n  self.setAttribute('r', r);\r\n  self.innerHTML = addStop(steps);\r\n}\r\n\r\nclass Gradient {\r\n  el: SVGGradientElement;\r\n  id: string;\r\n  cfg: {\r\n    [key: string]: any;\r\n  } = {};\r\n\r\n  constructor(cfg) {\r\n    let el = null;\r\n    const id = uniqueId('gradient_');\r\n    if (cfg.toLowerCase()[0] === 'l') {\r\n      el = createSVGElement('linearGradient');\r\n      parseLineGradient(cfg, el);\r\n    } else {\r\n      el = createSVGElement('radialGradient');\r\n      parseRadialGradient(cfg, el);\r\n    }\r\n    el.setAttribute('id', id);\r\n    this.el = el;\r\n    this.id = id;\r\n    this.cfg = cfg;\r\n    return this;\r\n  }\r\n\r\n  match(type, attr) {\r\n    return this.cfg === attr;\r\n  }\r\n}\r\n\r\nexport default Gradient;\r\n", "/**\r\n * @fileoverview shadow\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { each, uniqueId } from '@antv/util';\r\nimport { createSVGElement } from '../util/dom';\r\n\r\nconst ATTR_MAP = {\r\n  shadowColor: 'color',\r\n  shadowOpacity: 'opacity',\r\n  shadowBlur: 'blur',\r\n  shadowOffsetX: 'dx',\r\n  shadowOffsetY: 'dy',\r\n};\r\n\r\nconst SHADOW_DIMENSION = {\r\n  x: '-40%',\r\n  y: '-40%',\r\n  width: '200%',\r\n  height: '200%',\r\n};\r\n\r\nclass Shadow {\r\n  type: string = 'filter';\r\n  id: string;\r\n  el: SVGFilterElement;\r\n  cfg: {\r\n    [key: string]: any;\r\n  } = {};\r\n\r\n  constructor(cfg) {\r\n    this.type = 'filter';\r\n    const el = createSVGElement('filter') as SVGFilterElement;\r\n    // expand the filter region to fill in shadows\r\n    each(SHADOW_DIMENSION, (v, k) => {\r\n      el.setAttribute(k, v);\r\n    });\r\n    this.el = el;\r\n    this.id = uniqueId('filter_');\r\n    this.el.id = this.id;\r\n    this.cfg = cfg;\r\n    this._parseShadow(cfg, el);\r\n    return this;\r\n  }\r\n\r\n  match(type, cfg) {\r\n    if (this.type !== type) {\r\n      return false;\r\n    }\r\n    let flag = true;\r\n    const config = this.cfg;\r\n    each(Object.keys(config), (attr) => {\r\n      if (config[attr] !== cfg[attr]) {\r\n        flag = false;\r\n        return false;\r\n      }\r\n    });\r\n    return flag;\r\n  }\r\n\r\n  update(name, value) {\r\n    const config = this.cfg;\r\n    config[ATTR_MAP[name]] = value;\r\n    this._parseShadow(config, this.el);\r\n    return this;\r\n  }\r\n\r\n  _parseShadow(config, el) {\r\n    const child = `<feDropShadow\r\n      dx=\"${config.dx || 0}\"\r\n      dy=\"${config.dy || 0}\"\r\n      stdDeviation=\"${config.blur ? config.blur / 10 : 0}\"\r\n      flood-color=\"${config.color ? config.color : '#000'}\"\r\n      flood-opacity=\"${config.opacity ? config.opacity : 1}\"\r\n      />`;\r\n    el.innerHTML = child;\r\n  }\r\n}\r\n\r\nexport default Shadow;\r\n", "/**\r\n * @fileoverview arrow\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { isArray, uniqueId } from '@antv/util';\r\nimport { createSVGElement } from '../util/dom';\r\n\r\nclass Arrow {\r\n  id: string;\r\n  el: SVGMarkerElement;\r\n  child: SVGPathElement | any; // TODO G.Shape, not any\r\n  stroke: string;\r\n  cfg: {\r\n    [key: string]: any;\r\n  } = {};\r\n\r\n  constructor(attrs, type) {\r\n    const el = createSVGElement('marker') as SVGMarkerElement;\r\n    const id = uniqueId('marker_');\r\n    el.setAttribute('id', id);\r\n    const shape = createSVGElement('path');\r\n    shape.setAttribute('stroke', attrs.stroke || 'none');\r\n    shape.setAttribute('fill', attrs.fill || 'none');\r\n    el.appendChild(shape);\r\n    el.setAttribute('overflow', 'visible');\r\n    el.setAttribute('orient', 'auto-start-reverse');\r\n    this.el = el;\r\n    this.child = shape;\r\n    this.id = id;\r\n    const cfg = attrs[type === 'marker-start' ? 'startArrow' : 'endArrow'];\r\n    this.stroke = attrs.stroke || '#000';\r\n    if (cfg === true) {\r\n      this._setDefaultPath(type, shape);\r\n    } else {\r\n      this.cfg = cfg; // when arrow config exists\r\n      this._setMarker(attrs.lineWidth, shape);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  match() {\r\n    return false;\r\n  }\r\n\r\n  _setDefaultPath(type, el) {\r\n    const parent = this.el;\r\n    // 默认箭头的边长为 10，夹角为 60 度\r\n    el.setAttribute('d', `M0,0 L${10 * Math.cos(Math.PI / 6)},5 L0,10`);\r\n    parent.setAttribute('refX', `${10 * Math.cos(Math.PI / 6)}`);\r\n    parent.setAttribute('refY', `${5}`);\r\n  }\r\n\r\n  _setMarker(r, el) {\r\n    const parent = this.el;\r\n    let path = this.cfg.path;\r\n    const d = this.cfg.d;\r\n\r\n    if (isArray(path)) {\r\n      path = path\r\n        .map((segment) => {\r\n          return segment.join(' ');\r\n        })\r\n        .join('');\r\n    }\r\n    el.setAttribute('d', path);\r\n    parent.appendChild(el);\r\n    if (d) {\r\n      parent.setAttribute('refX', `${d / r}`);\r\n    }\r\n  }\r\n\r\n  update(fill) {\r\n    const child = this.child;\r\n    if (child.attr) {\r\n      child.attr('fill', fill);\r\n    } else {\r\n      child.setAttribute('fill', fill);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Arrow;\r\n", "/**\r\n * @fileoverview clip\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { uniqueId } from '@antv/util';\r\nimport { createSVGElement } from '../util/dom';\r\n\r\nclass Clip {\r\n  type: string = 'clip';\r\n  id: string;\r\n  el: SVGClipPathElement;\r\n  cfg: {\r\n    [key: string]: any;\r\n  } = {};\r\n\r\n  constructor(cfg) {\r\n    const el = createSVGElement('clipPath') as SVGClipPathElement;\r\n    this.el = el;\r\n    this.id = uniqueId('clip_');\r\n    el.id = this.id;\r\n    const shapeEl = cfg.cfg.el;\r\n    el.appendChild(shapeEl);\r\n    this.cfg = cfg;\r\n    return this;\r\n  }\r\n\r\n  match() {\r\n    return false;\r\n  }\r\n\r\n  remove() {\r\n    const el = this.el;\r\n    el.parentNode.removeChild(el);\r\n  }\r\n}\r\n\r\nexport default Clip;\r\n", "/**\r\n * @fileoverview pattern\r\n * @author dengfuping_develop@163.com\r\n */\r\n\r\nimport { uniqueId } from '@antv/util';\r\nimport { createSVGElement } from '../util/dom';\r\n\r\nconst regexPR = /^p\\s*\\(\\s*([axyn])\\s*\\)\\s*(.*)/i;\r\n\r\nclass Pattern {\r\n  el: SVGPatternElement;\r\n  id: string;\r\n  cfg: {\r\n    [key: string]: any;\r\n  } = {};\r\n\r\n  constructor(cfg) {\r\n    const el = createSVGElement('pattern') as SVGPatternElement;\r\n    el.setAttribute('patternUnits', 'userSpaceOnUse');\r\n    const child = createSVGElement('image');\r\n    el.appendChild(child);\r\n    const id = uniqueId('pattern_');\r\n    el.id = id;\r\n    this.el = el;\r\n    this.id = id;\r\n    this.cfg = cfg;\r\n    const arr = regexPR.exec(cfg);\r\n    const source = arr[2];\r\n    child.setAttribute('href', source);\r\n    const img = new Image();\r\n    if (!source.match(/^data:/i)) {\r\n      img.crossOrigin = 'Anonymous';\r\n    }\r\n    img.src = source;\r\n    function onload() {\r\n      el.setAttribute('width', `${img.width}`);\r\n      el.setAttribute('height', `${img.height}`);\r\n    }\r\n    if (img.complete) {\r\n      onload();\r\n    } else {\r\n      img.onload = onload;\r\n      // Fix onload() bug in IE9\r\n      img.src = img.src;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  match(type, attr) {\r\n    return this.cfg === attr;\r\n  }\r\n}\r\n\r\nexport default Pattern;\r\n", "import { AbstractCanvas, IShape } from '@antv/g-base';\r\nimport { ChangeType } from '@antv/g-base';\r\nimport { IElement } from './interfaces';\r\nimport { SHAPE_TO_TAGS } from './constant';\r\nimport { drawChildren } from './util/draw';\r\nimport { setTransform, setClip } from './util/svg';\r\nimport { sortDom, createSVGElement } from './util/dom';\r\nimport * as Shape from './shape';\r\nimport Group from './group';\r\nimport Defs from './defs';\r\n\r\nclass Canvas extends AbstractCanvas {\r\n  constructor(cfg) {\r\n    super({\r\n      ...cfg,\r\n      autoDraw: true,\r\n      // 设置渲染引擎为 canvas，只读属性\r\n      renderer: 'svg',\r\n    });\r\n  }\r\n\r\n  getShapeBase() {\r\n    return Shape;\r\n  }\r\n\r\n  getGroupBase() {\r\n    return Group;\r\n  }\r\n\r\n  // 覆盖 Container 中通过遍历的方式获取 shape 对象的逻辑，直接走 SVG 的 dom 拾取即可\r\n  getShape(x: number, y: number, ev: Event): IShape {\r\n    let target = <Element>ev.target || <Element>ev.srcElement;\r\n    if (!SHAPE_TO_TAGS[target.tagName]) {\r\n      let parent = <Element>target.parentNode;\r\n      while (parent && !SHAPE_TO_TAGS[parent.tagName]) {\r\n        parent = <Element>parent.parentNode;\r\n      }\r\n      target = parent;\r\n    }\r\n    return this.find((child) => child.get('el') === target) as IShape;\r\n  }\r\n\r\n  // 复写基类的方法生成标签\r\n  createDom() {\r\n    const element = createSVGElement('svg') as SVGSVGElement;\r\n    const context = new Defs(element);\r\n    element.setAttribute('width', `${this.get('width')}`);\r\n    element.setAttribute('height', `${this.get('height')}`);\r\n    // 缓存 context 对象\r\n    this.set('context', context);\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * 一些方法调用会引起画布变化\r\n   * @param {ChangeType} changeType 改变的类型\r\n   */\r\n  onCanvasChange(changeType: ChangeType) {\r\n    const context = this.get('context');\r\n    const el = this.get('el');\r\n    if (changeType === 'sort') {\r\n      const children = this.get('children');\r\n      if (children && children.length) {\r\n        sortDom(this, (a: IElement, b: IElement) => {\r\n          return children.indexOf(a) - children.indexOf(b) ? 1 : 0;\r\n        });\r\n      }\r\n    } else if (changeType === 'clear') {\r\n      // el maybe null for canvas\r\n      if (el) {\r\n        // 清空 SVG 元素\r\n        el.innerHTML = '';\r\n        const defsEl = context.el;\r\n        // 清空 defs 元素\r\n        defsEl.innerHTML = '';\r\n        // 将清空后的 defs 元素挂载到 el 下\r\n        el.appendChild(defsEl);\r\n      }\r\n    } else if (changeType === 'matrix') {\r\n      setTransform(this);\r\n    } else if (changeType === 'clip') {\r\n      setClip(this, context);\r\n    } else if (changeType === 'changeSize') {\r\n      el.setAttribute('width', `${this.get('width')}`);\r\n      el.setAttribute('height', `${this.get('height')}`);\r\n    }\r\n  }\r\n\r\n  // 复写基类的 draw 方法\r\n  draw() {\r\n    const context = this.get('context');\r\n    const children = this.getChildren() as IElement[];\r\n    setClip(this, context);\r\n    if (children.length) {\r\n      drawChildren(context, children);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n", "import * as Shape from './shape';\r\n\r\nexport * from '@antv/g-base';\r\nexport { IElement, IGroup, IShape } from './interfaces';\r\nexport { default as Canvas } from './canvas';\r\nexport { default as Group } from './group';\r\nexport { Shape };\r\n\r\nexport const version = '0.5.6';\r\n", "/**\r\n * 创建DOM 节点\r\n * @param  {String} str Dom 字符串\r\n * @return {HTMLElement}  DOM 节点\r\n */\r\n\r\nlet TABLE:HTMLTableElement;\r\nlet TABLE_TR:HTMLTableRowElement;\r\nlet FRAGMENT_REG:RegExp;\r\nlet CONTAINERS:{\r\n  '*': HTMLDivElement;\r\n  [key:string]: any;\r\n};\r\n\r\nfunction initConstants() {\r\n  TABLE = document.createElement('table');\r\n  TABLE_TR = document.createElement('tr');\r\n  FRAGMENT_REG = /^\\s*<(\\w+|!)[^>]*>/;\r\n  CONTAINERS = {\r\n    tr: document.createElement('tbody'),\r\n    tbody: TABLE,\r\n    thead: TABLE,\r\n    tfoot: TABLE,\r\n    td: TABLE_TR,\r\n    th: TABLE_TR,\r\n    '*': document.createElement('div'),\r\n  };\r\n}\r\n\r\nexport default function createDom(str:string): any {\r\n  if (!TABLE) {\r\n    initConstants();\r\n  }\r\n  let name = FRAGMENT_REG.test(str) && RegExp.$1;\r\n  if (!name || !(name in CONTAINERS)) {\r\n    name = '*';\r\n  }\r\n  const container = CONTAINERS[name];\r\n  str = typeof str === 'string' ? str.replace(/(^\\s*)|(\\s*$)/g, '') : str;\r\n  container.innerHTML = '' + str;\r\n  const dom = container.childNodes[0];\r\n  if (dom && container.contains(dom)) {\r\n    container.removeChild(dom);\r\n  }\r\n  return dom;\r\n}\r\n", "export default function addEventListener(target: HTMLElement, eventType: string, callback: any) {\r\n  if (target) {\r\n    if (typeof target.addEventListener === 'function') {\r\n      target.addEventListener(eventType, callback, false);\r\n      return {\r\n        remove() {\r\n          target.removeEventListener(eventType, callback, false);\r\n        },\r\n      };\r\n      // @ts-ignore\r\n    }  if (typeof target.attachEvent === 'function') {\r\n      // @ts-ignore\r\n      target.attachEvent('on' + eventType, callback);\r\n      return {\r\n        remove() {\r\n          // @ts-ignore\r\n          target.detachEvent('on' + eventType, callback);\r\n        },\r\n      };\r\n    }\r\n  }\r\n}\r\n", "/**\r\n * 获取样式\r\n * @param  {Object} dom DOM节点\r\n * @param  {String} name 样式名\r\n * @param  {Any} defaultValue 默认值\r\n * @return {String} 属性值\r\n */\r\nexport default function getStyle(dom: HTMLElement, name: string, defaultValue?: any) {\r\n  let v;\r\n  try {\r\n    v = window.getComputedStyle ?\r\n      window.getComputedStyle(dom, null)[name] :\r\n      dom.style[name]; // 一般不会走到这个逻辑，dom.style 获取的是标签 style 属性，也不准确\r\n  } catch (e) {\r\n    // do nothing\r\n  } finally {\r\n    v = v === undefined ? defaultValue : v;\r\n  }\r\n  return v;\r\n}\r\n", "import getStyle from './get-style';\r\n\r\nexport default function getHeight(el: HTMLElement, defaultValue?: any): number {\r\n  let height = getStyle(el, 'height', defaultValue);\r\n  if (height === 'auto') {\r\n    height = el.offsetHeight;\r\n  }\r\n  return parseFloat(height);\r\n}\r\n", "\r\nimport getStyle from './get-style';\r\nimport getHeight from './get-height';\r\n\r\nexport default function getOuterHeight(el: HTMLElement, defaultValue?: any): number {\r\n  const height = getHeight(el, defaultValue);\r\n  const bTop = parseFloat(getStyle(el, 'borderTopWidth')) || 0;\r\n  const pTop = parseFloat(getStyle(el, 'paddingTop')) || 0;\r\n  const pBottom = parseFloat(getStyle(el, 'paddingBottom')) || 0;\r\n  const bBottom = parseFloat(getStyle(el, 'borderBottomWidth')) || 0;\r\n  const mTop = parseFloat(getStyle(el, 'marginTop')) || 0;\r\n  const mBottom = parseFloat(getStyle(el, 'marginBottom')) || 0;\r\n  return height + bTop + bBottom + pTop + pBottom + mTop + mBottom;\r\n}\r\n", "import getStyle from './get-style';\r\n\r\nexport default function getHeight(el: HTMLElement, defaultValue?: any): number {\r\n  let width = getStyle(el, 'width', defaultValue);\r\n  if (width === 'auto') {\r\n    width = el.offsetWidth;\r\n  }\r\n  return parseFloat(width);\r\n}\r\n", "\r\nimport getStyle from './get-style';\r\nimport getWidth from './get-width';\r\n\r\nexport default function getOuterWidth(el: HTMLElement, defaultValue?: any): number {\r\n  const width = getWidth(el, defaultValue);\r\n  const bLeft = parseFloat(getStyle(el, 'borderLeftWidth')) || 0;\r\n  const pLeft = parseFloat(getStyle(el, 'paddingLeft')) || 0;\r\n  const pRight = parseFloat(getStyle(el, 'paddingRight')) || 0;\r\n  const bRight = parseFloat(getStyle(el, 'borderRightWidth')) || 0;\r\n  const mRight = parseFloat(getStyle(el, 'marginRight')) || 0;\r\n  const mLeft = parseFloat(getStyle(el, 'marginLeft')) || 0;\r\n  return width + bLeft + bRight + pLeft + pRight + mLeft + mRight;\r\n}\r\n", "export default function modifyCSS(dom: HTMLElement, css: { [key:string]: any }): HTMLElement {\r\n  if (dom) {\r\n    for (const key in css) {\r\n      if (css.hasOwnProperty(key)) {\r\n        dom.style[key] = css[key];\r\n      }\r\n    }\r\n  }\r\n  return dom;\r\n}\r\n", "import { assign, isEmpty, isFunction, isNil, isNumber, isObject, isString, map } from '@antv/util';\r\nimport { getTickMethod } from './tick-method/register';\r\nimport { ScaleConfig, Tick } from './types';\r\nexport default abstract class Scale {\r\n  /**\r\n   * 度量的类型\r\n   */\r\n  public type: string = 'base';\r\n  /**\r\n   * 是否分类类型的度量\r\n   */\r\n  public isCategory?: boolean = false;\r\n  /**\r\n   * 是否线性度量，有linear, time 度量\r\n   */\r\n  public isLinear?: boolean = false;\r\n  /**\r\n   * 是否连续类型的度量，linear,time,log, pow, quantile, quantize 都支持\r\n   */\r\n  public isContinuous?: boolean = false;\r\n  /**\r\n   * 是否是常量的度量，传入和传出一致\r\n   */\r\n  public isIdentity: boolean = false;\r\n\r\n  public field?: ScaleConfig['field'];\r\n  public alias?: ScaleConfig['alias'];\r\n  public values: ScaleConfig['values'] = [];\r\n  public min?: ScaleConfig['min'];\r\n  public max?: ScaleConfig['max'];\r\n  public minLimit?: ScaleConfig['minLimit'];\r\n  public maxLimit?: ScaleConfig['maxLimit'];\r\n  public range: ScaleConfig['range'] = [0, 1];\r\n  public ticks: ScaleConfig['ticks'] = [];\r\n  public tickCount: ScaleConfig['tickCount'];\r\n  public tickInterval: ScaleConfig['tickInterval'];\r\n  public formatter?: ScaleConfig['formatter'];\r\n  public tickMethod?: ScaleConfig['tickMethod'];\r\n  protected __cfg__: ScaleConfig; // 缓存的旧配置, 用于 clone\r\n\r\n  constructor(cfg: ScaleConfig) {\r\n    this.__cfg__ = cfg;\r\n    this.initCfg();\r\n    this.init();\r\n  }\r\n\r\n  // 对于原始值的必要转换，如分类、时间字段需转换成数值，用transform/map命名可能更好\r\n  public translate(v: any) {\r\n    return v;\r\n  }\r\n\r\n  /** 将定义域转换为值域 */\r\n  public abstract scale(value: any): number;\r\n\r\n  /** 将值域转换为定义域 */\r\n  public abstract invert(scaled: number): any;\r\n\r\n  /** 重新初始化 */\r\n  public change(cfg: ScaleConfig) {\r\n    // 覆盖配置项，而不替代\r\n    assign(this.__cfg__, cfg);\r\n    this.init();\r\n  }\r\n\r\n  public clone(): Scale {\r\n    return this.constructor(this.__cfg__);\r\n  }\r\n\r\n  /** 获取坐标轴需要的ticks */\r\n  public getTicks(): Tick[] {\r\n    return map(this.ticks, (tick: any, idx: number) => {\r\n      if (isObject(tick)) {\r\n        // 仅当符合Tick类型时才有意义\r\n        return tick as Tick;\r\n      }\r\n      return {\r\n        text: this.getText(tick, idx),\r\n        tickValue: tick, // 原始value\r\n        value: this.scale(tick), // scaled\r\n      };\r\n    });\r\n  }\r\n\r\n  /** 获取Tick的格式化结果 */\r\n  public getText(value: any, key?: number): string {\r\n    const formatter = this.formatter;\r\n    const res = formatter ? formatter(value, key) : value;\r\n    if (isNil(res) || !isFunction(res.toString)) {\r\n      return '';\r\n    }\r\n    return res.toString();\r\n  }\r\n\r\n  // 获取配置项中的值，当前 scale 上的值可能会被修改\r\n  protected getConfig(key) {\r\n    return this.__cfg__[key];\r\n  }\r\n\r\n  // scale初始化\r\n  protected init(): void {\r\n    assign(this, this.__cfg__);\r\n    this.setDomain();\r\n    if (isEmpty(this.getConfig('ticks'))) {\r\n      this.ticks = this.calculateTicks();\r\n    }\r\n  }\r\n\r\n  // 子类上覆盖某些属性，不能直接在类上声明，否则会被覆盖\r\n  protected initCfg() {}\r\n\r\n  protected setDomain(): void {}\r\n\r\n  protected calculateTicks(): any[] {\r\n    const tickMethod = this.tickMethod;\r\n    let ticks = [];\r\n    if (isString(tickMethod)) {\r\n      const method = getTickMethod(tickMethod);\r\n      if (!method) {\r\n        throw new Error('There is no method to to calculate ticks!');\r\n      }\r\n      ticks = method(this);\r\n    } else if (isFunction(tickMethod)) {\r\n      ticks = tickMethod(this);\r\n    }\r\n    return ticks;\r\n  }\r\n\r\n  // range 的最小值\r\n  protected rangeMin() {\r\n    return this.range[0];\r\n  }\r\n\r\n  // range 的最大值\r\n  protected rangeMax() {\r\n    return this.range[1];\r\n  }\r\n\r\n  /** 定义域转 0~1 */\r\n  protected calcPercent(value: any, min: number, max: number): number {\r\n    if (isNumber(value)) {\r\n      return (value - min) / (max - min);\r\n    }\r\n    return NaN;\r\n  }\r\n\r\n  /** 0~1转定义域 */\r\n  protected calcValue(percent: number, min: number, max: number): number {\r\n    return min + percent * (max - min);\r\n  }\r\n}\r\n", "import { TickMethod } from '../types';\r\ninterface MethodMap {\r\n  [key: string]: TickMethod;\r\n}\r\nconst methodCache: MethodMap = {};\r\n\r\n/**\r\n * 获取计算 ticks 的方法\r\n * @param key 键值\r\n * @returns 计算 ticks 的方法\r\n */\r\nexport function getTickMethod(key: string): TickMethod {\r\n  return methodCache[key];\r\n}\r\n\r\n/**\r\n * 注册计算 ticks 的方法\r\n * @param key 键值\r\n * @param method 方法\r\n */\r\nexport function registerTickMethod(key: string, method: TickMethod) {\r\n  methodCache[key] = method;\r\n}\r\n", "import { indexOf, isNil, isNumber } from '@antv/util';\r\nimport Base from '../base';\r\n\r\n/**\r\n * 分类度量\r\n * @class\r\n */\r\nclass Category extends Base {\r\n  public readonly type: string = 'cat';\r\n  public readonly isCategory: boolean = true;\r\n\r\n  // 用于缓存 translate 函数\r\n  private translateIndexMap;\r\n\r\n  private buildIndexMap() {\r\n    if (!this.translateIndexMap) {\r\n      this.translateIndexMap = new Map();\r\n      // 重新构建缓存\r\n      for (let i = 0; i < this.values.length; i ++) {\r\n        this.translateIndexMap.set(this.values[i], i);\r\n      }\r\n    }\r\n  }\r\n\r\n  public translate(value: any): number {\r\n    // 按需构建 map\r\n    this.buildIndexMap();\r\n    // 找得到\r\n    let idx = this.translateIndexMap.get(value);\r\n    \r\n    if (idx === undefined) {\r\n      idx = isNumber(value) ? value : NaN;\r\n    }\r\n    return idx;\r\n  }\r\n\r\n  public scale(value: any): number {\r\n    const order = this.translate(value);\r\n    // 分类数据允许 0.5 范围内调整\r\n    // if (order < this.min - 0.5 || order > this.max + 0.5) {\r\n    //   return NaN;\r\n    // }\r\n    const percent = this.calcPercent(order, this.min, this.max);\r\n    return this.calcValue(percent, this.rangeMin(), this.rangeMax());\r\n  }\r\n\r\n  public invert(scaledValue: number) {\r\n    const domainRange = this.max - this.min;\r\n    const percent = this.calcPercent(scaledValue, this.rangeMin(), this.rangeMax());\r\n    const idx = Math.round(domainRange * percent) + this.min;\r\n    if (idx < this.min || idx > this.max) {\r\n      return NaN;\r\n    }\r\n    return this.values[idx];\r\n  }\r\n\r\n  public getText(value: any, ...args: any[]): string {\r\n    let v = value;\r\n    // value为index\r\n    if (isNumber(value) && !this.values.includes(value)) {\r\n      v = this.values[v];\r\n    }\r\n    return super.getText(v, ...args);\r\n  }\r\n  // 复写属性\r\n  protected initCfg() {\r\n    this.tickMethod = 'cat';\r\n  }\r\n  // 设置 min, max\r\n  protected setDomain() {\r\n    // 用户有可能设置 min\r\n    if (isNil(this.getConfig('min'))) {\r\n      this.min = 0;\r\n    }\r\n    if (isNil(this.getConfig('max'))) {\r\n      const size = this.values.length;\r\n      this.max = size > 1 ? size - 1 : size;\r\n    }\r\n\r\n    // scale.init 的时候清除缓存\r\n    if (this.translateIndexMap) {\r\n      this.translateIndexMap = undefined;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Category;\r\n", "import { each, isNumber } from '@antv/util';\r\nimport { timeFormat, toTimeStamp } from '../util/time';\r\nimport Category from './base';\r\n\r\n/**\r\n * 时间分类度量\r\n * @class\r\n */\r\nclass TimeCat extends Category {\r\n  public readonly type: string = 'timeCat';\r\n  public mask;\r\n  /**\r\n   * @override\r\n   */\r\n  public translate(value) {\r\n    value = toTimeStamp(value);\r\n    let index = this.values.indexOf(value);\r\n    if (index === -1) {\r\n      if (isNumber(value) && value < this.values.length) {\r\n        index = value;\r\n      } else {\r\n        index = NaN;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * 由于时间类型数据需要转换一下，所以复写 getText\r\n   * @override\r\n   */\r\n  public getText(value: string | number, tickIndex?: number) {\r\n    const index = this.translate(value);\r\n    if (index > -1) {\r\n      let result = this.values[index];\r\n      const formatter = this.formatter;\r\n      result = formatter ? formatter(result, tickIndex) : timeFormat(result, this.mask);\r\n      return result;\r\n    }\r\n    return value;\r\n  }\r\n  protected initCfg() {\r\n    this.tickMethod = 'time-cat';\r\n    this.mask = 'YYYY-MM-DD';\r\n    this.tickCount = 7; // 一般时间数据会显示 7， 14， 30 天的数字\r\n  }\r\n\r\n  protected setDomain() {\r\n    const values = this.values;\r\n    // 针对时间分类类型，会将时间统一转换为时间戳\r\n    each(values, (v, i) => {\r\n      values[i] = toTimeStamp(v);\r\n    });\r\n    values.sort((v1, v2) => {\r\n      return v1 - v2;\r\n    });\r\n    super.setDomain();\r\n  }\r\n}\r\n\r\nexport default TimeCat;\r\n", "import { isDate, isString, last } from '@antv/util';\r\nimport fecha from 'fecha';\r\nimport * as fecha1 from 'fecha';\r\n\r\nimport bisector from './bisector';\r\nconst FORMAT_METHOD = 'format';\r\n\r\nexport function timeFormat(time, mask) { // 由于 fecha 包的 typescript 定义有问题，所以暂时兼容一下\r\n  const method = fecha1[FORMAT_METHOD] || fecha[FORMAT_METHOD];\r\n  return method(time, mask);\r\n}\r\n/**\r\n * 转换成时间戳\r\n * @param value 时间值\r\n */\r\nexport function toTimeStamp(value: any): number {\r\n  if (isString(value)) {\r\n    if (value.indexOf('T') > 0) {\r\n      value = new Date(value).getTime();\r\n    } else {\r\n      // new Date('2010/01/10') 和 new Date('2010-01-10') 的差别在于:\r\n      // 如果仅有年月日时，前者是带有时区的: Fri Jan 10 2020 02:40:13 GMT+0800 (中国标准时间)\r\n      // 后者会格式化成 Sun Jan 10 2010 08:00:00 GMT+0800 (中国标准时间)\r\n      value = new Date(value.replace(/-/gi, '/')).getTime();\r\n    }\r\n  }\r\n  if (isDate(value)) {\r\n    value = value.getTime();\r\n  }\r\n  return value;\r\n}\r\n\r\nconst SECOND = 1000;\r\nconst MINUTE = 60 * SECOND;\r\nconst HOUR = 60 * MINUTE;\r\nconst DAY = 24 * HOUR;\r\nconst MONTH = DAY * 31;\r\nconst YEAR = DAY * 365;\r\n\r\nexport { SECOND, MINUTE, HOUR, DAY, MONTH, YEAR };\r\ntype Interval = [string, number]; // [defaultMomentFormat, interval]\r\nconst intervals: Interval[] = [\r\n  ['HH:mm:ss', SECOND],\r\n  ['HH:mm:ss', SECOND * 10],\r\n  ['HH:mm:ss', SECOND * 30],\r\n  ['HH:mm', MINUTE],\r\n  ['HH:mm', MINUTE * 10],\r\n  ['HH:mm', MINUTE * 30],\r\n  ['HH', HOUR],\r\n  ['HH', HOUR * 6],\r\n  ['HH', HOUR * 12],\r\n  ['YYYY-MM-DD', DAY],\r\n  ['YYYY-MM-DD', DAY * 4],\r\n  ['YYYY-WW', DAY * 7],\r\n  ['YYYY-MM', MONTH],\r\n  ['YYYY-MM', MONTH * 4],\r\n  ['YYYY-MM', MONTH * 6],\r\n  ['YYYY', DAY * 380], // 借鉴echarts，保证每个周期累加时不会碰到恰巧不够的问题\r\n];\r\n\r\nexport function getTickInterval(min: number, max: number, tickCount: number): Interval {\r\n  const target = (max - min) / tickCount;\r\n  const idx = bisector((o: Interval) => o[1])(intervals, target) - 1;\r\n  let interval: Interval = intervals[idx];\r\n  if (idx < 0) {\r\n    interval = intervals[0];\r\n  } else if (idx >= intervals.length) {\r\n    interval = last(intervals);\r\n  }\r\n  return interval;\r\n}\r\n", "const token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|Z|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\nconst twoDigitsOptional = \"\\\\d\\\\d?\";\nconst twoDigits = \"\\\\d\\\\d\";\nconst threeDigits = \"\\\\d{3}\";\nconst fourDigits = \"\\\\d{4}\";\nconst word = \"[^\\\\s]+\";\nconst literal = /\\[([^]*?)\\]/gm;\n\ntype DateInfo = {\n  year: number;\n  month: number;\n  day: number;\n  hour: number;\n  minute: number;\n  second: number;\n  millisecond: number;\n  isPm: number | null;\n  timezoneOffset: number | null;\n};\n\nexport type I18nSettings = {\n  amPm: [string, string];\n  dayNames: Days;\n  dayNamesShort: Days;\n  monthNames: Months;\n  monthNamesShort: Months;\n  DoFn(dayOfMonth: number): string;\n};\n\nexport type I18nSettingsOptional = Partial<I18nSettings>;\n\nexport type Days = [string, string, string, string, string, string, string];\nexport type Months = [\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string\n];\n\nfunction shorten<T extends string[]>(arr: T, sLen: number): string[] {\n  const newArr: string[] = [];\n  for (let i = 0, len = arr.length; i < len; i++) {\n    newArr.push(arr[i].substr(0, sLen));\n  }\n  return newArr;\n}\n\nconst monthUpdate = (\n  arrName: \"monthNames\" | \"monthNamesShort\" | \"dayNames\" | \"dayNamesShort\"\n) => (v: string, i18n: I18nSettings): number | null => {\n  const lowerCaseArr = i18n[arrName].map(v => v.toLowerCase());\n  const index = lowerCaseArr.indexOf(v.toLowerCase());\n  if (index > -1) {\n    return index;\n  }\n  return null;\n};\n\nexport function assign<A>(a: A): A;\nexport function assign<A, B>(a: A, b: B): A & B;\nexport function assign<A, B, C>(a: A, b: B, c: C): A & B & C;\nexport function assign<A, B, C, D>(a: A, b: B, c: C, d: D): A & B & C & D;\nexport function assign(origObj: any, ...args: any[]): any {\n  for (const obj of args) {\n    for (const key in obj) {\n      // @ts-ignore ex\n      origObj[key] = obj[key];\n    }\n  }\n  return origObj;\n}\n\nconst dayNames: Days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\"\n];\nconst monthNames: Months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nconst monthNamesShort: Months = shorten(monthNames, 3) as Months;\nconst dayNamesShort: Days = shorten(dayNames, 3) as Days;\n\nconst defaultI18n: I18nSettings = {\n  dayNamesShort,\n  dayNames,\n  monthNamesShort,\n  monthNames,\n  amPm: [\"am\", \"pm\"],\n  DoFn(dayOfMonth: number) {\n    return (\n      dayOfMonth +\n      [\"th\", \"st\", \"nd\", \"rd\"][\n        dayOfMonth % 10 > 3\n          ? 0\n          : ((dayOfMonth - (dayOfMonth % 10) !== 10 ? 1 : 0) * dayOfMonth) % 10\n      ]\n    );\n  }\n};\nlet globalI18n = assign({}, defaultI18n);\nconst setGlobalDateI18n = (i18n: I18nSettingsOptional): I18nSettings =>\n  (globalI18n = assign(globalI18n, i18n));\n\nconst regexEscape = (str: string): string =>\n  str.replace(/[|\\\\{()[^$+*?.-]/g, \"\\\\$&\");\n\nconst pad = (val: string | number, len = 2): string => {\n  val = String(val);\n  while (val.length < len) {\n    val = \"0\" + val;\n  }\n  return val;\n};\n\nconst formatFlags: Record<\n  string,\n  (dateObj: Date, i18n: I18nSettings) => string\n> = {\n  D: (dateObj: Date): string => String(dateObj.getDate()),\n  DD: (dateObj: Date): string => pad(dateObj.getDate()),\n  Do: (dateObj: Date, i18n: I18nSettings): string =>\n    i18n.DoFn(dateObj.getDate()),\n  d: (dateObj: Date): string => String(dateObj.getDay()),\n  dd: (dateObj: Date): string => pad(dateObj.getDay()),\n  ddd: (dateObj: Date, i18n: I18nSettings): string =>\n    i18n.dayNamesShort[dateObj.getDay()],\n  dddd: (dateObj: Date, i18n: I18nSettings): string =>\n    i18n.dayNames[dateObj.getDay()],\n  M: (dateObj: Date): string => String(dateObj.getMonth() + 1),\n  MM: (dateObj: Date): string => pad(dateObj.getMonth() + 1),\n  MMM: (dateObj: Date, i18n: I18nSettings): string =>\n    i18n.monthNamesShort[dateObj.getMonth()],\n  MMMM: (dateObj: Date, i18n: I18nSettings): string =>\n    i18n.monthNames[dateObj.getMonth()],\n  YY: (dateObj: Date): string =>\n    pad(String(dateObj.getFullYear()), 4).substr(2),\n  YYYY: (dateObj: Date): string => pad(dateObj.getFullYear(), 4),\n  h: (dateObj: Date): string => String(dateObj.getHours() % 12 || 12),\n  hh: (dateObj: Date): string => pad(dateObj.getHours() % 12 || 12),\n  H: (dateObj: Date): string => String(dateObj.getHours()),\n  HH: (dateObj: Date): string => pad(dateObj.getHours()),\n  m: (dateObj: Date): string => String(dateObj.getMinutes()),\n  mm: (dateObj: Date): string => pad(dateObj.getMinutes()),\n  s: (dateObj: Date): string => String(dateObj.getSeconds()),\n  ss: (dateObj: Date): string => pad(dateObj.getSeconds()),\n  S: (dateObj: Date): string =>\n    String(Math.round(dateObj.getMilliseconds() / 100)),\n  SS: (dateObj: Date): string =>\n    pad(Math.round(dateObj.getMilliseconds() / 10), 2),\n  SSS: (dateObj: Date): string => pad(dateObj.getMilliseconds(), 3),\n  a: (dateObj: Date, i18n: I18nSettings): string =>\n    dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1],\n  A: (dateObj: Date, i18n: I18nSettings): string =>\n    dateObj.getHours() < 12\n      ? i18n.amPm[0].toUpperCase()\n      : i18n.amPm[1].toUpperCase(),\n  ZZ(dateObj: Date): string {\n    const offset = dateObj.getTimezoneOffset();\n    return (\n      (offset > 0 ? \"-\" : \"+\") +\n      pad(Math.floor(Math.abs(offset) / 60) * 100 + (Math.abs(offset) % 60), 4)\n    );\n  },\n  Z(dateObj: Date): string {\n    const offset = dateObj.getTimezoneOffset();\n    return (\n      (offset > 0 ? \"-\" : \"+\") +\n      pad(Math.floor(Math.abs(offset) / 60), 2) +\n      \":\" +\n      pad(Math.abs(offset) % 60, 2)\n    );\n  }\n};\n\ntype ParseInfo = [\n  keyof DateInfo,\n  string,\n  ((v: string, i18n: I18nSettings) => number | null)?,\n  string?\n];\nconst monthParse = (v: string): number => +v - 1;\nconst emptyDigits: ParseInfo = [null, twoDigitsOptional];\nconst emptyWord: ParseInfo = [null, word];\nconst amPm: ParseInfo = [\n  \"isPm\",\n  word,\n  (v: string, i18n: I18nSettings): number | null => {\n    const val = v.toLowerCase();\n    if (val === i18n.amPm[0]) {\n      return 0;\n    } else if (val === i18n.amPm[1]) {\n      return 1;\n    }\n    return null;\n  }\n];\nconst timezoneOffset: ParseInfo = [\n  \"timezoneOffset\",\n  \"[^\\\\s]*?[\\\\+\\\\-]\\\\d\\\\d:?\\\\d\\\\d|[^\\\\s]*?Z?\",\n  (v: string): number | null => {\n    const parts = (v + \"\").match(/([+-]|\\d\\d)/gi);\n\n    if (parts) {\n      const minutes = +parts[1] * 60 + parseInt(parts[2], 10);\n      return parts[0] === \"+\" ? minutes : -minutes;\n    }\n\n    return 0;\n  }\n];\nconst parseFlags: Record<string, ParseInfo> = {\n  D: [\"day\", twoDigitsOptional],\n  DD: [\"day\", twoDigits],\n  Do: [\"day\", twoDigitsOptional + word, (v: string): number => parseInt(v, 10)],\n  M: [\"month\", twoDigitsOptional, monthParse],\n  MM: [\"month\", twoDigits, monthParse],\n  YY: [\n    \"year\",\n    twoDigits,\n    (v: string): number => {\n      const now = new Date();\n      const cent = +(\"\" + now.getFullYear()).substr(0, 2);\n      return +(\"\" + (+v > 68 ? cent - 1 : cent) + v);\n    }\n  ],\n  h: [\"hour\", twoDigitsOptional, undefined, \"isPm\"],\n  hh: [\"hour\", twoDigits, undefined, \"isPm\"],\n  H: [\"hour\", twoDigitsOptional],\n  HH: [\"hour\", twoDigits],\n  m: [\"minute\", twoDigitsOptional],\n  mm: [\"minute\", twoDigits],\n  s: [\"second\", twoDigitsOptional],\n  ss: [\"second\", twoDigits],\n  YYYY: [\"year\", fourDigits],\n  S: [\"millisecond\", \"\\\\d\", (v: string): number => +v * 100],\n  SS: [\"millisecond\", twoDigits, (v: string): number => +v * 10],\n  SSS: [\"millisecond\", threeDigits],\n  d: emptyDigits,\n  dd: emptyDigits,\n  ddd: emptyWord,\n  dddd: emptyWord,\n  MMM: [\"month\", word, monthUpdate(\"monthNamesShort\")],\n  MMMM: [\"month\", word, monthUpdate(\"monthNames\")],\n  a: amPm,\n  A: amPm,\n  ZZ: timezoneOffset,\n  Z: timezoneOffset\n};\n\n// Some common format strings\nconst globalMasks: { [key: string]: string } = {\n  default: \"ddd MMM DD YYYY HH:mm:ss\",\n  shortDate: \"M/D/YY\",\n  mediumDate: \"MMM D, YYYY\",\n  longDate: \"MMMM D, YYYY\",\n  fullDate: \"dddd, MMMM D, YYYY\",\n  isoDate: \"YYYY-MM-DD\",\n  isoDateTime: \"YYYY-MM-DDTHH:mm:ssZ\",\n  shortTime: \"HH:mm\",\n  mediumTime: \"HH:mm:ss\",\n  longTime: \"HH:mm:ss.SSS\"\n};\nconst setGlobalDateMasks = (masks: {\n  [key: string]: string;\n}): { [key: string]: string } => assign(globalMasks, masks);\n\n/***\n * Format a date\n * @method format\n * @param {Date|number} dateObj\n * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\n * @returns {string} Formatted date string\n */\nconst format = (\n  dateObj: Date,\n  mask: string = globalMasks[\"default\"],\n  i18n: I18nSettingsOptional = {}\n): string => {\n  if (typeof dateObj === \"number\") {\n    dateObj = new Date(dateObj);\n  }\n\n  if (\n    Object.prototype.toString.call(dateObj) !== \"[object Date]\" ||\n    isNaN(dateObj.getTime())\n  ) {\n    throw new Error(\"Invalid Date pass to format\");\n  }\n\n  mask = globalMasks[mask] || mask;\n\n  const literals: string[] = [];\n\n  // Make literals inactive by replacing them with @@@\n  mask = mask.replace(literal, function($0, $1) {\n    literals.push($1);\n    return \"@@@\";\n  });\n\n  const combinedI18nSettings: I18nSettings = assign(\n    assign({}, globalI18n),\n    i18n\n  );\n  // Apply formatting rules\n  mask = mask.replace(token, $0 =>\n    formatFlags[$0](dateObj, combinedI18nSettings)\n  );\n  // Inline literal values back into the formatted value\n  return mask.replace(/@@@/g, () => literals.shift());\n};\n\n/**\n * Parse a date string into a Javascript Date object /\n * @method parse\n * @param {string} dateStr Date string\n * @param {string} format Date parse format\n * @param {i18n} I18nSettingsOptional Full or subset of I18N settings\n * @returns {Date|null} Returns Date object. Returns null what date string is invalid or doesn't match format\n */\nfunction parse(\n  dateStr: string,\n  format: string,\n  i18n: I18nSettingsOptional = {}\n): Date | null {\n  if (typeof format !== \"string\") {\n    throw new Error(\"Invalid format in fecha parse\");\n  }\n\n  // Check to see if the format is actually a mask\n  format = globalMasks[format] || format;\n\n  // Avoid regular expression denial of service, fail early for really long strings\n  // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\n  if (dateStr.length > 1000) {\n    return null;\n  }\n\n  // Default to the beginning of the year.\n  const today = new Date();\n  const dateInfo: DateInfo = {\n    year: today.getFullYear(),\n    month: 0,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    millisecond: 0,\n    isPm: null,\n    timezoneOffset: null\n  };\n  const parseInfo: ParseInfo[] = [];\n  const literals: string[] = [];\n\n  // Replace all the literals with @@@. Hopefully a string that won't exist in the format\n  let newFormat = format.replace(literal, ($0, $1) => {\n    literals.push(regexEscape($1));\n    return \"@@@\";\n  });\n  const specifiedFields: { [field: string]: boolean } = {};\n  const requiredFields: { [field: string]: boolean } = {};\n\n  // Change every token that we find into the correct regex\n  newFormat = regexEscape(newFormat).replace(token, $0 => {\n    const info = parseFlags[$0];\n    const [field, regex, , requiredField] = info;\n\n    // Check if the person has specified the same field twice. This will lead to confusing results.\n    if (specifiedFields[field]) {\n      throw new Error(`Invalid format. ${field} specified twice in format`);\n    }\n\n    specifiedFields[field] = true;\n\n    // Check if there are any required fields. For instance, 12 hour time requires AM/PM specified\n    if (requiredField) {\n      requiredFields[requiredField] = true;\n    }\n\n    parseInfo.push(info);\n    return \"(\" + regex + \")\";\n  });\n\n  // Check all the required fields are present\n  Object.keys(requiredFields).forEach(field => {\n    if (!specifiedFields[field]) {\n      throw new Error(\n        `Invalid format. ${field} is required in specified format`\n      );\n    }\n  });\n\n  // Add back all the literals after\n  newFormat = newFormat.replace(/@@@/g, () => literals.shift());\n\n  // Check if the date string matches the format. If it doesn't return null\n  const matches = dateStr.match(new RegExp(newFormat, \"i\"));\n  if (!matches) {\n    return null;\n  }\n\n  const combinedI18nSettings: I18nSettings = assign(\n    assign({}, globalI18n),\n    i18n\n  );\n\n  // For each match, call the parser function for that date part\n  for (let i = 1; i < matches.length; i++) {\n    const [field, , parser] = parseInfo[i - 1];\n    const value = parser\n      ? parser(matches[i], combinedI18nSettings)\n      : +matches[i];\n\n    // If the parser can't make sense of the value, return null\n    if (value == null) {\n      return null;\n    }\n\n    dateInfo[field] = value;\n  }\n\n  if (dateInfo.isPm === 1 && dateInfo.hour != null && +dateInfo.hour !== 12) {\n    dateInfo.hour = +dateInfo.hour + 12;\n  } else if (dateInfo.isPm === 0 && +dateInfo.hour === 12) {\n    dateInfo.hour = 0;\n  }\n\n  let dateTZ: Date;\n  if (dateInfo.timezoneOffset == null) {\n    dateTZ = new Date(\n      dateInfo.year,\n      dateInfo.month,\n      dateInfo.day,\n      dateInfo.hour,\n      dateInfo.minute,\n      dateInfo.second,\n      dateInfo.millisecond\n    );\n    const validateFields: [\n      \"month\" | \"day\" | \"hour\" | \"minute\" | \"second\",\n      \"getMonth\" | \"getDate\" | \"getHours\" | \"getMinutes\" | \"getSeconds\"\n    ][] = [\n      [\"month\", \"getMonth\"],\n      [\"day\", \"getDate\"],\n      [\"hour\", \"getHours\"],\n      [\"minute\", \"getMinutes\"],\n      [\"second\", \"getSeconds\"]\n    ];\n    for (let i = 0, len = validateFields.length; i < len; i++) {\n      // Check to make sure the date field is within the allowed range. Javascript dates allows values\n      // outside the allowed range. If the values don't match the value was invalid\n      if (\n        specifiedFields[validateFields[i][0]] &&\n        dateInfo[validateFields[i][0]] !== dateTZ[validateFields[i][1]]()\n      ) {\n        return null;\n      }\n    }\n  } else {\n    dateTZ = new Date(\n      Date.UTC(\n        dateInfo.year,\n        dateInfo.month,\n        dateInfo.day,\n        dateInfo.hour,\n        dateInfo.minute - dateInfo.timezoneOffset,\n        dateInfo.second,\n        dateInfo.millisecond\n      )\n    );\n\n    // We can't validate dates in another timezone unfortunately. Do a basic check instead\n    if (\n      dateInfo.month > 11 ||\n      dateInfo.month < 0 ||\n      dateInfo.day > 31 ||\n      dateInfo.day < 1 ||\n      dateInfo.hour > 23 ||\n      dateInfo.hour < 0 ||\n      dateInfo.minute > 59 ||\n      dateInfo.minute < 0 ||\n      dateInfo.second > 59 ||\n      dateInfo.second < 0\n    ) {\n      return null;\n    }\n  }\n\n  // Don't allow invalid dates\n\n  return dateTZ;\n}\nexport default {\n  format,\n  parse,\n  defaultI18n,\n  setGlobalDateI18n,\n  setGlobalDateMasks\n};\nexport { format, parse, defaultI18n, setGlobalDateI18n, setGlobalDateMasks };\n", "import { isNil } from '@antv/util';\r\n\r\ntype GetterFunc<T> = (o: T) => number;\r\n\r\n/**\r\n * 二分右侧查找\r\n * https://github.com/d3/d3-array/blob/master/src/bisector.js\r\n */\r\nexport default function<T>(getter: GetterFunc<T>) {\r\n  /**\r\n   * x: 目标值\r\n   * lo: 起始位置\r\n   * hi: 结束位置\r\n   */\r\n  return function(a: T[], x: number, _lo?: number, _hi?: number) {\r\n    let lo = isNil(_lo) ? 0 : _lo;\r\n    let hi = isNil(_hi) ? a.length : _hi;\r\n    while (lo < hi) {\r\n      const mid = (lo + hi) >>> 1;\r\n      if (getter(a[mid]) > x) {\r\n        hi = mid;\r\n      } else {\r\n        lo = mid + 1;\r\n      }\r\n    }\r\n    return lo;\r\n  };\r\n}\r\n", "import { filter, getRange, head, isNil, last } from '@antv/util';\r\nimport Base from '../base';\r\n\r\n/**\r\n * 连续度量的基类\r\n * @class\r\n */\r\nexport default abstract class Continuous extends Base {\r\n  public isContinuous?: boolean = true;\r\n  public nice: boolean;\r\n\r\n  public scale(value: any): number {\r\n    if (isNil(value)) {\r\n      return NaN;\r\n    }\r\n    const rangeMin = this.rangeMin();\r\n    const rangeMax = this.rangeMax();\r\n    const max = this.max;\r\n    const min = this.min;\r\n    if (max === min) {\r\n      return rangeMin;\r\n    }\r\n    const percent = this.getScalePercent(value);\r\n    return rangeMin + percent * (rangeMax - rangeMin);\r\n  }\r\n\r\n  protected init() {\r\n    super.init();\r\n    // init 完成后保证 min, max 包含 ticks 的范围\r\n    const ticks = this.ticks;\r\n    const firstTick = head(ticks);\r\n    const lastTick = last(ticks);\r\n    if (firstTick < this.min) {\r\n      this.min = firstTick;\r\n    }\r\n    if (lastTick > this.max) {\r\n      this.max = lastTick;\r\n    }\r\n    // strict-limit 方式\r\n    if (!isNil(this.minLimit)) {\r\n      this.min = firstTick;\r\n    }\r\n    if (!isNil(this.maxLimit)) {\r\n      this.max = lastTick;\r\n    }\r\n  }\r\n\r\n  protected setDomain() {\r\n    const { min, max } = getRange(this.values);\r\n    if (isNil(this.min)) {\r\n      this.min = min;\r\n    }\r\n    if (isNil(this.max)) {\r\n      this.max = max;\r\n    }\r\n    if (this.min > this.max) {\r\n      this.min = min;\r\n      this.max = max;\r\n    }\r\n  }\r\n\r\n  protected calculateTicks(): any[] {\r\n    let ticks = super.calculateTicks();\r\n    if (!this.nice) {\r\n      ticks = filter(ticks, (tick) => {\r\n        return tick >= this.min && tick <= this.max;\r\n      });\r\n    }\r\n    return ticks;\r\n  }\r\n\r\n  // 计算原始值值占的百分比\r\n  protected getScalePercent(value) {\r\n    const max = this.max;\r\n    const min = this.min;\r\n    return (value - min) / (max - min);\r\n  }\r\n\r\n  protected getInvertPercent(value) {\r\n    return (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());\r\n  }\r\n}\r\n", "import Continuous from './base';\r\n\r\n/**\r\n * 线性度量\r\n * @class\r\n */\r\nexport default class Linear extends Continuous {\r\n  public minTickInterval: number;\r\n  public type = 'linear';\r\n  public readonly isLinear: boolean = true;\r\n\r\n  public invert(value: number): any {\r\n    const percent = this.getInvertPercent(value);\r\n    return this.min + percent * (this.max - this.min);\r\n  }\r\n\r\n  protected initCfg() {\r\n    this.tickMethod = 'wilkinson-extended';\r\n    this.nice = false;\r\n  }\r\n}\r\n", "import { each, isNil } from '@antv/util';\r\n\r\n// 求以a为次幂，结果为b的基数，如 x^^a = b;求x\r\n// 虽然数学上 b 不支持负数，但是这里需要支持 负数\r\nexport function calBase(a: number, b: number) {\r\n  const e = Math.E;\r\n  let value;\r\n  if (b >= 0) {\r\n    value = Math.pow(e, Math.log(b) / a); // 使用换底公式求底\r\n  } else {\r\n    value = Math.pow(e, Math.log(-b) / a) * -1; // 使用换底公式求底\r\n  }\r\n  return value;\r\n}\r\n\r\nexport function log(a: number, b: number) {\r\n  if (a === 1) {\r\n    return 1;\r\n  }\r\n  return Math.log(b) / Math.log(a);\r\n}\r\n\r\nexport function getLogPositiveMin(values, base, max?: number) {\r\n  if (isNil(max)) {\r\n    max = Math.max.apply(null, values);\r\n  }\r\n  let positiveMin = max;\r\n  each(values, (value) => {\r\n    if (value > 0 && value < positiveMin) {\r\n      positiveMin = value;\r\n    }\r\n  });\r\n  if (positiveMin === max) {\r\n    positiveMin = max / base;\r\n  }\r\n  if (positiveMin > 1) {\r\n    positiveMin = 1;\r\n  }\r\n  return positiveMin;\r\n}\r\n\r\nfunction digitLength(num: number) {\r\n  // Get digit length of e\r\n  const eSplit = num.toString().split(/[eE]/);\r\n  const len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);\r\n  return len > 0 ? len : 0;\r\n}\r\n\r\n/**\r\n * 高精度加法，解决 0.1 + 0.2 !== 0.3 的经典问题\r\n *\r\n * @param num1 加数\r\n * @param num2 被加数\r\n * @return {number} 返回值\r\n */\r\nexport function precisionAdd(num1: number, num2: number) {\r\n  const num1Digits = digitLength(num1);\r\n  const num2Digits = digitLength(num2);\r\n  const baseNum = 10 ** Math.max(num1Digits, num2Digits);\r\n  return (num1 * baseNum + num2 * baseNum) / baseNum;\r\n}\r\n", "import { getLogPositiveMin, log } from '../util/math';\r\nimport Continuous from './base';\r\n/**\r\n * Log 度量，处理非均匀分布\r\n */\r\nclass Log extends Continuous {\r\n  public readonly type: string = 'log';\r\n  public base: number;\r\n  // 用于解决 min: 0 的场景下的问题\r\n  private positiveMin: number;\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  public invert(value: number) {\r\n    const base = this.base;\r\n    const max = log(base, this.max);\r\n    const rangeMin = this.rangeMin();\r\n    const range = this.rangeMax() - rangeMin;\r\n    let min;\r\n    const positiveMin = this.positiveMin;\r\n    if (positiveMin) {\r\n      if (value === 0) {\r\n        return 0;\r\n      }\r\n      min = log(base, positiveMin / base);\r\n      const appendPercent = (1 / (max - min)) * range; // 0 到 positiveMin的占比\r\n      if (value < appendPercent) {\r\n        // 落到 0 - positiveMin 之间\r\n        return (value / appendPercent) * positiveMin;\r\n      }\r\n    } else {\r\n      min = log(base, this.min);\r\n    }\r\n    const percent = (value - rangeMin) / range;\r\n    const tmp = percent * (max - min) + min;\r\n    return Math.pow(base, tmp);\r\n  }\r\n\r\n  protected initCfg() {\r\n    this.tickMethod = 'log';\r\n    this.base = 10;\r\n    this.tickCount = 6;\r\n    this.nice = true;\r\n  }\r\n\r\n  // 设置\r\n  protected setDomain() {\r\n    super.setDomain();\r\n    const min = this.min;\r\n    if (min < 0) {\r\n      throw new Error('When you use log scale, the minimum value must be greater than zero!');\r\n    }\r\n    if (min === 0) {\r\n      this.positiveMin = getLogPositiveMin(this.values, this.base, this.max);\r\n    }\r\n  }\r\n\r\n  // 根据当前值获取占比\r\n  protected getScalePercent(value: number) {\r\n    const max = this.max;\r\n    let min = this.min;\r\n    if (max === min) {\r\n      return 0;\r\n    }\r\n    // 如果值小于等于0，则按照0处理\r\n    if (value <= 0) {\r\n      return 0;\r\n    }\r\n    const base = this.base;\r\n    const positiveMin = this.positiveMin;\r\n    // 如果min == 0, 则根据比0大的最小值，计算比例关系。这个最小值作为坐标轴上的第二个tick，第一个是0但是不显示\r\n    if (positiveMin) {\r\n      min = (positiveMin * 1) / base;\r\n    }\r\n    let percent;\r\n    // 如果数值小于次小值，那么就计算 value / 次小值 占整体的比例\r\n    if (value < positiveMin) {\r\n      percent = value / positiveMin / (log(base, max) - log(base, min));\r\n    } else {\r\n      percent = (log(base, value) - log(base, min)) / (log(base, max) - log(base, min));\r\n    }\r\n    return percent;\r\n  }\r\n}\r\n\r\nexport default Log;\r\n", "import { calBase } from '../util/math';\r\nimport Continuous from './base';\r\n\r\n/**\r\n * Pow 度量，处理非均匀分布\r\n */\r\nclass Pow extends Continuous {\r\n  public readonly type: string = 'pow';\r\n  /**\r\n   * 指数\r\n   */\r\n  public exponent: number;\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  public invert(value: number) {\r\n    const percent = this.getInvertPercent(value);\r\n    const exponent = this.exponent;\r\n    const max = calBase(exponent, this.max);\r\n    const min = calBase(exponent, this.min);\r\n    const tmp = percent * (max - min) + min;\r\n    const factor = tmp >= 0 ? 1 : -1;\r\n    return Math.pow(tmp, exponent) * factor;\r\n  }\r\n\r\n  protected initCfg() {\r\n    this.tickMethod = 'pow';\r\n    this.exponent = 2;\r\n    this.tickCount = 5;\r\n    this.nice = true;\r\n  }\r\n\r\n  // 获取度量计算时，value占的定义域百分比\r\n  protected getScalePercent(value: number) {\r\n    const max = this.max;\r\n    const min = this.min;\r\n    if (max === min) {\r\n      return 0;\r\n    }\r\n    const exponent = this.exponent;\r\n    const percent =\r\n      (calBase(exponent, value) - calBase(exponent, min)) / (calBase(exponent, max) - calBase(exponent, min));\r\n    return percent;\r\n  }\r\n}\r\n\r\nexport default Pow;\r\n", "import { each, isDate, isNil, isNumber, isString } from '@antv/util';\r\nimport { timeFormat, toTimeStamp } from '../util/time';\r\nimport Linear from './linear';\r\n\r\n/**\r\n * 时间度量\r\n * @class\r\n */\r\nclass Time extends Linear {\r\n  public readonly type: string = 'time';\r\n  public mask: string;\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  public getText(value: string | number | Date, index?: number) {\r\n    const numberValue = this.translate(value);\r\n    const formatter = this.formatter;\r\n    return formatter ? formatter(numberValue, index) : timeFormat(numberValue, this.mask);\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  public scale(value): number {\r\n    let v = value;\r\n    if (isString(v) || isDate(v)) {\r\n      v = this.translate(v);\r\n    }\r\n    return super.scale(v);\r\n  }\r\n  /**\r\n   * 将时间转换成数字\r\n   * @override\r\n   */\r\n  public translate(v): number {\r\n    return toTimeStamp(v);\r\n  }\r\n  protected initCfg() {\r\n    this.tickMethod = 'time-pretty';\r\n    this.mask = 'YYYY-MM-DD';\r\n    this.tickCount = 7;\r\n    this.nice = false;\r\n  }\r\n\r\n  protected setDomain() {\r\n    const values = this.values;\r\n    // 是否设置了 min, max，而不是直接取 this.min, this.max\r\n    const minConfig = this.getConfig('min');\r\n    const maxConfig = this.getConfig('max');\r\n    // 如果设置了 min,max 则转换成时间戳\r\n    if (!isNil(minConfig) || !isNumber(minConfig)) {\r\n      this.min = this.translate(this.min);\r\n    }\r\n    if (!isNil(maxConfig) || !isNumber(maxConfig)) {\r\n      this.max = this.translate(this.max);\r\n    }\r\n    // 没有设置 min, max 时\r\n    if (values && values.length) {\r\n      // 重新计算最大最小值\r\n      const timeStamps = [];\r\n      let min = Infinity; // 最小值\r\n      let secondMin = min; // 次小值\r\n      let max = 0;\r\n      // 使用一个循环，计算min,max,secondMin\r\n      each(values, (v) => {\r\n        const timeStamp = toTimeStamp(v);\r\n        if (isNaN(timeStamp)) {\r\n          throw new TypeError(`Invalid Time: ${v} in time scale!`);\r\n        }\r\n        if (min > timeStamp) {\r\n          secondMin = min;\r\n          min = timeStamp;\r\n        } else if (secondMin > timeStamp) {\r\n          secondMin = timeStamp;\r\n        }\r\n        if (max < timeStamp) {\r\n          max = timeStamp;\r\n        }\r\n        timeStamps.push(timeStamp);\r\n      });\r\n      // 存在多个值时，设置最小间距\r\n      if (values.length > 1) {\r\n        this.minTickInterval = secondMin - min;\r\n      }\r\n      if (isNil(minConfig)) {\r\n        this.min = min;\r\n      }\r\n      if (isNil(maxConfig)) {\r\n        this.max = max;\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default Time;\r\n", "import { each, head, last } from '@antv/util';\r\nimport Continuous from './base';\r\n\r\n/**\r\n * 分段度量\r\n */\r\nclass Quantize extends Continuous {\r\n  public type = 'quantize';\r\n\r\n  public invert(value): number {\r\n    const ticks = this.ticks;\r\n    const length = ticks.length;\r\n    const percent = this.getInvertPercent(value);\r\n    const minIndex = Math.floor(percent * (length - 1));\r\n    // 最后一个\r\n    if (minIndex >= length - 1) {\r\n      return last(ticks);\r\n    }\r\n    // 超出左边界， 则取第一个\r\n    if (minIndex < 0) {\r\n      return head(ticks);\r\n    }\r\n    const minTick = ticks[minIndex];\r\n    const nextTick = ticks[minIndex + 1];\r\n    // 比当前值小的 tick 在度量上的占比\r\n    const minIndexPercent = minIndex / (length - 1);\r\n    const maxIndexPercent =  (minIndex + 1) / (length - 1);\r\n    return minTick + (percent - minIndexPercent) / (maxIndexPercent - minIndexPercent) * (nextTick - minTick);\r\n  }\r\n\r\n  protected initCfg() {\r\n    this.tickMethod = 'r-pretty';\r\n    this.tickCount = 5;\r\n    this.nice = true;\r\n  }\r\n\r\n  protected calculateTicks(): any[] {\r\n    const ticks = super.calculateTicks();\r\n    if (!this.nice) { // 如果 nice = false ,补充 min, max\r\n      if (last(ticks) !== this.max) {\r\n        ticks.push(this.max);\r\n      }\r\n      if (head(ticks) !== this.min) {\r\n        ticks.unshift(this.min);\r\n      }\r\n    }\r\n    return ticks;\r\n  }\r\n\r\n  // 计算当前值在刻度中的占比\r\n  protected getScalePercent(value) {\r\n    const ticks = this.ticks;\r\n    // 超出左边界\r\n    if (value < head(ticks)) {\r\n      return 0;\r\n    }\r\n    // 超出右边界\r\n    if (value > last(ticks)) {\r\n      return 1;\r\n    }\r\n    let minIndex = 0;\r\n    each(ticks, (tick, index) => {\r\n      if (value >= tick) {\r\n        minIndex = index;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n    return minIndex / (ticks.length - 1);\r\n  }\r\n}\r\n\r\nexport default Quantize;\r\n", "import Quantize from './quantize';\r\n\r\nclass Quantile extends Quantize {\r\n  public type = 'quantile';\r\n  protected initCfg() {\r\n    this.tickMethod = 'quantile';\r\n    this.tickCount = 5;\r\n    this.nice = true;\r\n  }\r\n}\r\n\r\nexport default Quantile;\r\n", "import Scale from './base';\r\nimport { ScaleConfig } from './types';\r\ntype ScaleConstructor<T extends Scale = Scale> = new (cfg: ScaleConfig) => T;\r\n\r\ninterface ScaleMap {\r\n  [key: string]: ScaleConstructor;\r\n}\r\n\r\nconst map: ScaleMap = {};\r\n\r\nfunction getClass(key: string): ScaleConstructor {\r\n  return map[key];\r\n}\r\n\r\nfunction registerClass(key: string, cls: ScaleConstructor) {\r\n  if (getClass(key)) {\r\n    throw new Error(`type '${key}' existed.`);\r\n  }\r\n  map[key] = cls;\r\n}\r\n\r\nexport { Scale, getClass as getScale, registerClass as registerScale };\r\n", "import { has, isNumber } from '@antv/util';\r\nimport Base from '../base';\r\nimport { ScaleType } from '../types';\r\n\r\n/**\r\n * identity scale原则上是定义域和值域一致，scale/invert方法也是一致的\r\n * 参考R的实现：https://github.com/r-lib/scales/blob/master/R/pal-identity.r\r\n * 参考d3的实现（做了下转型）：https://github.com/d3/d3-scale/blob/master/src/identity.js\r\n */\r\nexport default class Identity extends Base {\r\n  public readonly type: ScaleType = 'identity';\r\n  public readonly isIdentity: boolean = true;\r\n\r\n  public calculateTicks() {\r\n    return this.values;\r\n  }\r\n\r\n  public scale(value: any): number {\r\n    // 如果传入的值不等于 identity 的值，则直接返回，用于一维图时的 dodge\r\n    if (this.values[0] !== value && isNumber(value)) {\r\n      return value;\r\n    }\r\n    return this.range[0];\r\n  }\r\n\r\n  public invert(value?: number): number {\r\n    const range = this.range;\r\n    if (value < range[0] || value > range[1]) {\r\n      return NaN;\r\n    }\r\n    return this.values[0];\r\n  }\r\n}\r\n", "import { filter, isNil, isNumber, last } from '@antv/util';\r\nimport { ScaleConfig } from '../types';\r\n\r\n/**\r\n * 计算分类 ticks\r\n * @param cfg 度量的配置项\r\n * @returns 计算后的 ticks\r\n */\r\nexport default function calculateCatTicks(cfg: ScaleConfig): any[] {\r\n  const { values, tickInterval, tickCount, showLast } = cfg;\r\n\r\n  if (isNumber(tickInterval)) {\r\n    const ticks = filter(values, (__: any, i: number) => i % tickInterval === 0);\r\n    const lastValue = last(values);\r\n    if (showLast && last(ticks) !== lastValue) {\r\n      ticks.push(lastValue);\r\n    }\r\n    return ticks;\r\n  }\r\n\r\n  const len = values.length;\r\n  let { min, max } = cfg;\r\n  if (isNil(min)) {\r\n    min = 0;\r\n  }\r\n  if (isNil(max)) {\r\n    max = values.length - 1;\r\n  }\r\n\r\n  if (!isNumber(tickCount) || tickCount >= len) return values.slice(min, max + 1);\r\n  if (tickCount <= 0 || max <= 0) return [];\r\n\r\n  const interval = tickCount === 1 ? len : Math.floor(len / (tickCount - 1));\r\n  const ticks = [];\r\n\r\n  let idx = min;\r\n  for (let i = 0; i < tickCount; i++) {\r\n    if (idx >= max) break;\r\n\r\n    idx = Math.min(min + i * interval, max);\r\n    if (i === tickCount - 1 && showLast) ticks.push(values[max]);\r\n    else ticks.push(values[idx]);\r\n  }\r\n  return ticks;\r\n}\r\n", "import { head, isNil, last } from '@antv/util';\r\nimport { ScaleConfig } from '../types';\r\nimport d3Linear from '../util/d3-linear';\r\nimport interval from '../util/interval';\r\nimport strictLimit from '../util/strict-limit';\r\n\r\nexport default function d3LinearTickMethod(cfg: ScaleConfig): number[] {\r\n  const { min, max, tickInterval, minLimit, maxLimit } = cfg;\r\n  const ticks = d3Linear(cfg);\r\n\r\n  if (!isNil(minLimit) || !isNil(maxLimit)) {\r\n    return strictLimit(cfg, head(ticks), last(ticks));\r\n  }\r\n  if (tickInterval) {\r\n    return interval(min, max, tickInterval).ticks;\r\n  }\r\n  return ticks;\r\n}\r\n", "import { ScaleConfig } from '../types';\r\n\r\nexport default function d3Linear(cfg: ScaleConfig): number[] {\r\n  const { min, max, nice, tickCount } = cfg;\r\n  const linear = new D3Linear();\r\n  linear.domain([min, max]);\r\n  if (nice) {\r\n    linear.nice(tickCount);\r\n  }\r\n  return linear.ticks(tickCount);\r\n}\r\n\r\nconst DEFAULT_COUNT = 5;\r\nconst e10 = Math.sqrt(50);\r\nconst e5 = Math.sqrt(10);\r\nconst e2 = Math.sqrt(2);\r\n\r\n// https://github.com/d3/d3-scale\r\nexport class D3Linear {\r\n  private _domain: number[] = [0, 1];\r\n\r\n  public domain(domain?: number[]): D3Linear | number[] {\r\n    if (domain) {\r\n      this._domain = Array.from(domain, Number);\r\n      return this;\r\n    }\r\n    return this._domain.slice();\r\n  }\r\n\r\n  public nice(count = DEFAULT_COUNT) {\r\n    const d = this._domain.slice();\r\n    let i0 = 0;\r\n    let i1 = this._domain.length - 1;\r\n    let start = this._domain[i0];\r\n    let stop = this._domain[i1];\r\n    let step;\r\n\r\n    if (stop < start) {\r\n      [start, stop] = [stop, start];\r\n      [i0, i1] = [i1, i0];\r\n    }\r\n    step = tickIncrement(start, stop, count);\r\n\r\n    if (step > 0) {\r\n      start = Math.floor(start / step) * step;\r\n      stop = Math.ceil(stop / step) * step;\r\n      step = tickIncrement(start, stop, count);\r\n    } else if (step < 0) {\r\n      start = Math.ceil(start * step) / step;\r\n      stop = Math.floor(stop * step) / step;\r\n      step = tickIncrement(start, stop, count);\r\n    }\r\n\r\n    if (step > 0) {\r\n      d[i0] = Math.floor(start / step) * step;\r\n      d[i1] = Math.ceil(stop / step) * step;\r\n      this.domain(d);\r\n    } else if (step < 0) {\r\n      d[i0] = Math.ceil(start * step) / step;\r\n      d[i1] = Math.floor(stop * step) / step;\r\n      this.domain(d);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  public ticks(count = DEFAULT_COUNT): number[] {\r\n    return d3ArrayTicks(this._domain[0], this._domain[this._domain.length - 1], count || DEFAULT_COUNT);\r\n  }\r\n}\r\n\r\nfunction d3ArrayTicks(start: number, stop: number, count: number): number[] {\r\n  let reverse;\r\n  let i = -1;\r\n  let n;\r\n  let ticks;\r\n  let step;\r\n\r\n  (stop = +stop), (start = +start), (count = +count);\r\n  if (start === stop && count > 0) {\r\n    return [start];\r\n  }\r\n  // tslint:disable-next-line\r\n  if ((reverse = stop < start)) {\r\n    (n = start), (start = stop), (stop = n);\r\n  }\r\n  // tslint:disable-next-line\r\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) {\r\n    return [];\r\n  }\r\n\r\n  if (step > 0) {\r\n    start = Math.ceil(start / step);\r\n    stop = Math.floor(stop / step);\r\n    ticks = new Array((n = Math.ceil(stop - start + 1)));\r\n    while (++i < n) {\r\n      ticks[i] = (start + i) * step;\r\n    }\r\n  } else {\r\n    start = Math.floor(start * step);\r\n    stop = Math.ceil(stop * step);\r\n    ticks = new Array((n = Math.ceil(start - stop + 1)));\r\n    while (++i < n) {\r\n      ticks[i] = (start - i) / step;\r\n    }\r\n  }\r\n\r\n  if (reverse) {\r\n    ticks.reverse();\r\n  }\r\n\r\n  return ticks;\r\n}\r\n\r\nfunction tickIncrement(start: number, stop: number, count: number): number {\r\n  const step = (stop - start) / Math.max(0, count);\r\n  const power = Math.floor(Math.log(step) / Math.LN10);\r\n  const error = step / Math.pow(10, power);\r\n\r\n  return power >= 0\r\n    ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\r\n    : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\r\n}\r\n", "\r\nimport { fixedBase } from '@antv/util';\r\n\r\nfunction snapMultiple(v, base, snapType) {\r\n  let div;\r\n  if (snapType === 'ceil') {\r\n    div = Math.ceil(v / base);\r\n  } else if (snapType === 'floor') {\r\n    div = Math.floor(v / base);\r\n  } else {\r\n    div = Math.round(v / base);\r\n  }\r\n  return div * base;\r\n}\r\n\r\nexport default function intervalTicks(min, max, interval) {\r\n  // 变成 interval 的倍数\r\n  let minTick = snapMultiple(min, interval, 'floor');\r\n  let maxTick = snapMultiple(max, interval, 'ceil');\r\n  // 统一小数位数\r\n  minTick = fixedBase(minTick, interval);\r\n  maxTick = fixedBase(maxTick, interval);\r\n  const ticks = [];\r\n  // https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Errors/Invalid_array_length\r\n  const availableInterval = Math.max((maxTick - minTick) / (2 ** 12 - 1), interval);\r\n  for (let i = minTick; i <= maxTick; i = i + availableInterval) {\r\n    const tickValue = fixedBase(i, availableInterval); // 防止浮点数加法出现问题\r\n    ticks.push(tickValue);\r\n  }\r\n  return {\r\n    min: minTick,\r\n    max: maxTick,\r\n    ticks\r\n  };\r\n}", "import { isNil } from '@antv/util';\r\nimport { ScaleConfig } from '../types';\r\n\r\n/**\r\n * 按照给定的 minLimit/maxLimit/tickCount 均匀计算出刻度 ticks\r\n *\r\n * @param cfg Scale 配置项\r\n * @return ticks\r\n */\r\nexport default function strictLimit(cfg: ScaleConfig, defaultMin?: number, defaultMax?: number): number[] {\r\n  const { minLimit, maxLimit, min, max, tickCount = 5 } = cfg;\r\n  let tickMin = isNil(minLimit) ? (isNil(defaultMin) ? min : defaultMin) : minLimit;\r\n  let tickMax = isNil(maxLimit) ? (isNil(defaultMax) ? max : defaultMax) : maxLimit;\r\n\r\n  if (tickMin > tickMax) {\r\n    [tickMax, tickMin] = [tickMin, tickMax];\r\n  }\r\n\r\n  if (tickCount <= 2) {\r\n    return [tickMin, tickMax];\r\n  }\r\n\r\n  const step = (tickMax - tickMin) / (tickCount - 1);\r\n  const ticks: number[] = [];\r\n\r\n  for (let i = 0; i < tickCount; i++) {\r\n    ticks.push(tickMin + step * i);\r\n  }\r\n\r\n  return ticks;\r\n}\r\n", "import { head, isNil, last } from '@antv/util';\r\nimport { ScaleConfig } from '../types';\r\nimport extended from '../util/extended';\r\nimport interval from '../util/interval';\r\nimport strictLimit from '../util/strict-limit';\r\n\r\n/**\r\n * 计算线性的 ticks，使用 wilkinson extended 方法\r\n * @param cfg 度量的配置项\r\n * @returns 计算后的 ticks\r\n */\r\nexport default function linear(cfg: ScaleConfig): number[] {\r\n  const { min, max, tickCount, nice, tickInterval, minLimit, maxLimit } = cfg;\r\n  const ticks = extended(min, max, tickCount, nice).ticks;\r\n\r\n  if (!isNil(minLimit) || !isNil(maxLimit)) {\r\n    return strictLimit(cfg, head(ticks), last(ticks));\r\n  }\r\n  if (tickInterval) {\r\n    return interval(min, max, tickInterval).ticks;\r\n  }\r\n  return ticks;\r\n}\r\n", "import { head, indexOf, size, last } from '@antv/util';\r\nimport { prettyNumber } from './pretty-number';\r\n\r\nexport const DEFAULT_Q = [1, 5, 2, 2.5, 4, 3];\r\n\r\nexport const ALL_Q = [1, 5, 2, 2.5, 4, 3, 1.5, 7, 6, 8, 9];\r\n\r\nconst eps = Number.EPSILON * 100;\r\n\r\nfunction mod(n: number, m: number) {\r\n  return ((n % m) + m) % m;\r\n}\r\n\r\nfunction round(n: number) {\r\n  return Math.round(n * 1e12) / 1e12;\r\n}\r\n\r\nfunction simplicity(q: number, Q: number[], j: number, lmin: number, lmax: number, lstep: number) {\r\n  const n = size(Q);\r\n  const i = indexOf(Q, q);\r\n  let v = 0;\r\n  const m = mod(lmin, lstep);\r\n  if ((m < eps || lstep - m < eps) && lmin <= 0 && lmax >= 0) {\r\n    v = 1;\r\n  }\r\n  return 1 - i / (n - 1) - j + v;\r\n}\r\n\r\nfunction simplicityMax(q: number, Q: number[], j: number) {\r\n  const n = size(Q);\r\n  const i = indexOf(Q, q);\r\n  const v = 1;\r\n  return 1 - i / (n - 1) - j + v;\r\n}\r\n\r\nfunction density(k: number, m: number, dMin: number, dMax: number, lMin: number, lMax: number) {\r\n  const r = (k - 1) / (lMax - lMin);\r\n  const rt = (m - 1) / (Math.max(lMax, dMax) - Math.min(dMin, lMin));\r\n  return 2 - Math.max(r / rt, rt / r);\r\n}\r\n\r\nfunction densityMax(k: number, m: number) {\r\n  if (k >= m) {\r\n    return 2 - (k - 1) / (m - 1);\r\n  }\r\n  return 1;\r\n}\r\n\r\nfunction coverage(dMin: number, dMax: number, lMin: number, lMax: number) {\r\n  const range = dMax - dMin;\r\n  return 1 - (0.5 * ((dMax - lMax) ** 2 + (dMin - lMin) ** 2)) / (0.1 * range) ** 2;\r\n}\r\n\r\nfunction coverageMax(dMin: number, dMax: number, span: number) {\r\n  const range = dMax - dMin;\r\n  if (span > range) {\r\n    const half = (span - range) / 2;\r\n    return 1 - half ** 2 / (0.1 * range) ** 2;\r\n  }\r\n  return 1;\r\n}\r\n\r\nfunction legibility() {\r\n  return 1;\r\n}\r\n\r\n/**\r\n * An Extension of Wilkinson's Algorithm for Position Tick Labels on Axes\r\n * https://www.yuque.com/preview/yuque/0/2019/pdf/185317/1546999150858-45c3b9c2-4e86-4223-bf1a-8a732e8195ed.pdf\r\n * @param dMin 最小值\r\n * @param dMax 最大值\r\n * @param m tick个数\r\n * @param onlyLoose 是否允许扩展min、max，不绝对强制，例如[3, 97]\r\n * @param Q nice numbers集合\r\n * @param w 四个优化组件的权重\r\n */\r\nexport default function extended(\r\n  dMin: number,\r\n  dMax: number,\r\n  n: number = 5,\r\n  onlyLoose: boolean = true,\r\n  Q: number[] = DEFAULT_Q,\r\n  w: [number, number, number, number] = [0.25, 0.2, 0.5, 0.05]\r\n): { min: number; max: number; ticks: number[] } {\r\n  // 处理小于 0 和小数的 tickCount\r\n  const m = n < 0 ? 0 : Math.round(n);\r\n\r\n  // nan 也会导致异常\r\n  if (Number.isNaN(dMin) || Number.isNaN(dMax) || typeof dMin !== 'number' || typeof dMax !== 'number' || !m) {\r\n    return {\r\n      min: 0,\r\n      max: 0,\r\n      ticks: [],\r\n    };\r\n  }\r\n\r\n  // js 极大值极小值问题，差值小于 1e-15 会导致计算出错\r\n  if (dMax - dMin < 1e-15 || m === 1) {\r\n    return {\r\n      min: dMin,\r\n      max: dMax,\r\n      ticks: [dMin],\r\n    };\r\n  }\r\n\r\n  // js 超大值问题\r\n  if (dMax - dMin > 1e148) {\r\n    const count = n || 5;\r\n    const step = (dMax - dMin) / count;\r\n    return {\r\n      min: dMin,\r\n      max: dMax,\r\n      ticks: Array(count).fill(null).map((_,idx) => {\r\n        return prettyNumber(dMin + step * idx);\r\n      }),\r\n    };\r\n  }\r\n\r\n  const best = {\r\n    score: -2,\r\n    lmin: 0,\r\n    lmax: 0,\r\n    lstep: 0,\r\n  };\r\n\r\n  let j = 1;\r\n  while (j < Infinity) {\r\n    for (let i = 0; i < Q.length; i += 1) {\r\n      const q = Q[i];\r\n      const sm = simplicityMax(q, Q, j);\r\n      if (w[0] * sm + w[1] + w[2] + w[3] < best.score) {\r\n        j = Infinity;\r\n        break;\r\n      }\r\n      let k = 2;\r\n      while (k < Infinity) {\r\n        const dm = densityMax(k, m);\r\n        if (w[0] * sm + w[1] + w[2] * dm + w[3] < best.score) {\r\n          break;\r\n        }\r\n\r\n        const delta = (dMax - dMin) / (k + 1) / j / q;\r\n        let z = Math.ceil(Math.log10(delta));\r\n\r\n        while (z < Infinity) {\r\n          const step = j * q * 10 ** z;\r\n          const cm = coverageMax(dMin, dMax, step * (k - 1));\r\n\r\n          if (w[0] * sm + w[1] * cm + w[2] * dm + w[3] < best.score) {\r\n            break;\r\n          }\r\n\r\n          const minStart = Math.floor(dMax / step) * j - (k - 1) * j;\r\n          const maxStart = Math.ceil(dMin / step) * j;\r\n\r\n          if (minStart <= maxStart) {\r\n            const count = maxStart - minStart;\r\n            for (let i = 0; i <= count; i += 1) {\r\n              const start = minStart + i;\r\n              const lMin = start * (step / j);\r\n              const lMax = lMin + step * (k - 1);\r\n              const lStep = step;\r\n\r\n              const s = simplicity(q, Q, j, lMin, lMax, lStep);\r\n              const c = coverage(dMin, dMax, lMin, lMax);\r\n              const g = density(k, m, dMin, dMax, lMin, lMax);\r\n              const l = legibility();\r\n\r\n              const score = w[0] * s + w[1] * c + w[2] * g + w[3] * l;\r\n              if (score > best.score && (!onlyLoose || (lMin <= dMin && lMax >= dMax))) {\r\n                best.lmin = lMin;\r\n                best.lmax = lMax;\r\n                best.lstep = lStep;\r\n                best.score = score;\r\n              }\r\n            }\r\n          }\r\n          z += 1;\r\n        }\r\n        k += 1;\r\n      }\r\n    }\r\n    j += 1;\r\n  }\r\n\r\n  // 处理精度问题，保证这三个数没有精度问题\r\n  const lmax = prettyNumber(best.lmax);\r\n  const lmin = prettyNumber(best.lmin);\r\n  const lstep = prettyNumber(best.lstep);\r\n\r\n  // 加 round 是为处理 extended(0.94, 1, 5)\r\n  // 保证生成的 tickCount 没有精度问题\r\n  const tickCount = Math.floor(round((lmax - lmin) / lstep)) + 1;\r\n  const ticks = new Array(tickCount);\r\n\r\n  // 少用乘法：防止出现 -1.2 + 1.2 * 3 = 2.3999999999999995 的情况\r\n  ticks[0] = prettyNumber(lmin);\r\n  for (let i = 1; i < tickCount; i++) {\r\n    ticks[i] = prettyNumber(ticks[i - 1] + lstep);\r\n  }\r\n\r\n  return {\r\n    min: Math.min(dMin, head(ticks)),\r\n    max: Math.max(dMax, last(ticks)),\r\n    ticks,\r\n  };\r\n}\r\n", "// 为了解决 js 运算的精度问题\r\nexport function prettyNumber(n: number) {\r\n  return Math.abs(n) < 1e-15 ? n : parseFloat(n.toFixed(15));\r\n}\r\n", "import { isEmpty } from '@antv/util';\r\nimport { ScaleConfig } from '../types';\r\nimport { getLogPositiveMin, log } from '../util/math';\r\n\r\n/**\r\n * 计算 log 的 ticks，考虑 min = 0 的场景\r\n * @param cfg 度量的配置项\r\n * @returns 计算后的 ticks\r\n */\r\nexport default function calculateLogTicks(cfg: ScaleConfig) {\r\n  const { base, tickCount, min, max, values } = cfg;\r\n  let minTick;\r\n  const maxTick = log(base, max);\r\n  if (min > 0) {\r\n    minTick = Math.floor(log(base, min));\r\n  } else {\r\n    const positiveMin = getLogPositiveMin(values, base, max);\r\n    minTick = Math.floor(log(base, positiveMin));\r\n  }\r\n  const count = maxTick - minTick;\r\n  const avg = Math.ceil(count / tickCount);\r\n  const ticks = [];\r\n  for (let i = minTick; i < maxTick + avg; i = i + avg) {\r\n    ticks.push(Math.pow(base, i));\r\n  }\r\n  if (min <= 0) {\r\n    // 最小值 <= 0 时显示 0\r\n    ticks.unshift(0);\r\n  }\r\n  return ticks;\r\n}\r\n", "import { prettyNumber } from './pretty-number';\r\n\r\nexport default function pretty(min: number, max: number, m: number = 5) {\r\n  if (min === max) {\r\n    return {\r\n      max,\r\n      min,\r\n      ticks: [min],\r\n    };\r\n  }\r\n\r\n  const n = m < 0 ? 0 : Math.round(m);\r\n  if (n === 0) return { max, min, ticks: [] };\r\n\r\n  /*\r\n    R pretty:\r\n    https://svn.r-project.org/R/trunk/src/appl/pretty.c\r\n    https://www.rdocumentation.org/packages/base/versions/3.5.2/topics/pretty\r\n    */\r\n  const h = 1.5; // high.u.bias\r\n  const h5 = 0.5 + 1.5 * h; // u5.bias\r\n  // 反正我也不会调参，跳过所有判断步骤\r\n  const d = max - min;\r\n  const c = d / n;\r\n  // 当d非常小的时候触发，但似乎没什么用\r\n  // const min_n = Math.floor(n / 3);\r\n  // const shrink_sml = Math.pow(2, 5);\r\n  // if (Math.log10(d) < -2) {\r\n  //   c = (_.max([ Math.abs(max), Math.abs(min) ]) * shrink_sml) / min_n;\r\n  // }\r\n\r\n  const base = Math.pow(10, Math.floor(Math.log10(c)));\r\n  let unit = base;\r\n  if (2 * base - c < h * (c - unit)) {\r\n    unit = 2 * base;\r\n    if (5 * base - c < h5 * (c - unit)) {\r\n      unit = 5 * base;\r\n      if (10 * base - c < h * (c - unit)) {\r\n        unit = 10 * base;\r\n      }\r\n    }\r\n  }\r\n  const nu = Math.ceil(max / unit);\r\n  const ns = Math.floor(min / unit);\r\n\r\n  const hi = Math.max(nu * unit, max);\r\n  const lo = Math.min(ns * unit, min);\r\n\r\n  const size = Math.floor((hi - lo) / unit) + 1;\r\n  const ticks = new Array(size);\r\n  for (let i = 0; i < size; i++) {\r\n    ticks[i] = prettyNumber(lo + i * unit);\r\n  }\r\n\r\n  return {\r\n    min: lo,\r\n    max: hi,\r\n    ticks,\r\n  };\r\n}\r\n", "import { ScaleConfig } from '../types';\r\nimport { calBase } from '../util/math';\r\nimport pretty from '../util/pretty';\r\n/**\r\n * 计算 Pow 的 ticks\r\n * @param cfg 度量的配置项\r\n * @returns 计算后的 ticks\r\n */\r\nexport default function calculatePowTicks(cfg: ScaleConfig) {\r\n  const { exponent, tickCount } = cfg;\r\n  const max = Math.ceil(calBase(exponent, cfg.max));\r\n  const min = Math.floor(calBase(exponent, cfg.min));\r\n  const ticks = pretty(min, max, tickCount).ticks;\r\n  return ticks.map((tick) => {\r\n    const factor = tick >= 0 ? 1 : -1;\r\n    return Math.pow(tick, exponent) * factor;\r\n  });\r\n}\r\n", "import { ScaleConfig } from '../types';\r\n/**\r\n * 计算几分位 https://github.com/simple-statistics/simple-statistics/blob/master/src/quantile_sorted.js\r\n * @param x  数组\r\n * @param p  百分比\r\n */\r\nfunction quantileSorted(x, p) {\r\n  const idx = x.length * p;\r\n  /*if (x.length === 0) { // 当前场景这些条件不可能命中\r\n    throw new Error('quantile requires at least one value.');\r\n  } else if (p < 0 || p > 1) {\r\n    throw new Error('quantiles must be between 0 and 1');\r\n  } else */\r\n  \r\n  if (p === 1) {\r\n    // If p is 1, directly return the last element\r\n    return x[x.length - 1];\r\n  } else if (p === 0) {\r\n    // If p is 0, directly return the first element\r\n    return x[0];\r\n  } else if (idx % 1 !== 0) {\r\n    // If p is not integer, return the next element in array\r\n    return x[Math.ceil(idx) - 1];\r\n  } else if (x.length % 2 === 0) {\r\n    // If the list has even-length, we'll take the average of this number\r\n    // and the next value, if there is one\r\n    return (x[idx - 1] + x[idx]) / 2;\r\n  } else {\r\n    // Finally, in the simple case of an integer value\r\n    // with an odd-length list, return the x value at the index.\r\n    return x[idx];\r\n  }\r\n}\r\n\r\nexport default function calculateTicks(cfg: ScaleConfig) {\r\n  const { tickCount, values } = cfg;\r\n  if (!values || !values.length) {\r\n    return [];\r\n  }\r\n  const sorted = values.slice().sort((a, b) => {\r\n    return a - b;\r\n  });\r\n  const ticks = [];\r\n  for (let i = 0; i < tickCount; i++) {\r\n    const p = i / (tickCount - 1);\r\n    ticks.push(quantileSorted(sorted, p));\r\n  }\r\n  return ticks;\r\n}\r\n", "import { head, isNil, last } from '@antv/util';\r\nimport { ScaleConfig } from '../types';\r\nimport interval from '../util/interval';\r\nimport pretty from '../util/pretty';\r\nimport strictLimit from '../util/strict-limit';\r\n\r\n/**\r\n * 计算线性的 ticks，使用 R's pretty 方法\r\n * @param cfg 度量的配置项\r\n * @returns 计算后的 ticks\r\n */\r\nexport default function linearPretty(cfg: ScaleConfig): number[] {\r\n  const { min, max, tickCount, tickInterval, minLimit, maxLimit } = cfg;\r\n  const ticks = pretty(min, max, tickCount).ticks;\r\n\r\n  if (!isNil(minLimit) || !isNil(maxLimit)) {\r\n    return strictLimit(cfg, head(ticks), last(ticks));\r\n  }\r\n  if (tickInterval) {\r\n    return interval(min, max, tickInterval).ticks;\r\n  }\r\n  return ticks;\r\n}\r\n", "import { ScaleConfig } from '../types';\r\nimport { getTickInterval } from '../util/time';\r\n\r\nexport default function calculateTimeTicks(cfg: ScaleConfig): number[] {\r\n  const { min, max, minTickInterval } = cfg;\r\n  let tickInterval = cfg.tickInterval;\r\n  let tickCount = cfg.tickCount;\r\n  // 指定 tickInterval 后 tickCount 不生效，需要重新计算\r\n  if (tickInterval) {\r\n    tickCount = Math.ceil((max - min) / tickInterval);\r\n  } else {\r\n    tickInterval = getTickInterval(min, max, tickCount)[1];\r\n    const count = (max - min) / tickInterval;\r\n    const ratio = count / tickCount;\r\n    if (ratio > 1) {\r\n      tickInterval = tickInterval * Math.ceil(ratio);\r\n    }\r\n    // 如果设置了最小间距，则使用最小间距\r\n    if (minTickInterval && tickInterval < minTickInterval) {\r\n      tickInterval = minTickInterval;\r\n    }\r\n  }\r\n\r\n  tickInterval = Math.max(Math.floor((max - min) / (2 ** 12 - 1)), tickInterval);\r\n  const ticks = [];\r\n  for (let i = min; i < max + tickInterval; i += tickInterval) {\r\n    ticks.push(i);\r\n  }\r\n  return ticks;\r\n}\r\n", "import { ScaleConfig } from '../types';\r\nimport catTicks from './cat';\r\n/**\r\n * 计算时间分类的 ticks, 保头，保尾\r\n * @param cfg 度量的配置项\r\n * @returns 计算后的 ticks\r\n */\r\nexport default function timeCat(cfg: ScaleConfig): any[] {\r\n  // 默认保留最后一条\r\n  const ticks = catTicks({ showLast: true, ...cfg });\r\n  return ticks;\r\n}\r\n", "import { ScaleConfig } from '../types';\r\nimport { DAY, getTickInterval, HOUR, MINUTE, MONTH, SECOND, YEAR } from '../util/time';\r\n\r\nfunction getYear(date: number) {\r\n  return new Date(date).getFullYear();\r\n}\r\n\r\nfunction createYear(year: number) {\r\n  return new Date(year, 0, 1).getTime();\r\n}\r\n\r\nfunction getMonth(date: number) {\r\n  return new Date(date).getMonth();\r\n}\r\n\r\nfunction diffMonth(min: number, max: number) {\r\n  const minYear = getYear(min);\r\n  const maxYear = getYear(max);\r\n  const minMonth = getMonth(min);\r\n  const maxMonth = getMonth(max);\r\n  return (maxYear - minYear) * 12 + ((maxMonth - minMonth) % 12);\r\n}\r\n\r\nfunction creatMonth(year: number, month: number) {\r\n  return new Date(year, month, 1).getTime();\r\n}\r\n\r\nfunction diffDay(min: number, max: number) {\r\n  return Math.ceil((max - min) / DAY);\r\n}\r\n\r\nfunction diffHour(min: number, max: number) {\r\n  return Math.ceil((max - min) / HOUR);\r\n}\r\n\r\nfunction diffMinus(min: number, max: number) {\r\n  return Math.ceil((max - min) / (60 * 1000));\r\n}\r\n\r\n/**\r\n * 计算 time 的 ticks，对 month, year 进行 pretty 处理\r\n * @param cfg 度量的配置项\r\n * @returns 计算后的 ticks\r\n */\r\nexport default function timePretty(cfg: ScaleConfig): number[] {\r\n  const { min, max, minTickInterval, tickCount } = cfg;\r\n  let { tickInterval } = cfg;\r\n  const ticks: number[] = [];\r\n  // 指定 tickInterval 后 tickCount 不生效，需要重新计算\r\n  if (!tickInterval) {\r\n    tickInterval = (max - min) / tickCount;\r\n    // 如果设置了最小间距，则使用最小间距\r\n    if (minTickInterval && tickInterval < minTickInterval) {\r\n      tickInterval = minTickInterval;\r\n    }\r\n  }\r\n  tickInterval = Math.max(Math.floor((max - min) / (2 ** 12 - 1)), tickInterval);\r\n  const minYear = getYear(min);\r\n  // 如果间距大于 1 年，则将开始日期从整年开始\r\n  if (tickInterval > YEAR) {\r\n    const maxYear = getYear(max);\r\n    const yearInterval = Math.ceil(tickInterval / YEAR);\r\n    for (let i = minYear; i <= maxYear + yearInterval; i = i + yearInterval) {\r\n      ticks.push(createYear(i));\r\n    }\r\n  } else if (tickInterval > MONTH) {\r\n    // 大于月时\r\n    const monthInterval = Math.ceil(tickInterval / MONTH);\r\n    const mmMoth = getMonth(min);\r\n    const dMonths = diffMonth(min, max);\r\n    for (let i = 0; i <= dMonths + monthInterval; i = i + monthInterval) {\r\n      ticks.push(creatMonth(minYear, i + mmMoth));\r\n    }\r\n  } else if (tickInterval > DAY) {\r\n    // 大于天\r\n    const date = new Date(min);\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const mday = date.getDate();\r\n    const day = Math.ceil(tickInterval / DAY);\r\n    const ddays = diffDay(min, max);\r\n    for (let i = 0; i < ddays + day; i = i + day) {\r\n      ticks.push(new Date(year, month, mday + i).getTime());\r\n    }\r\n  } else if (tickInterval > HOUR) {\r\n    // 大于小时\r\n    const date = new Date(min);\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    const hour = date.getHours();\r\n    const hours = Math.ceil(tickInterval / HOUR);\r\n    const dHours = diffHour(min, max);\r\n    for (let i = 0; i <= dHours + hours; i = i + hours) {\r\n      ticks.push(new Date(year, month, day, hour + i).getTime());\r\n    }\r\n  } else if (tickInterval > MINUTE) {\r\n    // 大于分钟\r\n    const dMinus = diffMinus(min, max);\r\n    const minutes = Math.ceil(tickInterval / MINUTE);\r\n    for (let i = 0; i <= dMinus + minutes; i = i + minutes) {\r\n      ticks.push(min + i * MINUTE);\r\n    }\r\n  } else {\r\n    // 小于分钟\r\n    let interval = tickInterval;\r\n    if (interval < SECOND) {\r\n      interval = SECOND;\r\n    }\r\n    const minSecond = Math.floor(min / SECOND) * SECOND;\r\n    const dSeconds = Math.ceil((max - min) / SECOND);\r\n    const seconds = Math.ceil(interval / SECOND);\r\n    for (let i = 0; i < dSeconds + seconds; i = i + seconds) {\r\n      ticks.push(minSecond + i * SECOND);\r\n    }\r\n  }\r\n\r\n  // 最好是能从算法能解决这个问题，但是如果指定了 tickInterval，计算 ticks，也只能这么算，所以\r\n  // 打印警告提示\r\n  if (ticks.length >= 512) {\r\n    console.warn(`Notice: current ticks length(${ticks.length}) >= 512, may cause performance issues, even out of memory. Because of the configure \"tickInterval\"(in milliseconds, current is ${tickInterval}) is too small, increase the value to solve the problem!`);\r\n  }\r\n\r\n  return ticks;\r\n}\r\n", "import cat from './cat';\r\nimport d3Linear from './d3-linear';\r\nimport linear from './linear';\r\nimport log from './log';\r\nimport pow from './pow';\r\nimport quantile from './quantile';\r\nimport rPretty from './r-prettry';\r\nimport { getTickMethod, registerTickMethod } from './register';\r\nimport time from './time';\r\nimport timeCat from './time-cat';\r\nimport timePretty from './time-pretty';\r\n\r\nregisterTickMethod('cat', cat);\r\nregisterTickMethod('time-cat', timeCat);\r\nregisterTickMethod('wilkinson-extended', linear);\r\nregisterTickMethod('r-pretty', rPretty);\r\nregisterTickMethod('time', time);\r\nregisterTickMethod('time-pretty', timePretty);\r\nregisterTickMethod('log', log);\r\nregisterTickMethod('pow', pow);\r\nregisterTickMethod('quantile', quantile);\r\nregisterTickMethod('d3-linear', d3Linear);\r\n\r\nexport { getTickMethod, registerTickMethod };\r\n", "import Scale from './base';\r\nimport Category from './category/base';\r\nimport TimeCat from './category/time';\r\nimport Linear from './continuous/linear';\r\nimport Log from './continuous/log';\r\nimport Pow from './continuous/pow';\r\nimport Time from './continuous/time';\r\nimport Quantize from './continuous/quantize';\r\nimport Quantile from './continuous/quantile';\r\nimport { getScale, registerScale } from './factory';\r\nimport Identity from './identity/index';\r\nimport { getTickMethod, registerTickMethod } from './tick-method/index';\r\nimport { ScaleConfig, Tick } from './types';\r\n\r\nregisterScale('cat', Category);\r\nregisterScale('category', Category);\r\nregisterScale('identity', Identity);\r\nregisterScale('linear', Linear);\r\nregisterScale('log', Log);\r\nregisterScale('pow', Pow);\r\nregisterScale('time', Time);\r\nregisterScale('timeCat', TimeCat);\r\nregisterScale('quantize', Quantize);\r\nregisterScale('quantile', Quantile);\r\n\r\nexport {\r\n  Category,\r\n  Identity,\r\n  Linear,\r\n  Log,\r\n  Pow,\r\n  Time,\r\n  TimeCat,\r\n  Quantile,\r\n  Quantize,\r\n  Scale,\r\n  getScale,\r\n  registerScale,\r\n  ScaleConfig,\r\n  Tick,\r\n  getTickMethod,\r\n  registerTickMethod,\r\n};\r\n"],
  "mappings": "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",
  "names": ["now", "t0", "t1", "t2", "EventEmitter", "GraphEvent", "a", "b", "init_esm", "init_esm", "toSymmetry", "tolerance", "E", "last", "fillPath", "fillPathByDiff", "formatPath", "parsePathArray", "parsePathString", "pathToAbsolute", "pathToCurve", "rectPath", "SPACES", "PATH_COMMAND", "PATH_VALUES", "a", "b", "rotate", "x", "y", "rad", "path", "pcom", "i", "pi", "path2", "t1", "t2", "t12", "t3", "points", "t", "filled", "isParent", "Base", "BrowserInfo", "version", "NodeInfo", "version", "SearchBotDeviceInfo", "version", "BotInfo", "ReactNativeInfo", "browser", "version", "init_esm", "WILDCARD", "Element", "ShapeBase", "i", "rotate", "Container", "box", "ShapeBase", "format", "cosh", "sinh", "t1", "t2", "t3", "color", "rgb", "i", "degrees", "parse", "rotate", "b0", "b1", "hsl", "hue", "hcl", "hue", "cubehelix", "hue", "linear", "linear", "polyIn", "custom", "polyOut", "polyInOut", "custom", "backIn", "backOut", "backInOut", "custom", "elasticIn", "a", "p", "elasticOut", "elasticInOut", "parsePathString", "fillPathByDiff", "formatPath", "Timeline", "EventController", "now", "Canvas", "AbstractGroup", "AbstractShape", "isNumberEqual", "interval", "isNumberEqual", "xExtrema", "yExtrema", "derivativeAt", "extrema", "t1", "t2", "isNumberEqual", "xExtrema", "yExtrema", "nearestPoint", "cos", "sin", "nearestPoint", "polyline_default", "polygon_default", "box", "line_default", "ellipse_default", "polyline_default", "polygon_default", "line_default", "ellipse_default", "base_default", "circle_default", "ellipse_default", "line_default", "path_default", "polygon_default", "polyline_default", "rect_default", "text_default", "distance", "isSamePoint", "box", "color", "vMag", "vRatio", "vAngle", "getArcParams", "isSamePoint", "path_default", "distance", "getArcParams", "Group", "bbox", "group_default", "ShapeBase", "group_default", "box", "base_default", "Circle", "distance", "base_default", "circle_default", "Ellipse", "base_default", "ellipse_default", "ImageShape", "base_default", "Line", "base_default", "line_default", "Marker", "base_default", "tolerance", "dcmp", "onSegment", "isInPolygon", "init_esm", "distance", "transform", "hasArc", "box", "path_default", "isInPolygon", "Path", "hasArc", "path_default", "base_default", "last", "Polygon", "isInPolygon", "base_default", "polygon_default", "PolyLine", "distance", "base_default", "polyline_default", "Rect", "base_default", "rect_default", "Text", "base_default", "text_default", "Canvas", "group_default", "canvas_default", "canvas_default", "group_default", "getArcParams", "transform", "drawChildren", "refreshElement", "shape_exports", "base_default", "circle_default", "ellipse_default", "image_default", "line_default", "marker_default", "path_default", "polygon_default", "polyline_default", "rect_default", "text_default", "Group", "refreshElement", "shape_exports", "drawChildren", "group_default", "ShapeBase", "shape_exports", "group_default", "refreshElement", "base_default", "Circle", "base_default", "circle_default", "Dom", "base_default", "Ellipse", "base_default", "ellipse_default", "Image", "base_default", "image_default", "Line", "base_default", "line_default", "Symbols", "Marker", "base_default", "marker_default", "Path", "base_default", "path_default", "Polygon", "base_default", "polygon_default", "Polyline", "base_default", "polyline_default", "parseRadius", "Rect", "parseRadius", "base_default", "rect_default", "Text", "browser", "base_default", "text_default", "regexLG", "regexRG", "regexColorStop", "addStop", "parseLineGradient", "color", "parseRadialGradient", "Gradient", "Shadow", "Arrow", "Clip", "regexPR", "Pattern", "Defs", "Canvas", "shape_exports", "group_default", "drawChildren", "canvas_default", "esm_exports", "canvas_default", "group_default", "shape_exports", "version", "version", "createDom", "getHeight", "getHeight", "Scale", "Category", "size", "base_default", "v", "now", "format", "field", "interval", "TimeCat", "base_default", "Continuous", "base_default", "Linear", "base_default", "Log", "base_default", "Pow", "exponent", "base_default", "Time", "time_default", "Quantize", "base_default", "quantize_default", "Quantile", "quantize_default", "Identity", "base_default", "i", "interval", "linear", "D3Linear", "interval", "linear", "size", "exponent", "interval", "linear", "base_default", "time_default", "quantize_default"]
}

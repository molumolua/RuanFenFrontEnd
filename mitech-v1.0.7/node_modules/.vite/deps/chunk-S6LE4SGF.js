import {
  _export_sfc,
  addUnit,
  buildProps,
  definePropType,
  isUndefined,
  useNamespace,
  withInstall
} from "./chunk-W5JDI3O2.js";
import {
  computed2 as computed,
  createElementBlock,
  defineComponent,
  mergeProps,
  openBlock,
  renderSlot,
  unref
} from "./chunk-HMQ5RUGX.js";

// node_modules/element-plus/es/components/icon/src/icon.mjs
var iconProps = buildProps({
  size: {
    type: definePropType([Number, String])
  },
  color: {
    type: String
  }
});

// node_modules/element-plus/es/components/icon/src/icon2.mjs
var __default__ = defineComponent({
  name: "ElIcon",
  inheritAttrs: false
});
var _sfc_main = defineComponent({
  ...__default__,
  props: iconProps,
  setup(__props) {
    const props = __props;
    const ns = useNamespace("icon");
    const style = computed(() => {
      const { size, color } = props;
      if (!size && !color)
        return {};
      return {
        fontSize: isUndefined(size) ? void 0 : addUnit(size),
        "--color": color
      };
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("i", mergeProps({
        class: unref(ns).b(),
        style: unref(style)
      }, _ctx.$attrs), [
        renderSlot(_ctx.$slots, "default")
      ], 16);
    };
  }
});
var Icon = _export_sfc(_sfc_main, [["__file", "icon.vue"]]);

// node_modules/element-plus/es/components/icon/index.mjs
var ElIcon = withInstall(Icon);

export {
  iconProps,
  ElIcon
};
//# sourceMappingURL=chunk-S6LE4SGF.js.map

{
  "version": 3,
  "sources": ["../../../packages/components/form/src/constants.ts", "../../../packages/components/form/src/hooks/use-form-common-props.ts", "../../../packages/components/form/src/hooks/use-form-item.ts", "../../../packages/components/form/src/form.ts", "../../../packages/components/form/src/utils.ts", "../../../packages/components/form/src/form.vue", "../../src/util.ts", "../../src/rule/required.ts", "../../src/rule/whitespace.ts", "../../src/rule/url.ts", "../../src/rule/type.ts", "../../src/rule/range.ts", "../../src/rule/enum.ts", "../../src/rule/pattern.ts", "../../src/rule/index.ts", "../../src/validator/string.ts", "../../src/validator/method.ts", "../../src/validator/number.ts", "../../src/validator/boolean.ts", "../../src/validator/regexp.ts", "../../src/validator/integer.ts", "../../src/validator/float.ts", "../../src/validator/array.ts", "../../src/validator/object.ts", "../../src/validator/enum.ts", "../../src/validator/pattern.ts", "../../src/validator/date.ts", "../../src/validator/required.ts", "../../src/validator/type.ts", "../../src/validator/any.ts", "../../src/validator/index.ts", "../../src/messages.ts", "../../src/index.ts", "../../../packages/components/form/src/form-item.ts", "../../../packages/components/form/src/form-label-wrap.tsx", "../../../packages/components/form/src/form-item.vue", "../../../packages/components/form/index.ts", "../../../packages/components/config-provider/src/constants.ts", "../../../packages/components/config-provider/src/hooks/use-global-config.ts", "../../../packages/components/config-provider/src/config-provider-props.ts", "../../../packages/components/config-provider/src/config-provider.ts", "../../../packages/components/config-provider/index.ts", "../../../packages/components/button/src/constants.ts", "../../../packages/components/button/src/use-button.ts", "../../../packages/components/button/src/button.ts", "../../@ctrl/tinycolor/dist/module/util.js", "../../@ctrl/tinycolor/dist/module/conversion.js", "../../@ctrl/tinycolor/dist/module/css-color-names.js", "../../@ctrl/tinycolor/dist/module/format-input.js", "../../@ctrl/tinycolor/dist/module/index.js", "../../../packages/components/button/src/button-custom.ts", "../../../packages/components/button/src/button.vue", "../../../packages/components/button/src/button-group.ts", "../../../packages/components/button/src/button-group.vue", "../../../packages/components/button/index.ts"],
  "sourcesContent": ["import type { InjectionKey } from 'vue'\nimport type { FormContext, FormItemContext } from './types'\n\nexport const formContextKey: InjectionKey<FormContext> =\n  Symbol('formContextKey')\nexport const formItemContextKey: InjectionKey<FormItemContext> =\n  Symbol('formItemContextKey')\n", "import { computed, inject, ref, unref } from 'vue'\nimport { useGlobalSize, useProp } from '@element-plus/hooks'\nimport { formContextKey, formItemContextKey } from '../constants'\n\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { MaybeRef } from '@vueuse/core'\n\nexport const useFormSize = (\n  fallback?: MaybeRef<ComponentSize | undefined>,\n  ignore: Partial<Record<'prop' | 'form' | 'formItem' | 'global', boolean>> = {}\n) => {\n  const emptyRef = ref(undefined)\n\n  const size = ignore.prop ? emptyRef : useProp<ComponentSize>('size')\n  const globalConfig = ignore.global ? emptyRef : useGlobalSize()\n  const form = ignore.form\n    ? { size: undefined }\n    : inject(formContextKey, undefined)\n  const formItem = ignore.formItem\n    ? { size: undefined }\n    : inject(formItemContextKey, undefined)\n\n  return computed(\n    (): ComponentSize =>\n      size.value ||\n      unref(fallback) ||\n      formItem?.size ||\n      form?.size ||\n      globalConfig.value ||\n      ''\n  )\n}\n\nexport const useFormDisabled = (fallback?: MaybeRef<boolean | undefined>) => {\n  const disabled = useProp<boolean>('disabled')\n  const form = inject(formContextKey, undefined)\n  return computed(\n    () => disabled.value || unref(fallback) || form?.disabled || false\n  )\n}\n\n// These exports are used for preventing breaking changes\nexport const useSize = useFormSize\nexport const useDisabled = useFormDisabled\n", "import {\n  computed,\n  inject,\n  onMounted,\n  onUnmounted,\n  ref,\n  toRef,\n  watch,\n} from 'vue'\nimport { useId } from '@element-plus/hooks'\nimport { formContextKey, formItemContextKey } from '../constants'\n\nimport type { ComputedRef, Ref, WatchStopHandle } from 'vue'\nimport type { FormItemContext } from '../types'\n\nexport const useFormItem = () => {\n  const form = inject(formContextKey, undefined)\n  const formItem = inject(formItemContextKey, undefined)\n  return {\n    form,\n    formItem,\n  }\n}\n\nexport type IUseFormItemInputCommonProps = {\n  id?: string\n  label?: string | number | boolean | Record<string, any>\n}\n\nexport const useFormItemInputId = (\n  props: Partial<IUseFormItemInputCommonProps>,\n  {\n    formItemContext,\n    disableIdGeneration,\n    disableIdManagement,\n  }: {\n    formItemContext?: FormItemContext\n    disableIdGeneration?: ComputedRef<boolean> | Ref<boolean>\n    disableIdManagement?: ComputedRef<boolean> | Ref<boolean>\n  }\n) => {\n  if (!disableIdGeneration) {\n    disableIdGeneration = ref<boolean>(false)\n  }\n  if (!disableIdManagement) {\n    disableIdManagement = ref<boolean>(false)\n  }\n\n  const inputId = ref<string>()\n  let idUnwatch: WatchStopHandle | undefined = undefined\n\n  const isLabeledByFormItem = computed<boolean>(() => {\n    return !!(\n      !props.label &&\n      formItemContext &&\n      formItemContext.inputIds &&\n      formItemContext.inputIds?.length <= 1\n    )\n  })\n\n  // Generate id for ElFormItem label if not provided as prop\n  onMounted(() => {\n    idUnwatch = watch(\n      [toRef(props, 'id'), disableIdGeneration] as any,\n      ([id, disableIdGeneration]: [string, boolean]) => {\n        const newId = id ?? (!disableIdGeneration ? useId().value : undefined)\n        if (newId !== inputId.value) {\n          if (formItemContext?.removeInputId) {\n            inputId.value && formItemContext.removeInputId(inputId.value)\n            if (!disableIdManagement?.value && !disableIdGeneration && newId) {\n              formItemContext.addInputId(newId)\n            }\n          }\n          inputId.value = newId\n        }\n      },\n      { immediate: true }\n    )\n  })\n\n  onUnmounted(() => {\n    idUnwatch && idUnwatch()\n    if (formItemContext?.removeInputId) {\n      inputId.value && formItemContext.removeInputId(inputId.value)\n    }\n  })\n\n  return {\n    isLabeledByFormItem,\n    inputId,\n  }\n}\n", "import { componentSizes } from '@element-plus/constants'\nimport {\n  buildProps,\n  definePropType,\n  isArray,\n  isBoolean,\n  isString,\n} from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { FormItemProp } from './form-item'\nimport type { FormRules } from './types'\n\nconst formMetaProps = buildProps({\n  /**\n   * @description Control the size of components in this form.\n   */\n  size: {\n    type: String,\n    values: componentSizes,\n  },\n  /**\n   * @description Whether to disable all components in this form. If set to `true`, it will override the `disabled` prop of the inner component.\n   */\n  disabled: Boolean,\n} as const)\n\nexport const formProps = buildProps({\n  ...formMetaProps,\n  /**\n   * @description Data of form component.\n   */\n  model: Object,\n  /**\n   * @description Validation rules of form.\n   */\n  rules: {\n    type: definePropType<FormRules>(Object),\n  },\n  /**\n   * @description Position of label. If set to `'left'` or `'right'`, `label-width` prop is also required.\n   */\n  labelPosition: {\n    type: String,\n    values: ['left', 'right', 'top'],\n    default: 'right',\n  },\n  /**\n   * @description Position of asterisk.\n   */\n  requireAsteriskPosition: {\n    type: String,\n    values: ['left', 'right'],\n    default: 'left',\n  },\n  /**\n   * @description Width of label, e.g. `'50px'`. All its direct child form items will inherit this value. `auto` is supported.\n   */\n  labelWidth: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description Suffix of the label.\n   */\n  labelSuffix: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description Whether the form is inline.\n   */\n  inline: Boolean,\n  /**\n   * @description Whether to display the error message inline with the form item.\n   */\n  inlineMessage: Boolean,\n  /**\n   * @description Whether to display an icon indicating the validation result.\n   */\n  statusIcon: Boolean,\n  /**\n   * @description Whether to show the error message.\n   */\n  showMessage: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Whether to trigger validation when the `rules` prop is changed.\n   */\n  validateOnRuleChange: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Whether to hide required fields should have a red asterisk (star) beside their labels.\n   */\n  hideRequiredAsterisk: Boolean,\n  /**\n   * @description When validation fails, scroll to the first error form entry.\n   */\n  scrollToError: Boolean,\n  /**\n   * @description When validation fails, it scrolls to the first error item based on the scrollIntoView option.\n   */\n  scrollIntoViewOptions: {\n    type: [Object, Boolean],\n  },\n} as const)\nexport type FormProps = ExtractPropTypes<typeof formProps>\nexport type FormMetaProps = ExtractPropTypes<typeof formMetaProps>\n\nexport const formEmits = {\n  validate: (prop: FormItemProp, isValid: boolean, message: string) =>\n    (isArray(prop) || isString(prop)) &&\n    isBoolean(isValid) &&\n    isString(message),\n}\nexport type FormEmits = typeof formEmits\n", "import { computed, ref } from 'vue'\nimport { debugWarn, ensureArray } from '@element-plus/utils'\nimport type { Arrayable } from '@element-plus/utils'\nimport type { FormItemContext } from './types'\nimport type { FormItemProp } from './form-item'\n\nconst SCOPE = 'ElForm'\n\nexport function useFormLabelWidth() {\n  const potentialLabelWidthArr = ref<number[]>([])\n\n  const autoLabelWidth = computed(() => {\n    if (!potentialLabelWidthArr.value.length) return '0'\n    const max = Math.max(...potentialLabelWidthArr.value)\n    return max ? `${max}px` : ''\n  })\n\n  function getLabelWidthIndex(width: number) {\n    const index = potentialLabelWidthArr.value.indexOf(width)\n    if (index === -1 && autoLabelWidth.value === '0') {\n      debugWarn(SCOPE, `unexpected width ${width}`)\n    }\n    return index\n  }\n\n  function registerLabelWidth(val: number, oldVal: number) {\n    if (val && oldVal) {\n      const index = getLabelWidthIndex(oldVal)\n      potentialLabelWidthArr.value.splice(index, 1, val)\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val)\n    }\n  }\n\n  function deregisterLabelWidth(val: number) {\n    const index = getLabelWidthIndex(val)\n    if (index > -1) {\n      potentialLabelWidthArr.value.splice(index, 1)\n    }\n  }\n\n  return {\n    autoLabelWidth,\n    registerLabelWidth,\n    deregisterLabelWidth,\n  }\n}\n\nexport const filterFields = (\n  fields: FormItemContext[],\n  props: Arrayable<FormItemProp>\n) => {\n  const normalized = ensureArray(props)\n  return normalized.length > 0\n    ? fields.filter((field) => field.prop && normalized.includes(field.prop))\n    : fields\n}\n", "<template>\n  <form :class=\"formClasses\">\n    <slot />\n  </form>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, reactive, toRefs, watch } from 'vue'\nimport { debugWarn, isFunction } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormSize } from './hooks'\nimport { formContextKey } from './constants'\nimport { formEmits, formProps } from './form'\nimport { filterFields, useFormLabelWidth } from './utils'\n\nimport type { ValidateFieldsError } from 'async-validator'\nimport type { Arrayable } from '@element-plus/utils'\nimport type {\n  FormContext,\n  FormItemContext,\n  FormValidateCallback,\n  FormValidationResult,\n} from './types'\nimport type { FormItemProp } from './form-item'\n\nconst COMPONENT_NAME = 'ElForm'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\nconst props = defineProps(formProps)\nconst emit = defineEmits(formEmits)\n\nconst fields: FormItemContext[] = []\n\nconst formSize = useFormSize()\nconst ns = useNamespace('form')\nconst formClasses = computed(() => {\n  const { labelPosition, inline } = props\n  return [\n    ns.b(),\n    // todo: in v2.2.0, we can remove default\n    // in fact, remove it doesn't affect the final style\n    ns.m(formSize.value || 'default'),\n    {\n      [ns.m(`label-${labelPosition}`)]: labelPosition,\n      [ns.m('inline')]: inline,\n    },\n  ]\n})\n\nconst addField: FormContext['addField'] = (field) => {\n  fields.push(field)\n}\n\nconst removeField: FormContext['removeField'] = (field) => {\n  if (field.prop) {\n    fields.splice(fields.indexOf(field), 1)\n  }\n}\n\nconst resetFields: FormContext['resetFields'] = (properties = []) => {\n  if (!props.model) {\n    debugWarn(COMPONENT_NAME, 'model is required for resetFields to work.')\n    return\n  }\n  filterFields(fields, properties).forEach((field) => field.resetField())\n}\n\nconst clearValidate: FormContext['clearValidate'] = (props = []) => {\n  filterFields(fields, props).forEach((field) => field.clearValidate())\n}\n\nconst isValidatable = computed(() => {\n  const hasModel = !!props.model\n  if (!hasModel) {\n    debugWarn(COMPONENT_NAME, 'model is required for validate to work.')\n  }\n  return hasModel\n})\n\nconst obtainValidateFields = (props: Arrayable<FormItemProp>) => {\n  if (fields.length === 0) return []\n\n  const filteredFields = filterFields(fields, props)\n  if (!filteredFields.length) {\n    debugWarn(COMPONENT_NAME, 'please pass correct props!')\n    return []\n  }\n  return filteredFields\n}\n\nconst validate = async (\n  callback?: FormValidateCallback\n): FormValidationResult => validateField(undefined, callback)\n\nconst doValidateField = async (\n  props: Arrayable<FormItemProp> = []\n): Promise<boolean> => {\n  if (!isValidatable.value) return false\n\n  const fields = obtainValidateFields(props)\n  if (fields.length === 0) return true\n\n  let validationErrors: ValidateFieldsError = {}\n  for (const field of fields) {\n    try {\n      await field.validate('')\n    } catch (fields) {\n      validationErrors = {\n        ...validationErrors,\n        ...(fields as ValidateFieldsError),\n      }\n    }\n  }\n\n  if (Object.keys(validationErrors).length === 0) return true\n  return Promise.reject(validationErrors)\n}\n\nconst validateField: FormContext['validateField'] = async (\n  modelProps = [],\n  callback\n) => {\n  const shouldThrow = !isFunction(callback)\n  try {\n    const result = await doValidateField(modelProps)\n    // When result is false meaning that the fields are not validatable\n    if (result === true) {\n      callback?.(result)\n    }\n    return result\n  } catch (e) {\n    if (e instanceof Error) throw e\n\n    const invalidFields = e as ValidateFieldsError\n\n    if (props.scrollToError) {\n      scrollToField(Object.keys(invalidFields)[0])\n    }\n    callback?.(false, invalidFields)\n    return shouldThrow && Promise.reject(invalidFields)\n  }\n}\n\nconst scrollToField = (prop: FormItemProp) => {\n  const field = filterFields(fields, prop)[0]\n  if (field) {\n    field.$el?.scrollIntoView(props.scrollIntoViewOptions)\n  }\n}\n\nwatch(\n  () => props.rules,\n  () => {\n    if (props.validateOnRuleChange) {\n      validate().catch((err) => debugWarn(err))\n    }\n  },\n  { deep: true }\n)\n\nprovide(\n  formContextKey,\n  reactive({\n    ...toRefs(props),\n    emit,\n\n    resetFields,\n    clearValidate,\n    validateField,\n    addField,\n    removeField,\n\n    ...useFormLabelWidth(),\n  })\n)\n\ndefineExpose({\n  /**\n   * @description Validate the whole form. Receives a callback or returns `Promise`.\n   */\n  validate,\n  /**\n   * @description Validate specified fields.\n   */\n  validateField,\n  /**\n   * @description Reset specified fields and remove validation result.\n   */\n  resetFields,\n  /**\n   * @description Clear validation message for specified fields.\n   */\n  clearValidate,\n  /**\n   * @description Scroll to the specified fields.\n   */\n  scrollToField,\n})\n</script>\n", "/* eslint no-console:0 */\n\nimport {\n  ValidateError,\n  ValidateOption,\n  RuleValuePackage,\n  InternalRuleItem,\n  SyncErrorType,\n  RuleType,\n  Value,\n  Values,\n} from './interface';\n\nconst formatRegExp = /%[sdj%]/g;\n\ndeclare var ASYNC_VALIDATOR_NO_WARNING;\n\nexport let warning: (type: string, errors: SyncErrorType[]) => void = () => {};\n\n// don't print warning message when in production env or node runtime\nif (\n  typeof process !== 'undefined' &&\n  process.env &&\n  process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined'\n) {\n  warning = (type, errors) => {\n    if (\n      typeof console !== 'undefined' &&\n      console.warn &&\n      typeof ASYNC_VALIDATOR_NO_WARNING === 'undefined'\n    ) {\n      if (errors.every(e => typeof e === 'string')) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\n\nexport function convertFieldsError(\n  errors: ValidateError[],\n): Record<string, ValidateError[]> {\n  if (!errors || !errors.length) return null;\n  const fields = {};\n  errors.forEach(error => {\n    const field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\n\nexport function format(\n  template: ((...args: any[]) => string) | string,\n  ...args: any[]\n): string {\n  let i = 0;\n  const len = args.length;\n  if (typeof template === 'function') {\n    return template.apply(null, args);\n  }\n  if (typeof template === 'string') {\n    let str = template.replace(formatRegExp, x => {\n      if (x === '%%') {\n        return '%';\n      }\n      if (i >= len) {\n        return x;\n      }\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n        case '%d':\n          return (Number(args[i++]) as unknown) as string;\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n          break;\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n  return template;\n}\n\nfunction isNativeStringType(type: string) {\n  return (\n    type === 'string' ||\n    type === 'url' ||\n    type === 'hex' ||\n    type === 'email' ||\n    type === 'date' ||\n    type === 'pattern'\n  );\n}\n\nexport function isEmptyValue(value: Value, type?: string) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n  return false;\n}\n\nexport function isEmptyObject(obj: object) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction asyncParallelArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  const results: ValidateError[] = [];\n  let total = 0;\n  const arrLength = arr.length;\n\n  function count(errors: ValidateError[]) {\n    results.push(...(errors || []));\n    total++;\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n\n  arr.forEach(a => {\n    func(a, count);\n  });\n}\n\nfunction asyncSerialArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  let index = 0;\n  const arrLength = arr.length;\n\n  function next(errors: ValidateError[]) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n    const original = index;\n    index = index + 1;\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n\n  next([]);\n}\n\nfunction flattenObjArr(objArr: Record<string, RuleValuePackage[]>) {\n  const ret: RuleValuePackage[] = [];\n  Object.keys(objArr).forEach(k => {\n    ret.push(...(objArr[k] || []));\n  });\n  return ret;\n}\n\nexport class AsyncValidationError extends Error {\n  errors: ValidateError[];\n  fields: Record<string, ValidateError[]>;\n\n  constructor(\n    errors: ValidateError[],\n    fields: Record<string, ValidateError[]>,\n  ) {\n    super('Async Validation Error');\n    this.errors = errors;\n    this.fields = fields;\n  }\n}\n\ntype ValidateFunc = (\n  data: RuleValuePackage,\n  doIt: (errors: ValidateError[]) => void,\n) => void;\n\nexport function asyncMap(\n  objArr: Record<string, RuleValuePackage[]>,\n  option: ValidateOption,\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n  source: Values,\n): Promise<Values> {\n  if (option.first) {\n    const pending = new Promise<Values>((resolve, reject) => {\n      const next = (errors: ValidateError[]) => {\n        callback(errors);\n        return errors.length\n          ? reject(new AsyncValidationError(errors, convertFieldsError(errors)))\n          : resolve(source);\n      };\n      const flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n    pending.catch(e => e);\n    return pending;\n  }\n  const firstFields =\n    option.firstFields === true\n      ? Object.keys(objArr)\n      : option.firstFields || [];\n\n  const objArrKeys = Object.keys(objArr);\n  const objArrLength = objArrKeys.length;\n  let total = 0;\n  const results: ValidateError[] = [];\n  const pending = new Promise<Values>((resolve, reject) => {\n    const next = (errors: ValidateError[]) => {\n      results.push.apply(results, errors);\n      total++;\n      if (total === objArrLength) {\n        callback(results);\n        return results.length\n          ? reject(\n              new AsyncValidationError(results, convertFieldsError(results)),\n            )\n          : resolve(source);\n      }\n    };\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve(source);\n    }\n    objArrKeys.forEach(key => {\n      const arr = objArr[key];\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending.catch(e => e);\n  return pending;\n}\n\nfunction isErrorObj(\n  obj: ValidateError | string | (() => string),\n): obj is ValidateError {\n  return !!(obj && (obj as ValidateError).message !== undefined);\n}\n\nfunction getValue(value: Values, path: string[]) {\n  let v = value;\n  for (let i = 0; i < path.length; i++) {\n    if (v == undefined) {\n      return v;\n    }\n    v = v[path[i]];\n  }\n  return v;\n}\n\nexport function complementError(rule: InternalRuleItem, source: Values) {\n  return (oe: ValidateError | (() => string) | string): ValidateError => {\n    let fieldValue;\n    if (rule.fullFields) {\n      fieldValue = getValue(source, rule.fullFields);\n    } else {\n      fieldValue = source[(oe as any).field || rule.fullField];\n    }\n    if (isErrorObj(oe)) {\n      oe.field = oe.field || rule.fullField;\n      oe.fieldValue = fieldValue;\n      return oe;\n    }\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      fieldValue,\n      field: ((oe as unknown) as ValidateError).field || rule.fullField,\n    };\n  };\n}\n\nexport function deepMerge<T extends object>(target: T, source: Partial<T>): T {\n  if (source) {\n    for (const s in source) {\n      if (source.hasOwnProperty(s)) {\n        const value = source[s];\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = {\n            ...target[s],\n            ...value,\n          };\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n  return target;\n}\n", "import { ExecuteRule } from '../interface';\nimport { format, isEmptyValue } from '../util';\n\nconst required: ExecuteRule = (rule, value, source, errors, options, type) => {\n  if (\n    rule.required &&\n    (!source.hasOwnProperty(rule.field) ||\n      isEmptyValue(value, type || rule.type))\n  ) {\n    errors.push(format(options.messages.required, rule.fullField));\n  }\n};\n\nexport default required;\n", "import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nconst whitespace: ExecuteRule = (rule, value, source, errors, options) => {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(format(options.messages.whitespace, rule.fullField));\n  }\n};\n\nexport default whitespace;\n", "// https://github.com/kevva/url-regex/blob/master/index.js\nlet urlReg: RegExp;\n\nexport default () => {\n  if (urlReg) {\n    return urlReg;\n  }\n\n  const word = '[a-fA-F\\\\d:]';\n  const b = options =>\n    options && options.includeBoundaries\n      ? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))`\n      : '';\n\n  const v4 =\n    '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\n  const v6seg = '[a-fA-F\\\\d]{1,4}';\n  const v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`\n    .replace(/\\s*\\/\\/.*$/gm, '')\n    .replace(/\\n/g, '')\n    .trim();\n\n  // Pre-compile only the exact regexes because adding a global flag make regexes stateful\n  const v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\n  const v4exact = new RegExp(`^${v4}$`);\n  const v6exact = new RegExp(`^${v6}$`);\n\n  const ip = options =>\n    options && options.exact\n      ? v46Exact\n      : new RegExp(\n          `(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(\n            options,\n          )})`,\n          'g',\n        );\n\n  ip.v4 = (options?) =>\n    options && options.exact\n      ? v4exact\n      : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\n  ip.v6 = (options?) =>\n    options && options.exact\n      ? v6exact\n      : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\n  const protocol = `(?:(?:[a-z]+:)?//)`;\n  const auth = '(?:\\\\S+(?::\\\\S*)?@)?';\n  const ipv4 = ip.v4().source;\n  const ipv6 = ip.v6().source;\n  const host = '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)';\n  const domain =\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*';\n  const tld = `(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))`;\n  const port = '(?::\\\\d{2,5})?';\n  const path = '(?:[/?#][^\\\\s\"]*)?';\n  const regex = `(?:${protocol}|www\\\\.)${auth}(?:localhost|${ipv4}|${ipv6}|${host}${domain}${tld})${port}${path}`;\n  urlReg = new RegExp(`(?:^${regex}$)`, 'i');\n  return urlReg;\n};\n", "import { ExecuteRule, Value } from '../interface';\nimport { format } from '../util';\nimport required from './required';\nimport getUrlRegex from './url';\n/* eslint max-len:0 */\n\nconst pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+\\.)+[a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}))$/,\n  // url: new RegExp(\n  //   '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\n  //   'i',\n  // ),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,\n};\n\nconst types = {\n  integer(value: Value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float(value: Value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array(value: Value) {\n    return Array.isArray(value);\n  },\n  regexp(value: Value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date(value: Value) {\n    return (\n      typeof value.getTime === 'function' &&\n      typeof value.getMonth === 'function' &&\n      typeof value.getYear === 'function' &&\n      !isNaN(value.getTime())\n    );\n  },\n  number(value: Value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object(value: Value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method(value: Value) {\n    return typeof value === 'function';\n  },\n  email(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 320 &&\n      !!value.match(pattern.email)\n    );\n  },\n  url(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 2048 &&\n      !!value.match(getUrlRegex())\n    );\n  },\n  hex(value: Value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  },\n};\n\nconst type: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n  const custom = [\n    'integer',\n    'float',\n    'array',\n    'regexp',\n    'object',\n    'method',\n    'email',\n    'number',\n    'date',\n    'url',\n    'hex',\n  ];\n  const ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(\n        format(options.messages.types[ruleType], rule.fullField, rule.type),\n      );\n    }\n    // straight typeof check\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(\n      format(options.messages.types[ruleType], rule.fullField, rule.type),\n    );\n  }\n};\n\nexport default type;\n", "import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst range: ExecuteRule = (rule, value, source, errors, options) => {\n  const len = typeof rule.len === 'number';\n  const min = typeof rule.min === 'number';\n  const max = typeof rule.max === 'number';\n  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n  const spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  let val = value;\n  let key = null;\n  const num = typeof value === 'number';\n  const str = typeof value === 'string';\n  const arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(\n      format(options.messages[key].range, rule.fullField, rule.min, rule.max),\n    );\n  }\n};\n\nexport default range;\n", "import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteRule = (rule, value, source, errors, options) => {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(\n      format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')),\n    );\n  }\n};\n\nexport default enumerable;\n", "import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst pattern: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    } else if (typeof rule.pattern === 'string') {\n      const _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    }\n  }\n};\n\nexport default pattern;\n", "import required from './required';\nimport whitespace from './whitespace';\nimport type from './type';\nimport range from './range';\nimport enumRule from './enum';\nimport pattern from './pattern';\n\nexport default {\n  required,\n  whitespace,\n  type,\n  range,\n  enum: enumRule,\n  pattern,\n};\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst string: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'string');\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default string;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst method: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default method;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst number: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default number;\n", "import { isEmptyValue } from '../util';\nimport rules from '../rule';\nimport { ExecuteValidator } from '../interface';\n\nconst boolean: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default boolean;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst regexp: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default regexp;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst integer: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default integer;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst floatFn: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default floatFn;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule/index';\n\nconst array: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'array');\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default array;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst object: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default object;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteValidator = (\n  rule,\n  value,\n  callback,\n  source,\n  options,\n) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default enumerable;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst pattern: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default pattern;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst date: ExecuteValidator = (rule, value, callback, source, options) => {\n  // console.log('integer rule called %j', rule);\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  // console.log('validate on %s value', value);\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'date')) {\n      let dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default date;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\n\nconst required: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n};\n\nexport default required;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst type: ExecuteValidator = (rule, value, callback, source, options) => {\n  const ruleType = rule.type;\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, ruleType);\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default type;\n", "import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst any: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n  }\n  callback(errors);\n};\n\nexport default any;\n", "import string from './string';\nimport method from './method';\nimport number from './number';\nimport boolean from './boolean';\nimport regexp from './regexp';\nimport integer from './integer';\nimport float from './float';\nimport array from './array';\nimport object from './object';\nimport enumValidator from './enum';\nimport pattern from './pattern';\nimport date from './date';\nimport required from './required';\nimport type from './type';\nimport any from './any';\n\nexport default {\n  string,\n  method,\n  number,\n  boolean,\n  regexp,\n  integer,\n  float,\n  array,\n  object,\n  enum: enumValidator,\n  pattern,\n  date,\n  url: type,\n  hex: type,\n  email: type,\n  required,\n  any,\n};\n", "import { InternalValidateMessages } from './interface';\n\nexport function newMessages(): InternalValidateMessages {\n  return {\n    default: 'Validation error on field %s',\n    required: '%s is required',\n    enum: '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid',\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      boolean: '%s is not a %s',\n      integer: '%s is not an %s',\n      float: '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s',\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters',\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s',\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length',\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s',\n    },\n    clone() {\n      const cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    },\n  };\n}\n\nexport const messages = newMessages();\n", "import {\n  format,\n  complementError,\n  asyncMap,\n  warning,\n  deepMerge,\n  convertFieldsError,\n} from './util';\nimport validators from './validator/index';\nimport { messages as defaultMessages, newMessages } from './messages';\nimport {\n  InternalRuleItem,\n  InternalValidateMessages,\n  Rule,\n  RuleItem,\n  Rules,\n  ValidateCallback,\n  ValidateMessages,\n  ValidateOption,\n  Values,\n  RuleValuePackage,\n  ValidateError,\n  ValidateFieldsError,\n  SyncErrorType,\n  ValidateResult,\n} from './interface';\n\nexport * from './interface';\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nclass Schema {\n  // ========================= Static =========================\n  static register = function register(type: string, validator) {\n    if (typeof validator !== 'function') {\n      throw new Error(\n        'Cannot register a validator by type, validator is not a function',\n      );\n    }\n    validators[type] = validator;\n  };\n\n  static warning = warning;\n\n  static messages = defaultMessages;\n\n  static validators = validators;\n\n  // ======================== Instance ========================\n  rules: Record<string, RuleItem[]> = null;\n  _messages: InternalValidateMessages = defaultMessages;\n\n  constructor(descriptor: Rules) {\n    this.define(descriptor);\n  }\n\n  define(rules: Rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n\n    Object.keys(rules).forEach(name => {\n      const item: Rule = rules[name];\n      this.rules[name] = Array.isArray(item) ? item : [item];\n    });\n  }\n\n  messages(messages?: ValidateMessages) {\n    if (messages) {\n      this._messages = deepMerge(newMessages(), messages);\n    }\n    return this._messages;\n  }\n\n  validate(\n    source: Values,\n    option?: ValidateOption,\n    callback?: ValidateCallback,\n  ): Promise<Values>;\n  validate(source: Values, callback: ValidateCallback): Promise<Values>;\n  validate(source: Values): Promise<Values>;\n\n  validate(source_: Values, o: any = {}, oc: any = () => {}): Promise<Values> {\n    let source: Values = source_;\n    let options: ValidateOption = o;\n    let callback: ValidateCallback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback(null, source);\n      }\n      return Promise.resolve(source);\n    }\n\n    function complete(results: (ValidateError | ValidateError[])[]) {\n      let errors: ValidateError[] = [];\n      let fields: ValidateFieldsError = {};\n\n      function add(e: ValidateError | ValidateError[]) {\n        if (Array.isArray(e)) {\n          errors = errors.concat(...e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (let i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        callback(null, source);\n      } else {\n        fields = convertFieldsError(errors);\n        (callback as (\n          errors: ValidateError[],\n          fields: ValidateFieldsError,\n        ) => void)(errors, fields);\n      }\n    }\n\n    if (options.messages) {\n      let messages = this.messages();\n      if (messages === defaultMessages) {\n        messages = newMessages();\n      }\n      deepMerge(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n\n    const series: Record<string, RuleValuePackage[]> = {};\n    const keys = options.keys || Object.keys(this.rules);\n    keys.forEach(z => {\n      const arr = this.rules[z];\n      let value = source[z];\n      arr.forEach(r => {\n        let rule: InternalRuleItem = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = { ...source };\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule,\n          };\n        } else {\n          rule = { ...rule };\n        }\n\n        // Fill validator. Skip if nothing need to validate\n        rule.validator = this.getValidationMethod(rule);\n        if (!rule.validator) {\n          return;\n        }\n\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = this.getType(rule);\n        series[z] = series[z] || [];\n        series[z].push({\n          rule,\n          value,\n          source,\n          field: z,\n        });\n      });\n    });\n    const errorFields = {};\n    return asyncMap(\n      series,\n      options,\n      (data, doIt) => {\n        const rule = data.rule;\n        let deep =\n          (rule.type === 'object' || rule.type === 'array') &&\n          (typeof rule.fields === 'object' ||\n            typeof rule.defaultField === 'object');\n        deep = deep && (rule.required || (!rule.required && data.value));\n        rule.field = data.field;\n\n        function addFullField(key: string, schema: RuleItem) {\n          return {\n            ...schema,\n            fullField: `${rule.fullField}.${key}`,\n            fullFields: rule.fullFields ? [...rule.fullFields, key] : [key],\n          };\n        }\n\n        function cb(e: SyncErrorType | SyncErrorType[] = []) {\n          let errorList = Array.isArray(e) ? e : [e];\n          if (!options.suppressWarning && errorList.length) {\n            Schema.warning('async-validator:', errorList);\n          }\n          if (errorList.length && rule.message !== undefined) {\n            errorList = [].concat(rule.message);\n          }\n\n          // Fill error info\n          let filledErrors = errorList.map(complementError(rule, source));\n\n          if (options.first && filledErrors.length) {\n            errorFields[rule.field] = 1;\n            return doIt(filledErrors);\n          }\n          if (!deep) {\n            doIt(filledErrors);\n          } else {\n            // if rule is required but the target object\n            // does not exist fail at the rule level and don't\n            // go deeper\n            if (rule.required && !data.value) {\n              if (rule.message !== undefined) {\n                filledErrors = []\n                  .concat(rule.message)\n                  .map(complementError(rule, source));\n              } else if (options.error) {\n                filledErrors = [\n                  options.error(\n                    rule,\n                    format(options.messages.required, rule.field),\n                  ),\n                ];\n              }\n              return doIt(filledErrors);\n            }\n\n            let fieldsSchema: Record<string, Rule> = {};\n            if (rule.defaultField) {\n              Object.keys(data.value).map(key => {\n                fieldsSchema[key] = rule.defaultField;\n              });\n            }\n            fieldsSchema = {\n              ...fieldsSchema,\n              ...data.rule.fields,\n            };\n\n            const paredFieldsSchema: Record<string, RuleItem[]> = {};\n\n            Object.keys(fieldsSchema).forEach(field => {\n              const fieldSchema = fieldsSchema[field];\n              const fieldSchemaList = Array.isArray(fieldSchema)\n                ? fieldSchema\n                : [fieldSchema];\n              paredFieldsSchema[field] = fieldSchemaList.map(\n                addFullField.bind(null, field),\n              );\n            });\n            const schema = new Schema(paredFieldsSchema);\n            schema.messages(options.messages);\n            if (data.rule.options) {\n              data.rule.options.messages = options.messages;\n              data.rule.options.error = options.error;\n            }\n            schema.validate(data.value, data.rule.options || options, errs => {\n              const finalErrors = [];\n              if (filledErrors && filledErrors.length) {\n                finalErrors.push(...filledErrors);\n              }\n              if (errs && errs.length) {\n                finalErrors.push(...errs);\n              }\n              doIt(finalErrors.length ? finalErrors : null);\n            });\n          }\n        }\n\n        let res: ValidateResult;\n        if (rule.asyncValidator) {\n          res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n        } else if (rule.validator) {\n          try {\n            res = rule.validator(rule, data.value, cb, data.source, options);\n          } catch (error) {\n            console.error?.(error);\n            // rethrow to report error\n            if (!options.suppressValidatorError) {\n              setTimeout(() => {\n                throw error;\n              }, 0);\n            }\n            cb(error.message);\n          }\n          if (res === true) {\n            cb();\n          } else if (res === false) {\n            cb(\n              typeof rule.message === 'function'\n                ? rule.message(rule.fullField || rule.field)\n                : rule.message || `${rule.fullField || rule.field} fails`,\n            );\n          } else if (res instanceof Array) {\n            cb(res);\n          } else if (res instanceof Error) {\n            cb(res.message);\n          }\n        }\n        if (res && (res as Promise<void>).then) {\n          (res as Promise<void>).then(\n            () => cb(),\n            e => cb(e),\n          );\n        }\n      },\n      results => {\n        complete(results);\n      },\n      source,\n    );\n  }\n\n  getType(rule: InternalRuleItem) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (\n      typeof rule.validator !== 'function' &&\n      rule.type &&\n      !validators.hasOwnProperty(rule.type)\n    ) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  }\n\n  getValidationMethod(rule: InternalRuleItem) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    const keys = Object.keys(rule);\n    const messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n    return validators[this.getType(rule)] || undefined;\n  }\n}\n\nexport default Schema;\n", "import { componentSizes } from '@element-plus/constants'\nimport { buildProps, definePropType } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { Arrayable } from '@element-plus/utils'\nimport type { FormItemRule } from './types'\n\nexport const formItemValidateStates = [\n  '',\n  'error',\n  'validating',\n  'success',\n] as const\nexport type FormItemValidateState = typeof formItemValidateStates[number]\n\nexport type FormItemProp = Arrayable<string>\n\nexport const formItemProps = buildProps({\n  /**\n   * @description Label text.\n   */\n  label: String,\n  /**\n   * @description Width of label, e.g. `'50px'`. `'auto'` is supported.\n   */\n  labelWidth: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description  A key of `model`. It could be an array of property paths (e.g `['a', 'b', '0']`). In the use of `validate` and `resetFields` method, the attribute is required.\n   */\n  prop: {\n    type: definePropType<FormItemProp>([String, Array]),\n  },\n  /**\n   * @description Whether the field is required or not, will be determined by validation rules if omitted.\n   */\n  required: {\n    type: Boolean,\n    default: undefined,\n  },\n  /**\n   * @description Validation rules of form, see the [following table](#formitemrule), more advanced usage at [async-validator](https://github.com/yiminghe/async-validator).\n   */\n  rules: {\n    type: definePropType<Arrayable<FormItemRule>>([Object, Array]),\n  },\n  /**\n   * @description Field error message, set its value and the field will validate error and show this message immediately.\n   */\n  error: String,\n  /**\n   * @description Validation state of formItem.\n   */\n  validateStatus: {\n    type: String,\n    values: formItemValidateStates,\n  },\n  /**\n   * @description Same as for in native label.\n   */\n  for: String,\n  /**\n   * @description Inline style validate message.\n   */\n  inlineMessage: {\n    type: [String, Boolean],\n    default: '',\n  },\n  /**\n   * @description Whether to show the error message.\n   */\n  showMessage: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Control the size of components in this form-item.\n   */\n  size: {\n    type: String,\n    values: componentSizes,\n  },\n} as const)\nexport type FormItemProps = ExtractPropTypes<typeof formItemProps>\n", "import {\n  Fragment,\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  onUpdated,\n  ref,\n  watch,\n} from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { throwError } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { formContextKey, formItemContextKey } from './constants'\n\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElLabelWrap'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: {\n    isAutoWidth: Boolean,\n    updateAll: Boolean,\n  },\n\n  setup(props, { slots }) {\n    const formContext = inject(formContextKey, undefined)\n    const formItemContext = inject(formItemContextKey)\n    if (!formItemContext)\n      throwError(\n        COMPONENT_NAME,\n        'usage: <el-form-item><label-wrap /></el-form-item>'\n      )\n\n    const ns = useNamespace('form')\n\n    const el = ref<HTMLElement>()\n    const computedWidth = ref(0)\n\n    const getLabelWidth = () => {\n      if (el.value?.firstElementChild) {\n        const width = window.getComputedStyle(el.value.firstElementChild).width\n        return Math.ceil(Number.parseFloat(width))\n      } else {\n        return 0\n      }\n    }\n\n    const updateLabelWidth = (action: 'update' | 'remove' = 'update') => {\n      nextTick(() => {\n        if (slots.default && props.isAutoWidth) {\n          if (action === 'update') {\n            computedWidth.value = getLabelWidth()\n          } else if (action === 'remove') {\n            formContext?.deregisterLabelWidth(computedWidth.value)\n          }\n        }\n      })\n    }\n    const updateLabelWidthFn = () => updateLabelWidth('update')\n\n    onMounted(() => {\n      updateLabelWidthFn()\n    })\n    onBeforeUnmount(() => {\n      updateLabelWidth('remove')\n    })\n    onUpdated(() => updateLabelWidthFn())\n\n    watch(computedWidth, (val, oldVal) => {\n      if (props.updateAll) {\n        formContext?.registerLabelWidth(val, oldVal)\n      }\n    })\n\n    useResizeObserver(\n      computed(\n        () => (el.value?.firstElementChild ?? null) as HTMLElement | null\n      ),\n      updateLabelWidthFn\n    )\n\n    return () => {\n      if (!slots) return null\n\n      const { isAutoWidth } = props\n      if (isAutoWidth) {\n        const autoLabelWidth = formContext?.autoLabelWidth\n        const hasLabel = formItemContext?.hasLabel\n        const style: CSSProperties = {}\n        if (hasLabel && autoLabelWidth && autoLabelWidth !== 'auto') {\n          const marginWidth = Math.max(\n            0,\n            Number.parseInt(autoLabelWidth, 10) - computedWidth.value\n          )\n          const marginPosition =\n            formContext.labelPosition === 'left' ? 'marginRight' : 'marginLeft'\n          if (marginWidth) {\n            style[marginPosition] = `${marginWidth}px`\n          }\n        }\n        return (\n          <div ref={el} class={[ns.be('item', 'label-wrap')]} style={style}>\n            {slots.default?.()}\n          </div>\n        )\n      } else {\n        return <Fragment ref={el}>{slots.default?.()}</Fragment>\n      }\n    }\n  },\n})\n", "<template>\n  <div\n    ref=\"formItemRef\"\n    :class=\"formItemClasses\"\n    :role=\"isGroup ? 'group' : undefined\"\n    :aria-labelledby=\"isGroup ? labelId : undefined\"\n  >\n    <form-label-wrap\n      :is-auto-width=\"labelStyle.width === 'auto'\"\n      :update-all=\"formContext?.labelWidth === 'auto'\"\n    >\n      <component\n        :is=\"labelFor ? 'label' : 'div'\"\n        v-if=\"hasLabel\"\n        :id=\"labelId\"\n        :for=\"labelFor\"\n        :class=\"ns.e('label')\"\n        :style=\"labelStyle\"\n      >\n        <slot name=\"label\" :label=\"currentLabel\">\n          {{ currentLabel }}\n        </slot>\n      </component>\n    </form-label-wrap>\n\n    <div :class=\"ns.e('content')\" :style=\"contentStyle\">\n      <slot />\n      <transition-group :name=\"`${ns.namespace.value}-zoom-in-top`\">\n        <slot v-if=\"shouldShowError\" name=\"error\" :error=\"validateMessage\">\n          <div :class=\"validateClasses\">\n            {{ validateMessage }}\n          </div>\n        </slot>\n      </transition-group>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  useSlots,\n  watch,\n} from 'vue'\nimport AsyncValidator from 'async-validator'\nimport { clone } from 'lodash-unified'\nimport { refDebounced } from '@vueuse/core'\nimport {\n  addUnit,\n  ensureArray,\n  getProp,\n  isBoolean,\n  isFunction,\n  isString,\n} from '@element-plus/utils'\nimport { useId, useNamespace } from '@element-plus/hooks'\nimport { useFormSize } from './hooks'\nimport { formItemProps } from './form-item'\nimport FormLabelWrap from './form-label-wrap'\nimport { formContextKey, formItemContextKey } from './constants'\n\nimport type { CSSProperties } from 'vue'\nimport type { RuleItem } from 'async-validator'\nimport type { Arrayable } from '@element-plus/utils'\nimport type {\n  FormItemContext,\n  FormItemRule,\n  FormValidateFailure,\n} from './types'\nimport type { FormItemValidateState } from './form-item'\n\ndefineOptions({\n  name: 'ElFormItem',\n})\nconst props = defineProps(formItemProps)\nconst slots = useSlots()\n\nconst formContext = inject(formContextKey, undefined)\nconst parentFormItemContext = inject(formItemContextKey, undefined)\n\nconst _size = useFormSize(undefined, { formItem: false })\nconst ns = useNamespace('form-item')\n\nconst labelId = useId().value\nconst inputIds = ref<string[]>([])\n\nconst validateState = ref<FormItemValidateState>('')\nconst validateStateDebounced = refDebounced(validateState, 100)\nconst validateMessage = ref('')\nconst formItemRef = ref<HTMLDivElement>()\n// special inline value.\nlet initialValue: any = undefined\nlet isResettingField = false\n\nconst labelStyle = computed<CSSProperties>(() => {\n  if (formContext?.labelPosition === 'top') {\n    return {}\n  }\n\n  const labelWidth = addUnit(props.labelWidth || formContext?.labelWidth || '')\n  if (labelWidth) return { width: labelWidth }\n  return {}\n})\n\nconst contentStyle = computed<CSSProperties>(() => {\n  if (formContext?.labelPosition === 'top' || formContext?.inline) {\n    return {}\n  }\n  if (!props.label && !props.labelWidth && isNested) {\n    return {}\n  }\n  const labelWidth = addUnit(props.labelWidth || formContext?.labelWidth || '')\n  if (!props.label && !slots.label) {\n    return { marginLeft: labelWidth }\n  }\n  return {}\n})\n\nconst formItemClasses = computed(() => [\n  ns.b(),\n  ns.m(_size.value),\n  ns.is('error', validateState.value === 'error'),\n  ns.is('validating', validateState.value === 'validating'),\n  ns.is('success', validateState.value === 'success'),\n  ns.is('required', isRequired.value || props.required),\n  ns.is('no-asterisk', formContext?.hideRequiredAsterisk),\n  formContext?.requireAsteriskPosition === 'right'\n    ? 'asterisk-right'\n    : 'asterisk-left',\n  { [ns.m('feedback')]: formContext?.statusIcon },\n])\n\nconst _inlineMessage = computed(() =>\n  isBoolean(props.inlineMessage)\n    ? props.inlineMessage\n    : formContext?.inlineMessage || false\n)\n\nconst validateClasses = computed(() => [\n  ns.e('error'),\n  { [ns.em('error', 'inline')]: _inlineMessage.value },\n])\n\nconst propString = computed(() => {\n  if (!props.prop) return ''\n  return isString(props.prop) ? props.prop : props.prop.join('.')\n})\n\nconst hasLabel = computed<boolean>(() => {\n  return !!(props.label || slots.label)\n})\n\nconst labelFor = computed<string | undefined>(() => {\n  return (\n    props.for || (inputIds.value.length === 1 ? inputIds.value[0] : undefined)\n  )\n})\n\nconst isGroup = computed<boolean>(() => {\n  return !labelFor.value && hasLabel.value\n})\n\nconst isNested = !!parentFormItemContext\n\nconst fieldValue = computed(() => {\n  const model = formContext?.model\n  if (!model || !props.prop) {\n    return\n  }\n  return getProp(model, props.prop).value\n})\n\nconst normalizedRules = computed(() => {\n  const { required } = props\n\n  const rules: FormItemRule[] = []\n\n  if (props.rules) {\n    rules.push(...ensureArray(props.rules))\n  }\n\n  const formRules = formContext?.rules\n  if (formRules && props.prop) {\n    const _rules = getProp<Arrayable<FormItemRule> | undefined>(\n      formRules,\n      props.prop\n    ).value\n    if (_rules) {\n      rules.push(...ensureArray(_rules))\n    }\n  }\n\n  if (required !== undefined) {\n    const requiredRules = rules\n      .map((rule, i) => [rule, i] as const)\n      .filter(([rule]) => Object.keys(rule).includes('required'))\n\n    if (requiredRules.length > 0) {\n      for (const [rule, i] of requiredRules) {\n        if (rule.required === required) continue\n        rules[i] = { ...rule, required }\n      }\n    } else {\n      rules.push({ required })\n    }\n  }\n\n  return rules\n})\n\nconst validateEnabled = computed(() => normalizedRules.value.length > 0)\n\nconst getFilteredRule = (trigger: string) => {\n  const rules = normalizedRules.value\n  return (\n    rules\n      .filter((rule) => {\n        if (!rule.trigger || !trigger) return true\n        if (Array.isArray(rule.trigger)) {\n          return rule.trigger.includes(trigger)\n        } else {\n          return rule.trigger === trigger\n        }\n      })\n      // exclude trigger\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .map(({ trigger, ...rule }): RuleItem => rule)\n  )\n}\n\nconst isRequired = computed(() =>\n  normalizedRules.value.some((rule) => rule.required)\n)\n\nconst shouldShowError = computed(\n  () =>\n    validateStateDebounced.value === 'error' &&\n    props.showMessage &&\n    (formContext?.showMessage ?? true)\n)\n\nconst currentLabel = computed(\n  () => `${props.label || ''}${formContext?.labelSuffix || ''}`\n)\n\nconst setValidationState = (state: FormItemValidateState) => {\n  validateState.value = state\n}\n\nconst onValidationFailed = (error: FormValidateFailure) => {\n  const { errors, fields } = error\n  if (!errors || !fields) {\n    console.error(error)\n  }\n\n  setValidationState('error')\n  validateMessage.value = errors\n    ? errors?.[0]?.message ?? `${props.prop} is required`\n    : ''\n\n  formContext?.emit('validate', props.prop!, false, validateMessage.value)\n}\n\nconst onValidationSucceeded = () => {\n  setValidationState('success')\n  formContext?.emit('validate', props.prop!, true, '')\n}\n\nconst doValidate = async (rules: RuleItem[]): Promise<true> => {\n  const modelName = propString.value\n  const validator = new AsyncValidator({\n    [modelName]: rules,\n  })\n  return validator\n    .validate({ [modelName]: fieldValue.value }, { firstFields: true })\n    .then(() => {\n      onValidationSucceeded()\n      return true as const\n    })\n    .catch((err: FormValidateFailure) => {\n      onValidationFailed(err as FormValidateFailure)\n      return Promise.reject(err)\n    })\n}\n\nconst validate: FormItemContext['validate'] = async (trigger, callback) => {\n  // skip validation if its resetting\n  if (isResettingField || !props.prop) {\n    return false\n  }\n\n  const hasCallback = isFunction(callback)\n  if (!validateEnabled.value) {\n    callback?.(false)\n    return false\n  }\n\n  const rules = getFilteredRule(trigger)\n  if (rules.length === 0) {\n    callback?.(true)\n    return true\n  }\n\n  setValidationState('validating')\n\n  return doValidate(rules)\n    .then(() => {\n      callback?.(true)\n      return true as const\n    })\n    .catch((err: FormValidateFailure) => {\n      const { fields } = err\n      callback?.(false, fields)\n      return hasCallback ? false : Promise.reject(fields)\n    })\n}\n\nconst clearValidate: FormItemContext['clearValidate'] = () => {\n  setValidationState('')\n  validateMessage.value = ''\n  isResettingField = false\n}\n\nconst resetField: FormItemContext['resetField'] = async () => {\n  const model = formContext?.model\n  if (!model || !props.prop) return\n\n  const computedValue = getProp(model, props.prop)\n\n  // prevent validation from being triggered\n  isResettingField = true\n\n  computedValue.value = clone(initialValue)\n\n  await nextTick()\n  clearValidate()\n\n  isResettingField = false\n}\n\nconst addInputId: FormItemContext['addInputId'] = (id: string) => {\n  if (!inputIds.value.includes(id)) {\n    inputIds.value.push(id)\n  }\n}\n\nconst removeInputId: FormItemContext['removeInputId'] = (id: string) => {\n  inputIds.value = inputIds.value.filter((listId) => listId !== id)\n}\n\nwatch(\n  () => props.error,\n  (val) => {\n    validateMessage.value = val || ''\n    setValidationState(val ? 'error' : '')\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => props.validateStatus,\n  (val) => setValidationState(val || '')\n)\n\nconst context: FormItemContext = reactive({\n  ...toRefs(props),\n  $el: formItemRef,\n  size: _size,\n  validateState,\n  labelId,\n  inputIds,\n  isGroup,\n  hasLabel,\n  addInputId,\n  removeInputId,\n  resetField,\n  clearValidate,\n  validate,\n})\n\nprovide(formItemContextKey, context)\n\nonMounted(() => {\n  if (props.prop) {\n    formContext?.addField(context)\n    initialValue = clone(fieldValue.value)\n  }\n})\n\nonBeforeUnmount(() => {\n  formContext?.removeField(context)\n})\n\ndefineExpose({\n  /**\n   * @description Form item size.\n   */\n  size: _size,\n  /**\n   * @description Validation message.\n   */\n  validateMessage,\n  /**\n   * @description Validation state.\n   */\n  validateState,\n  /**\n   * @description Validate form item.\n   */\n  validate,\n  /**\n   * @description Remove validation status of the field.\n   */\n  clearValidate,\n  /**\n   * @description Reset current field and remove validation result.\n   */\n  resetField,\n})\n</script>\n", "import { withInstall, withNoopInstall } from '@element-plus/utils'\nimport Form from './src/form.vue'\nimport FormItem from './src/form-item.vue'\n\nexport const ElForm = withInstall(Form, {\n  FormItem,\n})\nexport default ElForm\nexport const ElFormItem = withNoopInstall(FormItem)\n\nexport * from './src/form'\nexport * from './src/form-item'\nexport * from './src/types'\nexport * from './src/constants'\nexport * from './src/hooks'\n\nexport type FormInstance = InstanceType<typeof Form>\nexport type FormItemInstance = InstanceType<typeof FormItem>\n", "import type { ConfigProviderProps } from './config-provider-props'\nimport type { InjectionKey, Ref } from 'vue'\n\nexport type ConfigProviderContext = Partial<ConfigProviderProps>\n\nexport const configProviderContextKey: InjectionKey<\n  Ref<ConfigProviderContext>\n> = Symbol()\n", "import { computed, getCurrentInstance, inject, provide, ref, unref } from 'vue'\nimport { debugWarn, keysOf } from '@element-plus/utils'\nimport {\n  SIZE_INJECTION_KEY,\n  defaultInitialZIndex,\n  defaultNamespace,\n  localeContextKey,\n  namespaceContextKey,\n  useLocale,\n  useNamespace,\n  useZIndex,\n  zIndexContextKey,\n} from '@element-plus/hooks'\nimport { configProviderContextKey } from '../constants'\n\nimport type { MaybeRef } from '@vueuse/core'\nimport type { App, Ref } from 'vue'\nimport type { ConfigProviderContext } from '../constants'\n\n// this is meant to fix global methods like `ElMessage(opts)`, this way we can inject current locale\n// into the component as default injection value.\n// refer to: https://github.com/element-plus/element-plus/issues/2610#issuecomment-887965266\nconst globalConfig = ref<ConfigProviderContext>()\n\nexport function useGlobalConfig<\n  K extends keyof ConfigProviderContext,\n  D extends ConfigProviderContext[K]\n>(\n  key: K,\n  defaultValue?: D\n): Ref<Exclude<ConfigProviderContext[K], undefined> | D>\nexport function useGlobalConfig(): Ref<ConfigProviderContext>\nexport function useGlobalConfig(\n  key?: keyof ConfigProviderContext,\n  defaultValue = undefined\n) {\n  const config = getCurrentInstance()\n    ? inject(configProviderContextKey, globalConfig)\n    : globalConfig\n  if (key) {\n    return computed(() => config.value?.[key] ?? defaultValue)\n  } else {\n    return config\n  }\n}\n\n// for components like `ElMessage` `ElNotification` `ElMessageBox`.\nexport function useGlobalComponentSettings(\n  block: string,\n  sizeFallback?: MaybeRef<ConfigProviderContext['size']>\n) {\n  const config = useGlobalConfig()\n\n  const ns = useNamespace(\n    block,\n    computed(() => config.value?.namespace || defaultNamespace)\n  )\n\n  const locale = useLocale(computed(() => config.value?.locale))\n  const zIndex = useZIndex(\n    computed(() => config.value?.zIndex || defaultInitialZIndex)\n  )\n  const size = computed(() => unref(sizeFallback) || config.value?.size || '')\n  provideGlobalConfig(computed(() => unref(config) || {}))\n\n  return {\n    ns,\n    locale,\n    zIndex,\n    size,\n  }\n}\n\nexport const provideGlobalConfig = (\n  config: MaybeRef<ConfigProviderContext>,\n  app?: App,\n  global = false\n) => {\n  const inSetup = !!getCurrentInstance()\n  const oldConfig = inSetup ? useGlobalConfig() : undefined\n\n  const provideFn = app?.provide ?? (inSetup ? provide : undefined)\n  if (!provideFn) {\n    debugWarn(\n      'provideGlobalConfig',\n      'provideGlobalConfig() can only be used inside setup().'\n    )\n    return\n  }\n\n  const context = computed(() => {\n    const cfg = unref(config)\n    if (!oldConfig?.value) return cfg\n    return mergeConfig(oldConfig.value, cfg)\n  })\n  provideFn(configProviderContextKey, context)\n  provideFn(\n    localeContextKey,\n    computed(() => context.value.locale)\n  )\n  provideFn(\n    namespaceContextKey,\n    computed(() => context.value.namespace)\n  )\n  provideFn(\n    zIndexContextKey,\n    computed(() => context.value.zIndex)\n  )\n\n  provideFn(SIZE_INJECTION_KEY, {\n    size: computed(() => context.value.size || ''),\n  })\n\n  if (global || !globalConfig.value) {\n    globalConfig.value = context.value\n  }\n  return context\n}\n\nconst mergeConfig = (\n  a: ConfigProviderContext,\n  b: ConfigProviderContext\n): ConfigProviderContext => {\n  const keys = [...new Set([...keysOf(a), ...keysOf(b)])]\n  const obj: Record<string, any> = {}\n  for (const key of keys) {\n    obj[key] = b[key] ?? a[key]\n  }\n  return obj\n}\n", "import { buildProps, definePropType } from '@element-plus/utils'\nimport { useSizeProp } from '@element-plus/hooks'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { Language } from '@element-plus/locale'\nimport type { ButtonConfigContext } from '@element-plus/components/button'\nimport type { MessageConfigContext } from '@element-plus/components/message'\n\nexport type ExperimentalFeatures = {\n  // TO BE Defined\n}\n\nexport const configProviderProps = buildProps({\n  /**\n   * @description Controlling if the users want a11y features\n   */\n  a11y: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description Locale Object\n   */\n  locale: {\n    type: definePropType<Language>(Object),\n  },\n  /**\n   * @description global component size\n   */\n  size: useSizeProp,\n  /**\n   * @description button related configuration, [see the following table](#button-attributes)\n   */\n  button: {\n    type: definePropType<ButtonConfigContext>(Object),\n  },\n  /**\n   * @description features at experimental stage to be added, all features are default to be set to false                                                                                | ^[object]\n   */\n  experimentalFeatures: {\n    type: definePropType<ExperimentalFeatures>(Object),\n  },\n  /**\n   * @description Controls if we should handle keyboard navigation\n   */\n  keyboardNavigation: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description message related configuration, [see the following table](#message-attributes)\n   */\n  message: {\n    type: definePropType<MessageConfigContext>(Object),\n  },\n  /**\n   * @description global Initial zIndex\n   */\n  zIndex: Number,\n  /**\n   * @description global component className prefix (cooperated with [$namespace](https://github.com/element-plus/element-plus/blob/dev/packages/theme-chalk/src/mixins/config.scss#L1)) | ^[string]\n   */\n  namespace: {\n    type: String,\n    default: 'el',\n  },\n} as const)\nexport type ConfigProviderProps = ExtractPropTypes<typeof configProviderProps>\n", "import { defineComponent, renderSlot, watch } from 'vue'\nimport { provideGlobalConfig } from './hooks/use-global-config'\nimport { configProviderProps } from './config-provider-props'\n\nimport type { MessageConfigContext } from '@element-plus/components/message'\n\nexport const messageConfig: MessageConfigContext = {}\n\nconst ConfigProvider = defineComponent({\n  name: 'ElConfigProvider',\n  props: configProviderProps,\n\n  setup(props, { slots }) {\n    watch(\n      () => props.message,\n      (val) => {\n        Object.assign(messageConfig, val ?? {})\n      },\n      { immediate: true, deep: true }\n    )\n    const config = provideGlobalConfig(props)\n    return () => renderSlot(slots, 'default', { config: config?.value })\n  },\n})\nexport type ConfigProviderInstance = InstanceType<typeof ConfigProvider>\n\nexport default ConfigProvider\n", "import { withInstall } from '@element-plus/utils'\n\nimport ConfigProvider from './src/config-provider'\n\nexport const ElConfigProvider = withInstall(ConfigProvider)\nexport default ElConfigProvider\n\nexport * from './src/config-provider'\nexport * from './src/config-provider-props'\nexport * from './src/constants'\nexport * from './src/hooks/use-global-config'\n", "import type { InjectionKey } from 'vue'\n\nimport type { ButtonProps } from './button'\n\nexport interface ButtonGroupContext {\n  size?: ButtonProps['size']\n  type?: ButtonProps['type']\n}\n\nexport const buttonGroupContextKey: InjectionKey<ButtonGroupContext> = Symbol(\n  'buttonGroupContextKey'\n)\n", "import { Text, computed, inject, ref, useSlots } from 'vue'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { useGlobalConfig } from '@element-plus/components/config-provider'\nimport { useDeprecated } from '@element-plus/hooks'\nimport { buttonGroupContextKey } from './constants'\n\nimport type { SetupContext } from 'vue'\nimport type { ButtonEmits, ButtonProps } from './button'\n\nexport const useButton = (\n  props: ButtonProps,\n  emit: SetupContext<ButtonEmits>['emit']\n) => {\n  useDeprecated(\n    {\n      from: 'type.text',\n      replacement: 'link',\n      version: '3.0.0',\n      scope: 'props',\n      ref: 'https://element-plus.org/en-US/component/button.html#button-attributes',\n    },\n    computed(() => props.type === 'text')\n  )\n\n  const buttonGroupContext = inject(buttonGroupContextKey, undefined)\n  const globalConfig = useGlobalConfig('button')\n  const { form } = useFormItem()\n  const _size = useFormSize(computed(() => buttonGroupContext?.size))\n  const _disabled = useFormDisabled()\n  const _ref = ref<HTMLButtonElement>()\n  const slots = useSlots()\n\n  const _type = computed(() => props.type || buttonGroupContext?.type || '')\n  const autoInsertSpace = computed(\n    () => props.autoInsertSpace ?? globalConfig.value?.autoInsertSpace ?? false\n  )\n\n  const _props = computed(() => {\n    if (props.tag === 'button') {\n      return {\n        ariaDisabled: _disabled.value || props.loading,\n        disabled: _disabled.value || props.loading,\n        autofocus: props.autofocus,\n        type: props.nativeType,\n      }\n    }\n    return {}\n  })\n\n  // add space between two characters in Chinese\n  const shouldAddSpace = computed(() => {\n    const defaultSlot = slots.default?.()\n    if (autoInsertSpace.value && defaultSlot?.length === 1) {\n      const slot = defaultSlot[0]\n      if (slot?.type === Text) {\n        const text = slot.children as string\n        return /^\\p{Unified_Ideograph}{2}$/u.test(text.trim())\n      }\n    }\n    return false\n  })\n\n  const handleClick = (evt: MouseEvent) => {\n    if (props.nativeType === 'reset') {\n      form?.resetFields()\n    }\n    emit('click', evt)\n  }\n\n  return {\n    _disabled,\n    _size,\n    _type,\n    _ref,\n    _props,\n    shouldAddSpace,\n    handleClick,\n  }\n}\n", "import { useSizeProp } from '@element-plus/hooks'\nimport { buildProps, definePropType, iconPropType } from '@element-plus/utils'\nimport { Loading } from '@element-plus/icons-vue'\nimport type { Component, ExtractPropTypes } from 'vue'\n\nexport const buttonTypes = [\n  'default',\n  'primary',\n  'success',\n  'warning',\n  'info',\n  'danger',\n  /**\n   * @deprecated\n   * Text type will be deprecated in the next major version (3.0.0)\n   */\n  'text',\n  '',\n] as const\nexport const buttonNativeTypes = ['button', 'submit', 'reset'] as const\n\nexport const buttonProps = buildProps({\n  /**\n   * @description button size\n   */\n  size: useSizeProp,\n  /**\n   * @description disable the button\n   */\n  disabled: Boolean,\n  /**\n   * @description button type\n   */\n  type: {\n    type: String,\n    values: buttonTypes,\n    default: '',\n  },\n  /**\n   * @description icon component\n   */\n  icon: {\n    type: iconPropType,\n  },\n  /**\n   * @description native button type\n   */\n  nativeType: {\n    type: String,\n    values: buttonNativeTypes,\n    default: 'button',\n  },\n  /**\n   * @description determine whether it's loading\n   */\n  loading: Boolean,\n  /**\n   * @description customize loading icon component\n   */\n  loadingIcon: {\n    type: iconPropType,\n    default: () => Loading,\n  },\n  /**\n   * @description determine whether it's a plain button\n   */\n  plain: Boolean,\n  /**\n   * @description determine whether it's a text button\n   */\n  text: Boolean,\n  /**\n   * @description determine whether it's a link button\n   */\n  link: Boolean,\n  /**\n   * @description determine whether the text button background color is always on\n   */\n  bg: Boolean,\n  /**\n   * @description native button autofocus\n   */\n  autofocus: Boolean,\n  /**\n   * @description determine whether it's a round button\n   */\n  round: Boolean,\n  /**\n   * @description determine whether it's a circle button\n   */\n  circle: Boolean,\n  /**\n   * @description custom button color, automatically calculate `hover` and `active` color\n   */\n  color: String,\n  /**\n   * @description dark mode, which automatically converts `color` to dark mode colors\n   */\n  dark: Boolean,\n  /**\n   * @description automatically insert a space between two chinese characters\n   */\n  autoInsertSpace: {\n    type: Boolean,\n    default: undefined,\n  },\n  /**\n   * @description custom element tag\n   */\n  tag: {\n    type: definePropType<string | Component>([String, Object]),\n    default: 'button',\n  },\n} as const)\nexport const buttonEmits = {\n  click: (evt: MouseEvent) => evt instanceof MouseEvent,\n}\n\nexport type ButtonProps = ExtractPropTypes<typeof buttonProps>\nexport type ButtonEmits = typeof buttonEmits\n\nexport type ButtonType = ButtonProps['type']\nexport type ButtonNativeType = ButtonProps['nativeType']\n\nexport interface ButtonConfigContext {\n  autoInsertSpace?: boolean\n}\n", "/**\r\n * Take input from [0, n] and return it as [0, 1]\r\n * @hidden\r\n */\r\nexport function bound01(n, max) {\r\n    if (isOnePointZero(n)) {\r\n        n = '100%';\r\n    }\r\n    var isPercent = isPercentage(n);\r\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\r\n    // Automatically convert percentage into number\r\n    if (isPercent) {\r\n        n = parseInt(String(n * max), 10) / 100;\r\n    }\r\n    // Handle floating point rounding errors\r\n    if (Math.abs(n - max) < 0.000001) {\r\n        return 1;\r\n    }\r\n    // Convert into [0, 1] range if it isn't already\r\n    if (max === 360) {\r\n        // If n is a hue given in degrees,\r\n        // wrap around out-of-range values into [0, 360] range\r\n        // then convert into [0, 1].\r\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\r\n    }\r\n    else {\r\n        // If n not a hue given in degrees\r\n        // Convert into [0, 1] range if it isn't already.\r\n        n = (n % max) / parseFloat(String(max));\r\n    }\r\n    return n;\r\n}\r\n/**\r\n * Force a number between 0 and 1\r\n * @hidden\r\n */\r\nexport function clamp01(val) {\r\n    return Math.min(1, Math.max(0, val));\r\n}\r\n/**\r\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\n * @hidden\r\n */\r\nexport function isOnePointZero(n) {\r\n    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\r\n}\r\n/**\r\n * Check to see if string passed in is a percentage\r\n * @hidden\r\n */\r\nexport function isPercentage(n) {\r\n    return typeof n === 'string' && n.indexOf('%') !== -1;\r\n}\r\n/**\r\n * Return a valid alpha value [0,1] with all invalid values being set to 1\r\n * @hidden\r\n */\r\nexport function boundAlpha(a) {\r\n    a = parseFloat(a);\r\n    if (isNaN(a) || a < 0 || a > 1) {\r\n        a = 1;\r\n    }\r\n    return a;\r\n}\r\n/**\r\n * Replace a decimal with it's percentage value\r\n * @hidden\r\n */\r\nexport function convertToPercentage(n) {\r\n    if (n <= 1) {\r\n        return \"\".concat(Number(n) * 100, \"%\");\r\n    }\r\n    return n;\r\n}\r\n/**\r\n * Force a hex value to have 2 characters\r\n * @hidden\r\n */\r\nexport function pad2(c) {\r\n    return c.length === 1 ? '0' + c : String(c);\r\n}\r\n", "import { bound01, pad2 } from './util.js';\r\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\r\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\r\n/**\r\n * Handle bounds / percentage checking to conform to CSS color spec\r\n * <http://www.w3.org/TR/css3-color/>\r\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n * *Returns:* { r, g, b } in [0, 255]\r\n */\r\nexport function rgbToRgb(r, g, b) {\r\n    return {\r\n        r: bound01(r, 255) * 255,\r\n        g: bound01(g, 255) * 255,\r\n        b: bound01(b, 255) * 255,\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL.\r\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n * *Returns:* { h, s, l } in [0,1]\r\n */\r\nexport function rgbToHsl(r, g, b) {\r\n    r = bound01(r, 255);\r\n    g = bound01(g, 255);\r\n    b = bound01(b, 255);\r\n    var max = Math.max(r, g, b);\r\n    var min = Math.min(r, g, b);\r\n    var h = 0;\r\n    var s = 0;\r\n    var l = (max + min) / 2;\r\n    if (max === min) {\r\n        s = 0;\r\n        h = 0; // achromatic\r\n    }\r\n    else {\r\n        var d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return { h: h, s: s, l: l };\r\n}\r\nfunction hue2rgb(p, q, t) {\r\n    if (t < 0) {\r\n        t += 1;\r\n    }\r\n    if (t > 1) {\r\n        t -= 1;\r\n    }\r\n    if (t < 1 / 6) {\r\n        return p + (q - p) * (6 * t);\r\n    }\r\n    if (t < 1 / 2) {\r\n        return q;\r\n    }\r\n    if (t < 2 / 3) {\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n    }\r\n    return p;\r\n}\r\n/**\r\n * Converts an HSL color value to RGB.\r\n *\r\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n * *Returns:* { r, g, b } in the set [0, 255]\r\n */\r\nexport function hslToRgb(h, s, l) {\r\n    var r;\r\n    var g;\r\n    var b;\r\n    h = bound01(h, 360);\r\n    s = bound01(s, 100);\r\n    l = bound01(l, 100);\r\n    if (s === 0) {\r\n        // achromatic\r\n        g = l;\r\n        b = l;\r\n        r = l;\r\n    }\r\n    else {\r\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        var p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return { r: r * 255, g: g * 255, b: b * 255 };\r\n}\r\n/**\r\n * Converts an RGB color value to HSV\r\n *\r\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n * *Returns:* { h, s, v } in [0,1]\r\n */\r\nexport function rgbToHsv(r, g, b) {\r\n    r = bound01(r, 255);\r\n    g = bound01(g, 255);\r\n    b = bound01(b, 255);\r\n    var max = Math.max(r, g, b);\r\n    var min = Math.min(r, g, b);\r\n    var h = 0;\r\n    var v = max;\r\n    var d = max - min;\r\n    var s = max === 0 ? 0 : d / max;\r\n    if (max === min) {\r\n        h = 0; // achromatic\r\n    }\r\n    else {\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return { h: h, s: s, v: v };\r\n}\r\n/**\r\n * Converts an HSV color value to RGB.\r\n *\r\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n * *Returns:* { r, g, b } in the set [0, 255]\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = bound01(h, 360) * 6;\r\n    s = bound01(s, 100);\r\n    v = bound01(v, 100);\r\n    var i = Math.floor(h);\r\n    var f = h - i;\r\n    var p = v * (1 - s);\r\n    var q = v * (1 - f * s);\r\n    var t = v * (1 - (1 - f) * s);\r\n    var mod = i % 6;\r\n    var r = [v, q, p, p, t, v][mod];\r\n    var g = [t, v, v, q, p, p][mod];\r\n    var b = [p, p, t, v, v, q][mod];\r\n    return { r: r * 255, g: g * 255, b: b * 255 };\r\n}\r\n/**\r\n * Converts an RGB color to hex\r\n *\r\n * Assumes r, g, and b are contained in the set [0, 255]\r\n * Returns a 3 or 6 character hex\r\n */\r\nexport function rgbToHex(r, g, b, allow3Char) {\r\n    var hex = [\r\n        pad2(Math.round(r).toString(16)),\r\n        pad2(Math.round(g).toString(16)),\r\n        pad2(Math.round(b).toString(16)),\r\n    ];\r\n    // Return a 3 character hex if possible\r\n    if (allow3Char &&\r\n        hex[0].startsWith(hex[0].charAt(1)) &&\r\n        hex[1].startsWith(hex[1].charAt(1)) &&\r\n        hex[2].startsWith(hex[2].charAt(1))) {\r\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n    }\r\n    return hex.join('');\r\n}\r\n/**\r\n * Converts an RGBA color plus alpha transparency to hex\r\n *\r\n * Assumes r, g, b are contained in the set [0, 255] and\r\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\r\n */\r\n// eslint-disable-next-line max-params\r\nexport function rgbaToHex(r, g, b, a, allow4Char) {\r\n    var hex = [\r\n        pad2(Math.round(r).toString(16)),\r\n        pad2(Math.round(g).toString(16)),\r\n        pad2(Math.round(b).toString(16)),\r\n        pad2(convertDecimalToHex(a)),\r\n    ];\r\n    // Return a 4 character hex if possible\r\n    if (allow4Char &&\r\n        hex[0].startsWith(hex[0].charAt(1)) &&\r\n        hex[1].startsWith(hex[1].charAt(1)) &&\r\n        hex[2].startsWith(hex[2].charAt(1)) &&\r\n        hex[3].startsWith(hex[3].charAt(1))) {\r\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\r\n    }\r\n    return hex.join('');\r\n}\r\n/**\r\n * Converts an RGBA color to an ARGB Hex8 string\r\n * Rarely used, but required for \"toFilter()\"\r\n */\r\nexport function rgbaToArgbHex(r, g, b, a) {\r\n    var hex = [\r\n        pad2(convertDecimalToHex(a)),\r\n        pad2(Math.round(r).toString(16)),\r\n        pad2(Math.round(g).toString(16)),\r\n        pad2(Math.round(b).toString(16)),\r\n    ];\r\n    return hex.join('');\r\n}\r\n/** Converts a decimal to a hex value */\r\nexport function convertDecimalToHex(d) {\r\n    return Math.round(parseFloat(d) * 255).toString(16);\r\n}\r\n/** Converts a hex value to a decimal */\r\nexport function convertHexToDecimal(h) {\r\n    return parseIntFromHex(h) / 255;\r\n}\r\n/** Parse a base-16 hex value into a base-10 integer */\r\nexport function parseIntFromHex(val) {\r\n    return parseInt(val, 16);\r\n}\r\nexport function numberInputToObject(color) {\r\n    return {\r\n        r: color >> 16,\r\n        g: (color & 0xff00) >> 8,\r\n        b: color & 0xff,\r\n    };\r\n}\r\n", "// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json\r\n/**\r\n * @hidden\r\n */\r\nexport var names = {\r\n    aliceblue: '#f0f8ff',\r\n    antiquewhite: '#faebd7',\r\n    aqua: '#00ffff',\r\n    aquamarine: '#7fffd4',\r\n    azure: '#f0ffff',\r\n    beige: '#f5f5dc',\r\n    bisque: '#ffe4c4',\r\n    black: '#000000',\r\n    blanchedalmond: '#ffebcd',\r\n    blue: '#0000ff',\r\n    blueviolet: '#8a2be2',\r\n    brown: '#a52a2a',\r\n    burlywood: '#deb887',\r\n    cadetblue: '#5f9ea0',\r\n    chartreuse: '#7fff00',\r\n    chocolate: '#d2691e',\r\n    coral: '#ff7f50',\r\n    cornflowerblue: '#6495ed',\r\n    cornsilk: '#fff8dc',\r\n    crimson: '#dc143c',\r\n    cyan: '#00ffff',\r\n    darkblue: '#00008b',\r\n    darkcyan: '#008b8b',\r\n    darkgoldenrod: '#b8860b',\r\n    darkgray: '#a9a9a9',\r\n    darkgreen: '#006400',\r\n    darkgrey: '#a9a9a9',\r\n    darkkhaki: '#bdb76b',\r\n    darkmagenta: '#8b008b',\r\n    darkolivegreen: '#556b2f',\r\n    darkorange: '#ff8c00',\r\n    darkorchid: '#9932cc',\r\n    darkred: '#8b0000',\r\n    darksalmon: '#e9967a',\r\n    darkseagreen: '#8fbc8f',\r\n    darkslateblue: '#483d8b',\r\n    darkslategray: '#2f4f4f',\r\n    darkslategrey: '#2f4f4f',\r\n    darkturquoise: '#00ced1',\r\n    darkviolet: '#9400d3',\r\n    deeppink: '#ff1493',\r\n    deepskyblue: '#00bfff',\r\n    dimgray: '#696969',\r\n    dimgrey: '#696969',\r\n    dodgerblue: '#1e90ff',\r\n    firebrick: '#b22222',\r\n    floralwhite: '#fffaf0',\r\n    forestgreen: '#228b22',\r\n    fuchsia: '#ff00ff',\r\n    gainsboro: '#dcdcdc',\r\n    ghostwhite: '#f8f8ff',\r\n    goldenrod: '#daa520',\r\n    gold: '#ffd700',\r\n    gray: '#808080',\r\n    green: '#008000',\r\n    greenyellow: '#adff2f',\r\n    grey: '#808080',\r\n    honeydew: '#f0fff0',\r\n    hotpink: '#ff69b4',\r\n    indianred: '#cd5c5c',\r\n    indigo: '#4b0082',\r\n    ivory: '#fffff0',\r\n    khaki: '#f0e68c',\r\n    lavenderblush: '#fff0f5',\r\n    lavender: '#e6e6fa',\r\n    lawngreen: '#7cfc00',\r\n    lemonchiffon: '#fffacd',\r\n    lightblue: '#add8e6',\r\n    lightcoral: '#f08080',\r\n    lightcyan: '#e0ffff',\r\n    lightgoldenrodyellow: '#fafad2',\r\n    lightgray: '#d3d3d3',\r\n    lightgreen: '#90ee90',\r\n    lightgrey: '#d3d3d3',\r\n    lightpink: '#ffb6c1',\r\n    lightsalmon: '#ffa07a',\r\n    lightseagreen: '#20b2aa',\r\n    lightskyblue: '#87cefa',\r\n    lightslategray: '#778899',\r\n    lightslategrey: '#778899',\r\n    lightsteelblue: '#b0c4de',\r\n    lightyellow: '#ffffe0',\r\n    lime: '#00ff00',\r\n    limegreen: '#32cd32',\r\n    linen: '#faf0e6',\r\n    magenta: '#ff00ff',\r\n    maroon: '#800000',\r\n    mediumaquamarine: '#66cdaa',\r\n    mediumblue: '#0000cd',\r\n    mediumorchid: '#ba55d3',\r\n    mediumpurple: '#9370db',\r\n    mediumseagreen: '#3cb371',\r\n    mediumslateblue: '#7b68ee',\r\n    mediumspringgreen: '#00fa9a',\r\n    mediumturquoise: '#48d1cc',\r\n    mediumvioletred: '#c71585',\r\n    midnightblue: '#191970',\r\n    mintcream: '#f5fffa',\r\n    mistyrose: '#ffe4e1',\r\n    moccasin: '#ffe4b5',\r\n    navajowhite: '#ffdead',\r\n    navy: '#000080',\r\n    oldlace: '#fdf5e6',\r\n    olive: '#808000',\r\n    olivedrab: '#6b8e23',\r\n    orange: '#ffa500',\r\n    orangered: '#ff4500',\r\n    orchid: '#da70d6',\r\n    palegoldenrod: '#eee8aa',\r\n    palegreen: '#98fb98',\r\n    paleturquoise: '#afeeee',\r\n    palevioletred: '#db7093',\r\n    papayawhip: '#ffefd5',\r\n    peachpuff: '#ffdab9',\r\n    peru: '#cd853f',\r\n    pink: '#ffc0cb',\r\n    plum: '#dda0dd',\r\n    powderblue: '#b0e0e6',\r\n    purple: '#800080',\r\n    rebeccapurple: '#663399',\r\n    red: '#ff0000',\r\n    rosybrown: '#bc8f8f',\r\n    royalblue: '#4169e1',\r\n    saddlebrown: '#8b4513',\r\n    salmon: '#fa8072',\r\n    sandybrown: '#f4a460',\r\n    seagreen: '#2e8b57',\r\n    seashell: '#fff5ee',\r\n    sienna: '#a0522d',\r\n    silver: '#c0c0c0',\r\n    skyblue: '#87ceeb',\r\n    slateblue: '#6a5acd',\r\n    slategray: '#708090',\r\n    slategrey: '#708090',\r\n    snow: '#fffafa',\r\n    springgreen: '#00ff7f',\r\n    steelblue: '#4682b4',\r\n    tan: '#d2b48c',\r\n    teal: '#008080',\r\n    thistle: '#d8bfd8',\r\n    tomato: '#ff6347',\r\n    turquoise: '#40e0d0',\r\n    violet: '#ee82ee',\r\n    wheat: '#f5deb3',\r\n    white: '#ffffff',\r\n    whitesmoke: '#f5f5f5',\r\n    yellow: '#ffff00',\r\n    yellowgreen: '#9acd32',\r\n};\r\n", "/* eslint-disable @typescript-eslint/no-redundant-type-constituents */\r\nimport { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb, } from './conversion.js';\r\nimport { names } from './css-color-names.js';\r\nimport { boundAlpha, convertToPercentage } from './util.js';\r\n/**\r\n * Given a string or object, convert that input to RGB\r\n *\r\n * Possible string inputs:\r\n * ```\r\n * \"red\"\r\n * \"#f00\" or \"f00\"\r\n * \"#ff0000\" or \"ff0000\"\r\n * \"#ff000000\" or \"ff000000\"\r\n * \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\r\n * \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\r\n * \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\r\n * \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\r\n * \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\r\n * \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\r\n * \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\r\n * ```\r\n */\r\nexport function inputToRGB(color) {\r\n    var rgb = { r: 0, g: 0, b: 0 };\r\n    var a = 1;\r\n    var s = null;\r\n    var v = null;\r\n    var l = null;\r\n    var ok = false;\r\n    var format = false;\r\n    if (typeof color === 'string') {\r\n        color = stringInputToObject(color);\r\n    }\r\n    if (typeof color === 'object') {\r\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\r\n            rgb = rgbToRgb(color.r, color.g, color.b);\r\n            ok = true;\r\n            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\r\n        }\r\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\r\n            s = convertToPercentage(color.s);\r\n            v = convertToPercentage(color.v);\r\n            rgb = hsvToRgb(color.h, s, v);\r\n            ok = true;\r\n            format = 'hsv';\r\n        }\r\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\r\n            s = convertToPercentage(color.s);\r\n            l = convertToPercentage(color.l);\r\n            rgb = hslToRgb(color.h, s, l);\r\n            ok = true;\r\n            format = 'hsl';\r\n        }\r\n        if (Object.prototype.hasOwnProperty.call(color, 'a')) {\r\n            a = color.a;\r\n        }\r\n    }\r\n    a = boundAlpha(a);\r\n    return {\r\n        ok: ok,\r\n        format: color.format || format,\r\n        r: Math.min(255, Math.max(rgb.r, 0)),\r\n        g: Math.min(255, Math.max(rgb.g, 0)),\r\n        b: Math.min(255, Math.max(rgb.b, 0)),\r\n        a: a,\r\n    };\r\n}\r\n// <http://www.w3.org/TR/css3-values/#integers>\r\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\r\n// <http://www.w3.org/TR/css3-values/#number-value>\r\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\r\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\nvar CSS_UNIT = \"(?:\".concat(CSS_NUMBER, \")|(?:\").concat(CSS_INTEGER, \")\");\r\n// Actual matching.\r\n// Parentheses and commas are optional, but not required.\r\n// Whitespace can take the place of commas or opening paren\r\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\r\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\r\nvar matchers = {\r\n    CSS_UNIT: new RegExp(CSS_UNIT),\r\n    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\r\n    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\r\n    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\r\n    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\r\n    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\r\n    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\r\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n};\r\n/**\r\n * Permissive string parsing.  Take in a number of formats, and output an object\r\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\n */\r\nexport function stringInputToObject(color) {\r\n    color = color.trim().toLowerCase();\r\n    if (color.length === 0) {\r\n        return false;\r\n    }\r\n    var named = false;\r\n    if (names[color]) {\r\n        color = names[color];\r\n        named = true;\r\n    }\r\n    else if (color === 'transparent') {\r\n        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\r\n    }\r\n    // Try to match string input using regular expressions.\r\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n    // Just return an object and let the conversion functions handle that.\r\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\r\n    var match = matchers.rgb.exec(color);\r\n    if (match) {\r\n        return { r: match[1], g: match[2], b: match[3] };\r\n    }\r\n    match = matchers.rgba.exec(color);\r\n    if (match) {\r\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\r\n    }\r\n    match = matchers.hsl.exec(color);\r\n    if (match) {\r\n        return { h: match[1], s: match[2], l: match[3] };\r\n    }\r\n    match = matchers.hsla.exec(color);\r\n    if (match) {\r\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\r\n    }\r\n    match = matchers.hsv.exec(color);\r\n    if (match) {\r\n        return { h: match[1], s: match[2], v: match[3] };\r\n    }\r\n    match = matchers.hsva.exec(color);\r\n    if (match) {\r\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\r\n    }\r\n    match = matchers.hex8.exec(color);\r\n    if (match) {\r\n        return {\r\n            r: parseIntFromHex(match[1]),\r\n            g: parseIntFromHex(match[2]),\r\n            b: parseIntFromHex(match[3]),\r\n            a: convertHexToDecimal(match[4]),\r\n            format: named ? 'name' : 'hex8',\r\n        };\r\n    }\r\n    match = matchers.hex6.exec(color);\r\n    if (match) {\r\n        return {\r\n            r: parseIntFromHex(match[1]),\r\n            g: parseIntFromHex(match[2]),\r\n            b: parseIntFromHex(match[3]),\r\n            format: named ? 'name' : 'hex',\r\n        };\r\n    }\r\n    match = matchers.hex4.exec(color);\r\n    if (match) {\r\n        return {\r\n            r: parseIntFromHex(match[1] + match[1]),\r\n            g: parseIntFromHex(match[2] + match[2]),\r\n            b: parseIntFromHex(match[3] + match[3]),\r\n            a: convertHexToDecimal(match[4] + match[4]),\r\n            format: named ? 'name' : 'hex8',\r\n        };\r\n    }\r\n    match = matchers.hex3.exec(color);\r\n    if (match) {\r\n        return {\r\n            r: parseIntFromHex(match[1] + match[1]),\r\n            g: parseIntFromHex(match[2] + match[2]),\r\n            b: parseIntFromHex(match[3] + match[3]),\r\n            format: named ? 'name' : 'hex',\r\n        };\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Check to see if it looks like a CSS unit\r\n * (see `matchers` above for definition).\r\n */\r\nexport function isValidCSSUnit(color) {\r\n    return Boolean(matchers.CSS_UNIT.exec(String(color)));\r\n}\r\n", "import { numberInputToObject, rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv } from './conversion.js';\r\nimport { names } from './css-color-names.js';\r\nimport { inputToRGB } from './format-input';\r\nimport { bound01, boundAlpha, clamp01 } from './util.js';\r\nvar TinyColor = /** @class */ (function () {\r\n    function TinyColor(color, opts) {\r\n        if (color === void 0) { color = ''; }\r\n        if (opts === void 0) { opts = {}; }\r\n        var _a;\r\n        // If input is already a tinycolor, return itself\r\n        if (color instanceof TinyColor) {\r\n            // eslint-disable-next-line no-constructor-return\r\n            return color;\r\n        }\r\n        if (typeof color === 'number') {\r\n            color = numberInputToObject(color);\r\n        }\r\n        this.originalInput = color;\r\n        var rgb = inputToRGB(color);\r\n        this.originalInput = color;\r\n        this.r = rgb.r;\r\n        this.g = rgb.g;\r\n        this.b = rgb.b;\r\n        this.a = rgb.a;\r\n        this.roundA = Math.round(100 * this.a) / 100;\r\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\r\n        this.gradientType = opts.gradientType;\r\n        // Don't let the range of [0,255] come back in [0,1].\r\n        // Potentially lose a little bit of precision here, but will fix issues where\r\n        // .5 gets interpreted as half of the total, instead of half of 1\r\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\r\n        if (this.r < 1) {\r\n            this.r = Math.round(this.r);\r\n        }\r\n        if (this.g < 1) {\r\n            this.g = Math.round(this.g);\r\n        }\r\n        if (this.b < 1) {\r\n            this.b = Math.round(this.b);\r\n        }\r\n        this.isValid = rgb.ok;\r\n    }\r\n    TinyColor.prototype.isDark = function () {\r\n        return this.getBrightness() < 128;\r\n    };\r\n    TinyColor.prototype.isLight = function () {\r\n        return !this.isDark();\r\n    };\r\n    /**\r\n     * Returns the perceived brightness of the color, from 0-255.\r\n     */\r\n    TinyColor.prototype.getBrightness = function () {\r\n        // http://www.w3.org/TR/AERT#color-contrast\r\n        var rgb = this.toRgb();\r\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n    };\r\n    /**\r\n     * Returns the perceived luminance of a color, from 0-1.\r\n     */\r\n    TinyColor.prototype.getLuminance = function () {\r\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\r\n        var rgb = this.toRgb();\r\n        var R;\r\n        var G;\r\n        var B;\r\n        var RsRGB = rgb.r / 255;\r\n        var GsRGB = rgb.g / 255;\r\n        var BsRGB = rgb.b / 255;\r\n        if (RsRGB <= 0.03928) {\r\n            R = RsRGB / 12.92;\r\n        }\r\n        else {\r\n            // eslint-disable-next-line prefer-exponentiation-operator\r\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\r\n        }\r\n        if (GsRGB <= 0.03928) {\r\n            G = GsRGB / 12.92;\r\n        }\r\n        else {\r\n            // eslint-disable-next-line prefer-exponentiation-operator\r\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\r\n        }\r\n        if (BsRGB <= 0.03928) {\r\n            B = BsRGB / 12.92;\r\n        }\r\n        else {\r\n            // eslint-disable-next-line prefer-exponentiation-operator\r\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\r\n        }\r\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\r\n    };\r\n    /**\r\n     * Returns the alpha value of a color, from 0-1.\r\n     */\r\n    TinyColor.prototype.getAlpha = function () {\r\n        return this.a;\r\n    };\r\n    /**\r\n     * Sets the alpha value on the current color.\r\n     *\r\n     * @param alpha - The new alpha value. The accepted range is 0-1.\r\n     */\r\n    TinyColor.prototype.setAlpha = function (alpha) {\r\n        this.a = boundAlpha(alpha);\r\n        this.roundA = Math.round(100 * this.a) / 100;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns whether the color is monochrome.\r\n     */\r\n    TinyColor.prototype.isMonochrome = function () {\r\n        var s = this.toHsl().s;\r\n        return s === 0;\r\n    };\r\n    /**\r\n     * Returns the object as a HSVA object.\r\n     */\r\n    TinyColor.prototype.toHsv = function () {\r\n        var hsv = rgbToHsv(this.r, this.g, this.b);\r\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\r\n    };\r\n    /**\r\n     * Returns the hsva values interpolated into a string with the following format:\r\n     * \"hsva(xxx, xxx, xxx, xx)\".\r\n     */\r\n    TinyColor.prototype.toHsvString = function () {\r\n        var hsv = rgbToHsv(this.r, this.g, this.b);\r\n        var h = Math.round(hsv.h * 360);\r\n        var s = Math.round(hsv.s * 100);\r\n        var v = Math.round(hsv.v * 100);\r\n        return this.a === 1 ? \"hsv(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%)\") : \"hsva(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%, \").concat(this.roundA, \")\");\r\n    };\r\n    /**\r\n     * Returns the object as a HSLA object.\r\n     */\r\n    TinyColor.prototype.toHsl = function () {\r\n        var hsl = rgbToHsl(this.r, this.g, this.b);\r\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\r\n    };\r\n    /**\r\n     * Returns the hsla values interpolated into a string with the following format:\r\n     * \"hsla(xxx, xxx, xxx, xx)\".\r\n     */\r\n    TinyColor.prototype.toHslString = function () {\r\n        var hsl = rgbToHsl(this.r, this.g, this.b);\r\n        var h = Math.round(hsl.h * 360);\r\n        var s = Math.round(hsl.s * 100);\r\n        var l = Math.round(hsl.l * 100);\r\n        return this.a === 1 ? \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\") : \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%, \").concat(this.roundA, \")\");\r\n    };\r\n    /**\r\n     * Returns the hex value of the color.\r\n     * @param allow3Char will shorten hex value to 3 char if possible\r\n     */\r\n    TinyColor.prototype.toHex = function (allow3Char) {\r\n        if (allow3Char === void 0) { allow3Char = false; }\r\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\r\n    };\r\n    /**\r\n     * Returns the hex value of the color -with a # prefixed.\r\n     * @param allow3Char will shorten hex value to 3 char if possible\r\n     */\r\n    TinyColor.prototype.toHexString = function (allow3Char) {\r\n        if (allow3Char === void 0) { allow3Char = false; }\r\n        return '#' + this.toHex(allow3Char);\r\n    };\r\n    /**\r\n     * Returns the hex 8 value of the color.\r\n     * @param allow4Char will shorten hex value to 4 char if possible\r\n     */\r\n    TinyColor.prototype.toHex8 = function (allow4Char) {\r\n        if (allow4Char === void 0) { allow4Char = false; }\r\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\r\n    };\r\n    /**\r\n     * Returns the hex 8 value of the color -with a # prefixed.\r\n     * @param allow4Char will shorten hex value to 4 char if possible\r\n     */\r\n    TinyColor.prototype.toHex8String = function (allow4Char) {\r\n        if (allow4Char === void 0) { allow4Char = false; }\r\n        return '#' + this.toHex8(allow4Char);\r\n    };\r\n    /**\r\n     * Returns the shorter hex value of the color depends on its alpha -with a # prefixed.\r\n     * @param allowShortChar will shorten hex value to 3 or 4 char if possible\r\n     */\r\n    TinyColor.prototype.toHexShortString = function (allowShortChar) {\r\n        if (allowShortChar === void 0) { allowShortChar = false; }\r\n        return this.a === 1 ? this.toHexString(allowShortChar) : this.toHex8String(allowShortChar);\r\n    };\r\n    /**\r\n     * Returns the object as a RGBA object.\r\n     */\r\n    TinyColor.prototype.toRgb = function () {\r\n        return {\r\n            r: Math.round(this.r),\r\n            g: Math.round(this.g),\r\n            b: Math.round(this.b),\r\n            a: this.a,\r\n        };\r\n    };\r\n    /**\r\n     * Returns the RGBA values interpolated into a string with the following format:\r\n     * \"RGBA(xxx, xxx, xxx, xx)\".\r\n     */\r\n    TinyColor.prototype.toRgbString = function () {\r\n        var r = Math.round(this.r);\r\n        var g = Math.round(this.g);\r\n        var b = Math.round(this.b);\r\n        return this.a === 1 ? \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\") : \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(this.roundA, \")\");\r\n    };\r\n    /**\r\n     * Returns the object as a RGBA object.\r\n     */\r\n    TinyColor.prototype.toPercentageRgb = function () {\r\n        var fmt = function (x) { return \"\".concat(Math.round(bound01(x, 255) * 100), \"%\"); };\r\n        return {\r\n            r: fmt(this.r),\r\n            g: fmt(this.g),\r\n            b: fmt(this.b),\r\n            a: this.a,\r\n        };\r\n    };\r\n    /**\r\n     * Returns the RGBA relative values interpolated into a string\r\n     */\r\n    TinyColor.prototype.toPercentageRgbString = function () {\r\n        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };\r\n        return this.a === 1\r\n            ? \"rgb(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%)\")\r\n            : \"rgba(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%, \").concat(this.roundA, \")\");\r\n    };\r\n    /**\r\n     * The 'real' name of the color -if there is one.\r\n     */\r\n    TinyColor.prototype.toName = function () {\r\n        if (this.a === 0) {\r\n            return 'transparent';\r\n        }\r\n        if (this.a < 1) {\r\n            return false;\r\n        }\r\n        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);\r\n        for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\r\n            var _b = _a[_i], key = _b[0], value = _b[1];\r\n            if (hex === value) {\r\n                return key;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    TinyColor.prototype.toString = function (format) {\r\n        var formatSet = Boolean(format);\r\n        format = format !== null && format !== void 0 ? format : this.format;\r\n        var formattedString = false;\r\n        var hasAlpha = this.a < 1 && this.a >= 0;\r\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\r\n        if (needsAlphaFormat) {\r\n            // Special case for \"transparent\", all other non-alpha formats\r\n            // will return rgba when there is transparency.\r\n            if (format === 'name' && this.a === 0) {\r\n                return this.toName();\r\n            }\r\n            return this.toRgbString();\r\n        }\r\n        if (format === 'rgb') {\r\n            formattedString = this.toRgbString();\r\n        }\r\n        if (format === 'prgb') {\r\n            formattedString = this.toPercentageRgbString();\r\n        }\r\n        if (format === 'hex' || format === 'hex6') {\r\n            formattedString = this.toHexString();\r\n        }\r\n        if (format === 'hex3') {\r\n            formattedString = this.toHexString(true);\r\n        }\r\n        if (format === 'hex4') {\r\n            formattedString = this.toHex8String(true);\r\n        }\r\n        if (format === 'hex8') {\r\n            formattedString = this.toHex8String();\r\n        }\r\n        if (format === 'name') {\r\n            formattedString = this.toName();\r\n        }\r\n        if (format === 'hsl') {\r\n            formattedString = this.toHslString();\r\n        }\r\n        if (format === 'hsv') {\r\n            formattedString = this.toHsvString();\r\n        }\r\n        return formattedString || this.toHexString();\r\n    };\r\n    TinyColor.prototype.toNumber = function () {\r\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\r\n    };\r\n    TinyColor.prototype.clone = function () {\r\n        return new TinyColor(this.toString());\r\n    };\r\n    /**\r\n     * Lighten the color a given amount. Providing 100 will always return white.\r\n     * @param amount - valid between 1-100\r\n     */\r\n    TinyColor.prototype.lighten = function (amount) {\r\n        if (amount === void 0) { amount = 10; }\r\n        var hsl = this.toHsl();\r\n        hsl.l += amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return new TinyColor(hsl);\r\n    };\r\n    /**\r\n     * Brighten the color a given amount, from 0 to 100.\r\n     * @param amount - valid between 1-100\r\n     */\r\n    TinyColor.prototype.brighten = function (amount) {\r\n        if (amount === void 0) { amount = 10; }\r\n        var rgb = this.toRgb();\r\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\r\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\r\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\r\n        return new TinyColor(rgb);\r\n    };\r\n    /**\r\n     * Darken the color a given amount, from 0 to 100.\r\n     * Providing 100 will always return black.\r\n     * @param amount - valid between 1-100\r\n     */\r\n    TinyColor.prototype.darken = function (amount) {\r\n        if (amount === void 0) { amount = 10; }\r\n        var hsl = this.toHsl();\r\n        hsl.l -= amount / 100;\r\n        hsl.l = clamp01(hsl.l);\r\n        return new TinyColor(hsl);\r\n    };\r\n    /**\r\n     * Mix the color with pure white, from 0 to 100.\r\n     * Providing 0 will do nothing, providing 100 will always return white.\r\n     * @param amount - valid between 1-100\r\n     */\r\n    TinyColor.prototype.tint = function (amount) {\r\n        if (amount === void 0) { amount = 10; }\r\n        return this.mix('white', amount);\r\n    };\r\n    /**\r\n     * Mix the color with pure black, from 0 to 100.\r\n     * Providing 0 will do nothing, providing 100 will always return black.\r\n     * @param amount - valid between 1-100\r\n     */\r\n    TinyColor.prototype.shade = function (amount) {\r\n        if (amount === void 0) { amount = 10; }\r\n        return this.mix('black', amount);\r\n    };\r\n    /**\r\n     * Desaturate the color a given amount, from 0 to 100.\r\n     * Providing 100 will is the same as calling greyscale\r\n     * @param amount - valid between 1-100\r\n     */\r\n    TinyColor.prototype.desaturate = function (amount) {\r\n        if (amount === void 0) { amount = 10; }\r\n        var hsl = this.toHsl();\r\n        hsl.s -= amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return new TinyColor(hsl);\r\n    };\r\n    /**\r\n     * Saturate the color a given amount, from 0 to 100.\r\n     * @param amount - valid between 1-100\r\n     */\r\n    TinyColor.prototype.saturate = function (amount) {\r\n        if (amount === void 0) { amount = 10; }\r\n        var hsl = this.toHsl();\r\n        hsl.s += amount / 100;\r\n        hsl.s = clamp01(hsl.s);\r\n        return new TinyColor(hsl);\r\n    };\r\n    /**\r\n     * Completely desaturates a color into greyscale.\r\n     * Same as calling `desaturate(100)`\r\n     */\r\n    TinyColor.prototype.greyscale = function () {\r\n        return this.desaturate(100);\r\n    };\r\n    /**\r\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\r\n     * Values outside of this range will be wrapped into this range.\r\n     */\r\n    TinyColor.prototype.spin = function (amount) {\r\n        var hsl = this.toHsl();\r\n        var hue = (hsl.h + amount) % 360;\r\n        hsl.h = hue < 0 ? 360 + hue : hue;\r\n        return new TinyColor(hsl);\r\n    };\r\n    /**\r\n     * Mix the current color a given amount with another color, from 0 to 100.\r\n     * 0 means no mixing (return current color).\r\n     */\r\n    TinyColor.prototype.mix = function (color, amount) {\r\n        if (amount === void 0) { amount = 50; }\r\n        var rgb1 = this.toRgb();\r\n        var rgb2 = new TinyColor(color).toRgb();\r\n        var p = amount / 100;\r\n        var rgba = {\r\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\r\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\r\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\r\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\r\n        };\r\n        return new TinyColor(rgba);\r\n    };\r\n    TinyColor.prototype.analogous = function (results, slices) {\r\n        if (results === void 0) { results = 6; }\r\n        if (slices === void 0) { slices = 30; }\r\n        var hsl = this.toHsl();\r\n        var part = 360 / slices;\r\n        var ret = [this];\r\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\r\n            hsl.h = (hsl.h + part) % 360;\r\n            ret.push(new TinyColor(hsl));\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\r\n     */\r\n    TinyColor.prototype.complement = function () {\r\n        var hsl = this.toHsl();\r\n        hsl.h = (hsl.h + 180) % 360;\r\n        return new TinyColor(hsl);\r\n    };\r\n    TinyColor.prototype.monochromatic = function (results) {\r\n        if (results === void 0) { results = 6; }\r\n        var hsv = this.toHsv();\r\n        var h = hsv.h;\r\n        var s = hsv.s;\r\n        var v = hsv.v;\r\n        var res = [];\r\n        var modification = 1 / results;\r\n        while (results--) {\r\n            res.push(new TinyColor({ h: h, s: s, v: v }));\r\n            v = (v + modification) % 1;\r\n        }\r\n        return res;\r\n    };\r\n    TinyColor.prototype.splitcomplement = function () {\r\n        var hsl = this.toHsl();\r\n        var h = hsl.h;\r\n        return [\r\n            this,\r\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\r\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\r\n        ];\r\n    };\r\n    /**\r\n     * Compute how the color would appear on a background\r\n     */\r\n    TinyColor.prototype.onBackground = function (background) {\r\n        var fg = this.toRgb();\r\n        var bg = new TinyColor(background).toRgb();\r\n        var alpha = fg.a + bg.a * (1 - fg.a);\r\n        return new TinyColor({\r\n            r: (fg.r * fg.a + bg.r * bg.a * (1 - fg.a)) / alpha,\r\n            g: (fg.g * fg.a + bg.g * bg.a * (1 - fg.a)) / alpha,\r\n            b: (fg.b * fg.a + bg.b * bg.a * (1 - fg.a)) / alpha,\r\n            a: alpha,\r\n        });\r\n    };\r\n    /**\r\n     * Alias for `polyad(3)`\r\n     */\r\n    TinyColor.prototype.triad = function () {\r\n        return this.polyad(3);\r\n    };\r\n    /**\r\n     * Alias for `polyad(4)`\r\n     */\r\n    TinyColor.prototype.tetrad = function () {\r\n        return this.polyad(4);\r\n    };\r\n    /**\r\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\r\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\r\n     */\r\n    TinyColor.prototype.polyad = function (n) {\r\n        var hsl = this.toHsl();\r\n        var h = hsl.h;\r\n        var result = [this];\r\n        var increment = 360 / n;\r\n        for (var i = 1; i < n; i++) {\r\n            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * compare color vs current color\r\n     */\r\n    TinyColor.prototype.equals = function (color) {\r\n        return this.toRgbString() === new TinyColor(color).toRgbString();\r\n    };\r\n    return TinyColor;\r\n}());\r\nexport { TinyColor };\r\n// kept for backwards compatability with v1\r\nexport function tinycolor(color, opts) {\r\n    if (color === void 0) { color = ''; }\r\n    if (opts === void 0) { opts = {}; }\r\n    return new TinyColor(color, opts);\r\n}\r\n", "import { computed } from 'vue'\nimport { TinyColor } from '@ctrl/tinycolor'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport type { ButtonProps } from './button'\n\nexport function darken(color: TinyColor, amount = 20) {\n  return color.mix('#141414', amount).toString()\n}\n\nexport function useButtonCustomStyle(props: ButtonProps) {\n  const _disabled = useFormDisabled()\n  const ns = useNamespace('button')\n\n  // calculate hover & active color by custom color\n  // only work when custom color\n  return computed(() => {\n    let styles: Record<string, string> = {}\n\n    const buttonColor = props.color\n\n    if (buttonColor) {\n      const color = new TinyColor(buttonColor)\n      const activeBgColor = props.dark\n        ? color.tint(20).toString()\n        : darken(color, 20)\n\n      if (props.plain) {\n        styles = ns.cssVarBlock({\n          'bg-color': props.dark\n            ? darken(color, 90)\n            : color.tint(90).toString(),\n          'text-color': buttonColor,\n          'border-color': props.dark\n            ? darken(color, 50)\n            : color.tint(50).toString(),\n          'hover-text-color': `var(${ns.cssVarName('color-white')})`,\n          'hover-bg-color': buttonColor,\n          'hover-border-color': buttonColor,\n          'active-bg-color': activeBgColor,\n          'active-text-color': `var(${ns.cssVarName('color-white')})`,\n          'active-border-color': activeBgColor,\n        })\n\n        if (_disabled.value) {\n          styles[ns.cssVarBlockName('disabled-bg-color')] = props.dark\n            ? darken(color, 90)\n            : color.tint(90).toString()\n          styles[ns.cssVarBlockName('disabled-text-color')] = props.dark\n            ? darken(color, 50)\n            : color.tint(50).toString()\n          styles[ns.cssVarBlockName('disabled-border-color')] = props.dark\n            ? darken(color, 80)\n            : color.tint(80).toString()\n        }\n      } else {\n        const hoverBgColor = props.dark\n          ? darken(color, 30)\n          : color.tint(30).toString()\n        const textColor = color.isDark()\n          ? `var(${ns.cssVarName('color-white')})`\n          : `var(${ns.cssVarName('color-black')})`\n        styles = ns.cssVarBlock({\n          'bg-color': buttonColor,\n          'text-color': textColor,\n          'border-color': buttonColor,\n          'hover-bg-color': hoverBgColor,\n          'hover-text-color': textColor,\n          'hover-border-color': hoverBgColor,\n          'active-bg-color': activeBgColor,\n          'active-border-color': activeBgColor,\n        })\n\n        if (_disabled.value) {\n          const disabledButtonColor = props.dark\n            ? darken(color, 50)\n            : color.tint(50).toString()\n          styles[ns.cssVarBlockName('disabled-bg-color')] = disabledButtonColor\n          styles[ns.cssVarBlockName('disabled-text-color')] = props.dark\n            ? 'rgba(255, 255, 255, 0.5)'\n            : `var(${ns.cssVarName('color-white')})`\n          styles[ns.cssVarBlockName('disabled-border-color')] =\n            disabledButtonColor\n        }\n      }\n    }\n\n    return styles\n  })\n}\n", "<template>\n  <component\n    :is=\"tag\"\n    ref=\"_ref\"\n    v-bind=\"_props\"\n    :class=\"[\n      ns.b(),\n      ns.m(_type),\n      ns.m(_size),\n      ns.is('disabled', _disabled),\n      ns.is('loading', loading),\n      ns.is('plain', plain),\n      ns.is('round', round),\n      ns.is('circle', circle),\n      ns.is('text', text),\n      ns.is('link', link),\n      ns.is('has-bg', bg),\n    ]\"\n    :style=\"buttonStyle\"\n    @click=\"handleClick\"\n  >\n    <template v-if=\"loading\">\n      <slot v-if=\"$slots.loading\" name=\"loading\" />\n      <el-icon v-else :class=\"ns.is('loading')\">\n        <component :is=\"loadingIcon\" />\n      </el-icon>\n    </template>\n    <el-icon v-else-if=\"icon || $slots.icon\">\n      <component :is=\"icon\" v-if=\"icon\" />\n      <slot v-else name=\"icon\" />\n    </el-icon>\n    <span\n      v-if=\"$slots.default\"\n      :class=\"{ [ns.em('text', 'expand')]: shouldAddSpace }\"\n    >\n      <slot />\n    </span>\n  </component>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useButton } from './use-button'\nimport { buttonEmits, buttonProps } from './button'\nimport { useButtonCustomStyle } from './button-custom'\n\ndefineOptions({\n  name: 'ElButton',\n})\n\nconst props = defineProps(buttonProps)\nconst emit = defineEmits(buttonEmits)\n\nconst buttonStyle = useButtonCustomStyle(props)\nconst ns = useNamespace('button')\nconst { _ref, _size, _type, _disabled, _props, shouldAddSpace, handleClick } =\n  useButton(props, emit)\n\ndefineExpose({\n  /** @description button html element */\n  ref: _ref,\n  /** @description button size */\n  size: _size,\n  /** @description button type */\n  type: _type,\n  /** @description button disabled */\n  disabled: _disabled,\n  /** @description whether adding space */\n  shouldAddSpace,\n})\n</script>\n", "import { buttonProps } from './button'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const buttonGroupProps = {\n  /**\n   * @description control the size of buttons in this button-group\n   */\n  size: buttonProps.size,\n  /**\n   * @description control the type of buttons in this button-group\n   */\n  type: buttonProps.type,\n} as const\nexport type ButtonGroupProps = ExtractPropTypes<typeof buttonGroupProps>\n", "<template>\n  <div :class=\"`${ns.b('group')}`\">\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { provide, reactive, toRef } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { buttonGroupProps } from './button-group'\nimport { buttonGroupContextKey } from './constants'\n\ndefineOptions({\n  name: 'ElButtonGroup',\n})\nconst props = defineProps(buttonGroupProps)\nprovide(\n  buttonGroupContextKey,\n  reactive({\n    size: toRef(props, 'size'),\n    type: toRef(props, 'type'),\n  })\n)\nconst ns = useNamespace('button')\n</script>\n", "import { withInstall, withNoopInstall } from '@element-plus/utils'\nimport Button from './src/button.vue'\nimport ButtonGroup from './src/button-group.vue'\n\nexport const ElButton = withInstall(Button, {\n  ButtonGroup,\n})\nexport const ElButtonGroup = withNoopInstall(ButtonGroup)\nexport default ElButton\n\nexport * from './src/button'\nexport * from './src/constants'\nexport type { ButtonInstance, ButtonGroupInstance } from './src/instance'\n"],
  "mappings": "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",
  "names": ["globalConfig", "ensureArray", "formatRegExp", "warning", "process", "env", "window", "document", "type", "errors", "console", "warn", "ASYNC_VALIDATOR_NO_WARNING", "every", "e", "convertFieldsError", "length", "fields", "forEach", "error", "field", "push", "format", "template", "args", "i", "len", "apply", "str", "replace", "x", "String", "Number", "JSON", "stringify", "_", "isNativeStringType", "isEmptyValue", "value", "undefined", "Array", "isArray", "asyncParallelArray", "arr", "func", "callback", "results", "total", "arrLength", "count", "a", "asyncSerialArray", "index", "next", "original", "flattenObjArr", "objArr", "ret", "Object", "keys", "k", "AsyncValidationError", "Error", "asyncMap", "option", "source", "first", "pending", "Promise", "resolve", "reject", "flattenArr", "firstFields", "objArrKeys", "objArrLength", "key", "indexOf", "isErrorObj", "obj", "message", "getValue", "path", "v", "complementError", "rule", "oe", "fieldValue", "fullFields", "fullField", "deepMerge", "target", "s", "hasOwnProperty", "required", "options", "messages", "whitespace", "test", "urlReg", "word", "b", "includeBoundaries", "v4", "v6seg", "v6", "trim", "v46Exact", "RegExp", "v4exact", "v6exact", "ip", "exact", "protocol", "auth", "ipv4", "ipv6", "host", "domain", "tld", "port", "regex", "pattern", "email", "hex", "types", "integer", "number", "parseInt", "array", "regexp", "date", "getTime", "getMonth", "getYear", "isNaN", "object", "method", "match", "url", "getUrlRegex", "custom", "ruleType", "range", "min", "max", "spRegexp", "val", "num", "ENUM", "enumerable", "join", "lastIndex", "mismatch", "_pattern", "enumRule", "string", "validate", "rules", "boolean", "floatFn", "dateObject", "Date", "any", "float", "enumValidator", "newMessages", "parse", "invalid", "clone", "cloned", "Schema", "descriptor", "_messages", "defaultMessages", "define", "name", "item", "source_", "o", "oc", "complete", "add", "concat", "series", "z", "r", "transform", "validator", "getValidationMethod", "getType", "errorFields", "data", "doIt", "deep", "defaultField", "addFullField", "schema", "cb", "errorList", "suppressWarning", "filledErrors", "map", "fieldsSchema", "paredFieldsSchema", "fieldSchema", "fieldSchemaList", "bind", "errs", "finalErrors", "res", "asyncValidator", "suppressValidatorError", "setTimeout", "then", "validators", "messageIndex", "splice", "register", "COMPONENT_NAME", "defineComponent", "name", "props", "isAutoWidth", "Boolean", "updateAll", "slots", "formContext", "inject", "throwError", "ns", "useNamespace", "el", "ref", "computedWidth", "getLabelWidth", "width", "window", "getComputedStyle", "value", "firstElementChild", "Math", "ceil", "Number", "parseFloat", "nextTick", "action", "onMounted", "updateLabelWidthFn", "onBeforeUnmount", "onUpdated", "watch", "registerLabelWidth", "useResizeObserver", "computed", "hasLabel", "style", "autoLabelWidth", "marginWidth", "max", "parseInt", "marginPosition", "labelPosition", "_createVNode", "be", "_Fragment", "required", "rules", "ensureArray", "globalConfig", "hex", "format", "TinyColor", "hex", "format"]
}

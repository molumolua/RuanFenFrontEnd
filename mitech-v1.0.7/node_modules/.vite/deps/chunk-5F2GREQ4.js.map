{
  "version": 3,
  "sources": ["../../../packages/components/tag/src/tag.ts", "../../../packages/components/tag/src/tag.vue", "../../../packages/components/tag/index.ts"],
  "sourcesContent": ["import { buildProps } from '@element-plus/utils'\nimport { componentSizes } from '@element-plus/constants'\nimport type Tag from './tag.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const tagProps = buildProps({\n  /**\n   * @description type of Tag\n   */\n  type: {\n    type: String,\n    values: ['success', 'info', 'warning', 'danger', ''],\n    default: '',\n  },\n  /**\n   * @description whether Tag can be removed\n   */\n  closable: Boolean,\n  /**\n   * @description whether to disable animations\n   */\n  disableTransitions: Boolean,\n  /**\n   * @description whether Tag has a highlighted border\n   */\n  hit: Boolean,\n  /**\n   * @description background color of the Tag\n   */\n  color: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description size of Tag\n   */\n  size: {\n    type: String,\n    values: componentSizes,\n    default: '',\n  },\n  /**\n   * @description theme of Tag\n   */\n  effect: {\n    type: String,\n    values: ['dark', 'light', 'plain'],\n    default: 'light',\n  },\n  /**\n   * @description whether Tag is rounded\n   */\n  round: Boolean,\n} as const)\nexport type TagProps = ExtractPropTypes<typeof tagProps>\n\nexport const tagEmits = {\n  close: (evt: MouseEvent) => evt instanceof MouseEvent,\n  click: (evt: MouseEvent) => evt instanceof MouseEvent,\n}\nexport type TagEmits = typeof tagEmits\n\nexport type TagInstance = InstanceType<typeof Tag>\n", "<template>\n  <span\n    v-if=\"disableTransitions\"\n    :class=\"containerKls\"\n    :style=\"{ backgroundColor: color }\"\n    @click=\"handleClick\"\n  >\n    <span :class=\"ns.e('content')\">\n      <slot />\n    </span>\n    <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click.stop=\"handleClose\">\n      <Close />\n    </el-icon>\n  </span>\n  <transition v-else :name=\"`${ns.namespace.value}-zoom-in-center`\" appear>\n    <span\n      :class=\"containerKls\"\n      :style=\"{ backgroundColor: color }\"\n      @click=\"handleClick\"\n    >\n      <span :class=\"ns.e('content')\">\n        <slot />\n      </span>\n      <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click.stop=\"handleClose\">\n        <Close />\n      </el-icon>\n    </span>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { Close } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormSize } from '@element-plus/components/form'\n\nimport { tagEmits, tagProps } from './tag'\n\ndefineOptions({\n  name: 'ElTag',\n})\nconst props = defineProps(tagProps)\nconst emit = defineEmits(tagEmits)\n\nconst tagSize = useFormSize()\nconst ns = useNamespace('tag')\nconst containerKls = computed(() => {\n  const { type, hit, effect, closable, round } = props\n  return [\n    ns.b(),\n    ns.is('closable', closable),\n    ns.m(type),\n    ns.m(tagSize.value),\n    ns.m(effect),\n    ns.is('hit', hit),\n    ns.is('round', round),\n  ]\n})\n\n// methods\nconst handleClose = (event: MouseEvent) => {\n  emit('close', event)\n}\n\nconst handleClick = (event: MouseEvent) => {\n  emit('click', event)\n}\n</script>\n", "import { withInstall } from '@element-plus/utils'\n\nimport Tag from './src/tag.vue'\n\nexport const ElTag = withInstall(Tag)\nexport default ElTag\n\nexport * from './src/tag'\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEY,IAAC,WAAW,WAAW;EACjC,MAAM;IACJ,MAAM;IACN,QAAQ,CAAC,WAAW,QAAQ,WAAW,UAAU,EAAE;IACnD,SAAS;EACb;EACE,UAAU;EACV,oBAAoB;EACpB,KAAK;EACL,OAAO;IACL,MAAM;IACN,SAAS;EACb;EACE,MAAM;IACJ,MAAM;IACN,QAAQ;IACR,SAAS;EACb;EACE,QAAQ;IACN,MAAM;IACN,QAAQ,CAAC,QAAQ,SAAS,OAAO;IACjC,SAAS;EACb;EACE,OAAO;AACT,CAAC;AACW,IAAC,WAAW;EACtB,OAAO,CAAC,QAAQ,eAAe;EAC/B,OAAO,CAAC,QAAQ,eAAe;AACjC;;;kCCSc;EACZ,MAAM;AACR,CAAA;;;;;;;AAIA,UAAM,UAAU,YAAY;AACtB,UAAA,KAAK,aAAa,KAAK;AACvB,UAAA,eAAe,SAAS,MAAM;AAClC,YAAM,EAAE,MAAM,KAAK,QAAQ,UAAU,MAAU,IAAA;AACxC,aAAA;QACL,GAAG,EAAE;QACL,GAAG,GAAG,YAAY,QAAQ;QAC1B,GAAG,EAAE,IAAI;QACT,GAAG,EAAE,QAAQ,KAAK;QAClB,GAAG,EAAE,MAAM;QACX,GAAG,GAAG,OAAO,GAAG;QAChB,GAAG,GAAG,SAAS,KAAK;MAAA;IACtB,CACD;AAGK,UAAA,cAAc,CAAC,UAAsB;AACzC,WAAK,SAAS,KAAK;IAAA;AAGf,UAAA,cAAc,CAAC,UAAsB;AACzC,WAAK,SAAS,KAAK;IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChET,IAAC,QAAQ,YAAY,GAAG;",
  "names": []
}

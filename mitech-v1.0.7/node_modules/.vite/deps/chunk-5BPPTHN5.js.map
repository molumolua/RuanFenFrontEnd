{
  "version": 3,
  "sources": ["../../../packages/components/collapse/src/collapse.ts", "../../../packages/components/collapse/src/constants.ts", "../../../packages/components/collapse/src/use-collapse.ts", "../../../packages/components/collapse/src/collapse.vue", "../../../packages/components/collapse/src/collapse-item.ts", "../../../packages/components/collapse/src/use-collapse-item.ts", "../../../packages/components/collapse/src/collapse-item.vue", "../../../packages/components/collapse/index.ts"],
  "sourcesContent": ["import {\n  buildProps,\n  definePropType,\n  isNumber,\n  isString,\n  mutable,\n} from '@element-plus/utils'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type { Arrayable } from '@element-plus/utils'\n\nexport type CollapseActiveName = string | number\nexport type CollapseModelValue = Arrayable<CollapseActiveName>\n\nexport const emitChangeFn = (value: CollapseModelValue) =>\n  typeof isNumber(value) || isString(value) || Array.isArray(value)\n\nexport const collapseProps = buildProps({\n  accordion: Boolean,\n  modelValue: {\n    type: definePropType<CollapseModelValue>([Array, String, Number]),\n    default: () => mutable([] as const),\n  },\n} as const)\nexport type CollapseProps = ExtractPropTypes<typeof collapseProps>\n\nexport const collapseEmits = {\n  [UPDATE_MODEL_EVENT]: emitChangeFn,\n  [CHANGE_EVENT]: emitChangeFn,\n}\nexport type CollapseEmits = typeof collapseEmits\n", "import type { InjectionKey, Ref } from 'vue'\nimport type { CollapseActiveName } from './collapse'\n\nexport interface CollapseContext {\n  activeNames: Ref<CollapseActiveName[]>\n  handleItemClick: (name: CollapseActiveName) => void\n}\n\nexport const collapseContextKey: InjectionKey<CollapseContext> =\n  Symbol('collapseContextKey')\n", "import { computed, provide, ref, watch } from 'vue'\nimport { ensureArray } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { collapseContextKey } from './constants'\n\nimport type { SetupContext } from 'vue'\nimport type {\n  CollapseActiveName,\n  CollapseEmits,\n  CollapseProps,\n} from './collapse'\n\nexport const useCollapse = (\n  props: CollapseProps,\n  emit: SetupContext<CollapseEmits>['emit']\n) => {\n  const activeNames = ref(ensureArray(props.modelValue))\n\n  const setActiveNames = (_activeNames: CollapseActiveName[]) => {\n    activeNames.value = _activeNames\n    const value = props.accordion ? activeNames.value[0] : activeNames.value\n    emit(UPDATE_MODEL_EVENT, value)\n    emit(CHANGE_EVENT, value)\n  }\n\n  const handleItemClick = (name: CollapseActiveName) => {\n    if (props.accordion) {\n      setActiveNames([activeNames.value[0] === name ? '' : name])\n    } else {\n      const _activeNames = [...activeNames.value]\n      const index = _activeNames.indexOf(name)\n\n      if (index > -1) {\n        _activeNames.splice(index, 1)\n      } else {\n        _activeNames.push(name)\n      }\n      setActiveNames(_activeNames)\n    }\n  }\n\n  watch(\n    () => props.modelValue,\n    () => (activeNames.value = ensureArray(props.modelValue)),\n    { deep: true }\n  )\n\n  provide(collapseContextKey, {\n    activeNames,\n    handleItemClick,\n  })\n  return {\n    activeNames,\n    setActiveNames,\n  }\n}\n\nexport const useCollapseDOM = () => {\n  const ns = useNamespace('collapse')\n\n  const rootKls = computed(() => ns.b())\n  return {\n    rootKls,\n  }\n}\n", "<template>\n  <div :class=\"rootKls\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { collapseEmits, collapseProps } from './collapse'\nimport { useCollapse, useCollapseDOM } from './use-collapse'\n\ndefineOptions({\n  name: 'ElCollapse',\n})\nconst props = defineProps(collapseProps)\nconst emit = defineEmits(collapseEmits)\n\nconst { activeNames, setActiveNames } = useCollapse(props, emit)\n\nconst { rootKls } = useCollapseDOM()\n\ndefineExpose({\n  /** @description active names */\n  activeNames,\n  /** @description set active names */\n  setActiveNames,\n})\n</script>\n", "import { buildProps, definePropType, generateId } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type { CollapseActiveName } from './collapse'\n\nexport const collapseItemProps = buildProps({\n  title: {\n    type: String,\n    default: '',\n  },\n  name: {\n    type: definePropType<CollapseActiveName>([String, Number]),\n    default: () => generateId(),\n  },\n  disabled: Boolean,\n} as const)\nexport type CollapseItemProps = ExtractPropTypes<typeof collapseItemProps>\n", "import { computed, inject, ref, unref } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { generateId } from '@element-plus/utils'\nimport { collapseContextKey } from './constants'\n\nimport type { CollapseItemProps } from './collapse-item'\n\nexport const useCollapseItem = (props: CollapseItemProps) => {\n  const collapse = inject(collapseContextKey)\n\n  const focusing = ref(false)\n  const isClick = ref(false)\n  const id = ref(generateId())\n\n  const isActive = computed(() =>\n    collapse?.activeNames.value.includes(props.name)\n  )\n\n  const handleFocus = () => {\n    setTimeout(() => {\n      if (!isClick.value) {\n        focusing.value = true\n      } else {\n        isClick.value = false\n      }\n    }, 50)\n  }\n\n  const handleHeaderClick = () => {\n    if (props.disabled) return\n    collapse?.handleItemClick(props.name)\n    focusing.value = false\n    isClick.value = true\n  }\n\n  const handleEnterClick = () => {\n    collapse?.handleItemClick(props.name)\n  }\n\n  return {\n    focusing,\n    id,\n    isActive,\n    handleFocus,\n    handleHeaderClick,\n    handleEnterClick,\n  }\n}\n\nexport const useCollapseItemDOM = (\n  props: CollapseItemProps,\n  { focusing, isActive, id }: Partial<ReturnType<typeof useCollapseItem>>\n) => {\n  const ns = useNamespace('collapse')\n\n  const rootKls = computed(() => [\n    ns.b('item'),\n    ns.is('active', unref(isActive)),\n    ns.is('disabled', props.disabled),\n  ])\n  const headKls = computed(() => [\n    ns.be('item', 'header'),\n    ns.is('active', unref(isActive)),\n    { focusing: unref(focusing) && !props.disabled },\n  ])\n  const arrowKls = computed(() => [\n    ns.be('item', 'arrow'),\n    ns.is('active', unref(isActive)),\n  ])\n  const itemWrapperKls = computed(() => ns.be('item', 'wrap'))\n  const itemContentKls = computed(() => ns.be('item', 'content'))\n  const scopedContentId = computed(() => ns.b(`content-${unref(id)}`))\n  const scopedHeadId = computed(() => ns.b(`head-${unref(id)}`))\n\n  return {\n    arrowKls,\n    headKls,\n    rootKls,\n    itemWrapperKls,\n    itemContentKls,\n    scopedContentId,\n    scopedHeadId,\n  }\n}\n", "<template>\n  <div :class=\"rootKls\">\n    <button\n      :id=\"scopedHeadId\"\n      :class=\"headKls\"\n      :aria-expanded=\"isActive\"\n      :aria-controls=\"scopedContentId\"\n      :aria-describedby=\"scopedContentId\"\n      :tabindex=\"disabled ? -1 : 0\"\n      type=\"button\"\n      @click=\"handleHeaderClick\"\n      @keydown.space.enter.stop.prevent=\"handleEnterClick\"\n      @focus=\"handleFocus\"\n      @blur=\"focusing = false\"\n    >\n      <slot name=\"title\">{{ title }}</slot>\n      <el-icon :class=\"arrowKls\">\n        <arrow-right />\n      </el-icon>\n    </button>\n\n    <el-collapse-transition>\n      <div\n        v-show=\"isActive\"\n        :id=\"scopedContentId\"\n        role=\"region\"\n        :class=\"itemWrapperKls\"\n        :aria-hidden=\"!isActive\"\n        :aria-labelledby=\"scopedHeadId\"\n      >\n        <div :class=\"itemContentKls\">\n          <slot />\n        </div>\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElIcon from '@element-plus/components/icon'\nimport { ArrowRight } from '@element-plus/icons-vue'\nimport { collapseItemProps } from './collapse-item'\nimport { useCollapseItem, useCollapseItemDOM } from './use-collapse-item'\n\ndefineOptions({\n  name: 'ElCollapseItem',\n})\n\nconst props = defineProps(collapseItemProps)\nconst {\n  focusing,\n  id,\n  isActive,\n  handleFocus,\n  handleHeaderClick,\n  handleEnterClick,\n} = useCollapseItem(props)\n\nconst {\n  arrowKls,\n  headKls,\n  rootKls,\n  itemWrapperKls,\n  itemContentKls,\n  scopedContentId,\n  scopedHeadId,\n} = useCollapseItemDOM(props, { focusing, isActive, id })\n\ndefineExpose({\n  /** @description current collapse-item whether active */\n  isActive,\n})\n</script>\n", "import { withInstall, withNoopInstall } from '@element-plus/utils'\n\nimport Collapse from './src/collapse.vue'\nimport CollapseItem from './src/collapse-item.vue'\n\nexport const ElCollapse = withInstall(Collapse, {\n  CollapseItem,\n})\nexport default ElCollapse\nexport const ElCollapseItem = withNoopInstall(CollapseItem)\n\nexport * from './src/collapse'\nexport * from './src/collapse-item'\nexport * from './src/constants'\nexport type { CollapseInstance, CollapseItemInstance } from './src/instance'\n"],
  "mappings": "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",
  "names": ["ensureArray"]
}

{
  "version": 3,
  "sources": ["../../../packages/components/collection/src/collection.vue", "../../../packages/components/collection/src/collection-item.vue", "../../../packages/components/collection/src/collection.ts", "../../../packages/components/roving-focus-group/src/roving-focus-group.ts", "../../../packages/components/roving-focus-group/src/tokens.ts", "../../../packages/components/roving-focus-group/src/utils.ts", "../../../packages/components/roving-focus-group/src/roving-focus-group-impl.vue", "../../../packages/components/roving-focus-group/src/roving-focus-group.vue", "../../../packages/components/roving-focus-group/src/roving-focus-item.vue", "../../../packages/components/dropdown/src/dropdown.ts", "../../../packages/components/dropdown/src/tokens.ts", "../../../packages/components/dropdown/src/dropdown.vue", "../../../packages/components/dropdown/src/dropdown-item-impl.vue", "../../../packages/components/dropdown/src/useDropdown.ts", "../../../packages/components/dropdown/src/dropdown-item.vue", "../../../packages/components/dropdown/src/dropdown-menu.vue", "../../../packages/components/dropdown/index.ts", "../../../packages/components/popover/src/popover.ts", "../../../packages/components/popover/src/popover.vue", "../../../packages/components/popover/src/directive.ts", "../../../packages/components/popover/index.ts"],
  "sourcesContent": ["<template>\n  <slot />\n</template>\n\n<script lang=\"ts\" setup>\ndefineOptions({\n  inheritAttrs: false,\n})\n</script>\n", "<template>\n  <slot />\n</template>\n\n<script lang=\"ts\" setup>\ndefineOptions({\n  name: 'ElCollectionItem',\n  inheritAttrs: false,\n})\n</script>\n", "import { inject, onBeforeUnmount, onMounted, provide, ref, unref } from 'vue'\nimport Collection from './collection.vue'\nimport CollectionItem from './collection-item.vue'\n\nimport type { InjectionKey } from 'vue'\nimport type { SetupContext } from '@vue/runtime-core'\nimport type {\n  ElCollectionInjectionContext,\n  ElCollectionItemInjectionContext,\n} from './tokens'\n\nexport const COLLECTION_ITEM_SIGN = `data-el-collection-item`\n\n// Make sure the first letter of name is capitalized\nexport const createCollectionWithScope = (name: string) => {\n  const COLLECTION_NAME = `El${name}Collection`\n  const COLLECTION_ITEM_NAME = `${COLLECTION_NAME}Item`\n  const COLLECTION_INJECTION_KEY: InjectionKey<ElCollectionInjectionContext> =\n    Symbol(COLLECTION_NAME)\n  const COLLECTION_ITEM_INJECTION_KEY: InjectionKey<ElCollectionItemInjectionContext> =\n    Symbol(COLLECTION_ITEM_NAME)\n\n  const ElCollection = {\n    ...Collection,\n    name: COLLECTION_NAME,\n    setup() {\n      const collectionRef = ref<HTMLElement | null>(null)\n      const itemMap: ElCollectionInjectionContext['itemMap'] = new Map()\n      const getItems = () => {\n        const collectionEl = unref(collectionRef)\n\n        if (!collectionEl) return []\n        const orderedNodes = Array.from(\n          collectionEl.querySelectorAll(`[${COLLECTION_ITEM_SIGN}]`)\n        )\n\n        const items = [...itemMap.values()]\n\n        return items.sort(\n          (a, b) => orderedNodes.indexOf(a.ref!) - orderedNodes.indexOf(b.ref!)\n        )\n      }\n\n      provide(COLLECTION_INJECTION_KEY, {\n        itemMap,\n        getItems,\n        collectionRef,\n      })\n    },\n  }\n\n  const ElCollectionItem = {\n    ...CollectionItem,\n    name: COLLECTION_ITEM_NAME,\n    setup(_: unknown, { attrs }: SetupContext) {\n      const collectionItemRef = ref<HTMLElement | null>(null)\n      const collectionInjection = inject(COLLECTION_INJECTION_KEY, undefined)!\n\n      provide(COLLECTION_ITEM_INJECTION_KEY, {\n        collectionItemRef,\n      })\n\n      onMounted(() => {\n        const collectionItemEl = unref(collectionItemRef)\n        if (collectionItemEl) {\n          collectionInjection.itemMap.set(collectionItemEl, {\n            ref: collectionItemEl,\n            ...attrs,\n          })\n        }\n      })\n\n      onBeforeUnmount(() => {\n        const collectionItemEl = unref(collectionItemRef)!\n        collectionInjection.itemMap.delete(collectionItemEl)\n      })\n    },\n  }\n\n  return {\n    COLLECTION_INJECTION_KEY,\n    COLLECTION_ITEM_INJECTION_KEY,\n    ElCollection,\n    ElCollectionItem,\n  }\n}\n", "import { buildProps, definePropType } from '@element-plus/utils'\nimport { createCollectionWithScope } from '@element-plus/components/collection'\nimport type { ExtractPropTypes, HTMLAttributes, StyleValue } from 'vue'\n\nexport const rovingFocusGroupProps = buildProps({\n  style: { type: definePropType<StyleValue>([String, Array, Object]) },\n  currentTabId: {\n    type: definePropType<string | null>(String),\n  },\n  defaultCurrentTabId: String,\n  loop: Boolean,\n  dir: {\n    type: String, // left for direction support\n    values: ['ltr', 'rtl'],\n    default: 'ltr',\n  },\n  orientation: {\n    // left for orientation support\n    type: definePropType<HTMLAttributes['aria-orientation']>(String),\n  },\n\n  onBlur: Function,\n  onFocus: Function,\n  onMousedown: Function,\n})\n\nexport type ElRovingFocusGroupProps = ExtractPropTypes<\n  typeof rovingFocusGroupProps\n>\n\nconst {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY,\n} = createCollectionWithScope('RovingFocusGroup')\n\nexport {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY as ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY as ROVING_FOCUS_ITEM_COLLECTION_INJECTION_KEY,\n}\n", "import type { InjectionKey, Ref, StyleValue } from 'vue'\nimport type { ElRovingFocusGroupProps } from './roving-focus-group'\n\ntype EventHandler<T = Event> = (e: T) => void\n\nexport type RovingGroupInjectionContext = {\n  currentTabbedId: Ref<string | null>\n  dir: Ref<ElRovingFocusGroupProps['dir']>\n  loop: Ref<ElRovingFocusGroupProps['loop']>\n  orientation: Ref<ElRovingFocusGroupProps['orientation']>\n  tabIndex: Ref<number>\n  rovingFocusGroupRef: Ref<HTMLElement | null>\n  rovingFocusGroupRootStyle: Ref<StyleValue>\n  onBlur: EventHandler\n  onFocus: EventHandler<FocusEvent>\n  onMousedown: EventHandler\n  onItemFocus: (id: string) => void\n  onItemShiftTab: () => void\n}\n\nexport type RovingFocusGroupItemInjectionContext = {\n  rovingFocusGroupItemRef: Ref<HTMLElement | null>\n  tabIndex: Ref<number>\n  handleMousedown: EventHandler\n  handleFocus: EventHandler\n  handleKeydown: EventHandler\n}\n\nexport const ROVING_FOCUS_GROUP_INJECTION_KEY: InjectionKey<RovingGroupInjectionContext> =\n  Symbol('elRovingFocusGroup')\n\nexport const ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY: InjectionKey<RovingFocusGroupItemInjectionContext> =\n  Symbol('elRovingFocusGroupItem')\n", "import { EVENT_CODE } from '@element-plus/constants'\nimport type { HTMLAttributes } from 'vue'\n\ntype Orientation = HTMLAttributes['aria-orientation']\ntype Direction = 'ltr' | 'rtl'\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next'\n\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev',\n  ArrowUp: 'prev',\n  ArrowRight: 'next',\n  ArrowDown: 'next',\n  PageUp: 'first',\n  Home: 'first',\n  PageDown: 'last',\n  End: 'last',\n}\n\nconst getDirectionAwareKey = (key: string, dir?: Direction) => {\n  if (dir !== 'rtl') return key\n\n  switch (key) {\n    case EVENT_CODE.right:\n      return EVENT_CODE.left\n    case EVENT_CODE.left:\n      return EVENT_CODE.right\n    default:\n      return key\n  }\n}\n\nexport const getFocusIntent = (\n  event: KeyboardEvent,\n  orientation?: Orientation,\n  dir?: Direction\n) => {\n  const key = getDirectionAwareKey(event.key, dir)\n  if (\n    orientation === 'vertical' &&\n    [EVENT_CODE.left, EVENT_CODE.right].includes(key)\n  )\n    return undefined\n  if (\n    orientation === 'horizontal' &&\n    [EVENT_CODE.up, EVENT_CODE.down].includes(key)\n  )\n    return undefined\n  return MAP_KEY_TO_FOCUS_INTENT[key]\n}\n\nexport const reorderArray = <T>(array: T[], atIdx: number) => {\n  return array.map((_, idx) => array[(idx + atIdx) % array.length])\n}\n\nexport const focusFirst = (elements: HTMLElement[]) => {\n  const { activeElement: prevActive } = document\n\n  for (const element of elements) {\n    if (element === prevActive) return\n    element.focus()\n    if (prevActive !== document.activeElement) return\n  }\n}\n", "<template>\n  <slot />\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  provide,\n  readonly,\n  ref,\n  toRef,\n  unref,\n  watch,\n} from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { composeEventHandlers } from '@element-plus/utils'\nimport {\n  ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n  rovingFocusGroupProps,\n} from './roving-focus-group'\nimport { ROVING_FOCUS_GROUP_INJECTION_KEY } from './tokens'\nimport { focusFirst } from './utils'\n\nimport type { StyleValue } from 'vue'\n\nconst CURRENT_TAB_ID_CHANGE_EVT = 'currentTabIdChange'\n\nconst ENTRY_FOCUS_EVT = 'rovingFocusGroup.entryFocus'\nconst EVT_OPTS: EventInit = { bubbles: false, cancelable: true }\nexport default defineComponent({\n  name: 'ElRovingFocusGroupImpl',\n  inheritAttrs: false,\n  props: rovingFocusGroupProps,\n  emits: [CURRENT_TAB_ID_CHANGE_EVT, 'entryFocus'],\n  setup(props, { emit }) {\n    const currentTabbedId = ref<string | null>(\n      (props.currentTabId || props.defaultCurrentTabId) ?? null\n    )\n    const isBackingOut = ref(false)\n    const isClickFocus = ref(false)\n    const rovingFocusGroupRef = ref<HTMLElement | null>(null)\n    const { getItems } = inject(\n      ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n    const rovingFocusGroupRootStyle = computed(() => {\n      // casting to any for fix compiler error since HTMLElement.StyleValue does not\n      // support CSSProperties\n      return [\n        {\n          outline: 'none',\n        },\n        props.style as StyleValue,\n      ] as any\n    })\n\n    const onItemFocus = (tabbedId: string) => {\n      emit(CURRENT_TAB_ID_CHANGE_EVT, tabbedId)\n    }\n\n    const onItemShiftTab = () => {\n      isBackingOut.value = true\n    }\n\n    const onMousedown = composeEventHandlers(\n      (e: Event) => {\n        props.onMousedown?.(e)\n      },\n      () => {\n        isClickFocus.value = true\n      }\n    )\n\n    const onFocus = composeEventHandlers(\n      (e: FocusEvent) => {\n        props.onFocus?.(e)\n      },\n      (e) => {\n        const isKeyboardFocus = !unref(isClickFocus)\n        const { target, currentTarget } = e\n        if (\n          target === currentTarget &&\n          isKeyboardFocus &&\n          !unref(isBackingOut)\n        ) {\n          const entryFocusEvt = new Event(ENTRY_FOCUS_EVT, EVT_OPTS)\n          currentTarget?.dispatchEvent(entryFocusEvt)\n\n          if (!entryFocusEvt.defaultPrevented) {\n            const items = getItems<{\n              id: string\n              focusable: boolean\n              active: boolean\n            }>().filter((item) => item.focusable)\n            const activeItem = items.find((item) => item.active)\n            const currentItem = items.find(\n              (item) => item.id === unref(currentTabbedId)\n            )\n            const candidates = [activeItem!, currentItem!, ...items].filter(\n              Boolean\n            )\n            const candidateNodes = candidates.map((item) => item.ref!)\n            focusFirst(candidateNodes)\n          }\n        }\n\n        isClickFocus.value = false\n      }\n    )\n\n    const onBlur = composeEventHandlers(\n      (e: Event) => {\n        props.onBlur?.(e)\n      },\n      () => {\n        isBackingOut.value = false\n      }\n    )\n\n    const handleEntryFocus = (...args: any[]) => {\n      emit('entryFocus', ...args)\n    }\n\n    provide(ROVING_FOCUS_GROUP_INJECTION_KEY, {\n      currentTabbedId: readonly(currentTabbedId),\n      loop: toRef(props, 'loop'),\n      tabIndex: computed(() => {\n        return unref(isBackingOut) ? -1 : 0\n      }),\n      rovingFocusGroupRef,\n      rovingFocusGroupRootStyle,\n      orientation: toRef(props, 'orientation'),\n      dir: toRef(props, 'dir'),\n      onItemFocus,\n      onItemShiftTab,\n      onBlur,\n      onFocus,\n      onMousedown,\n    })\n\n    watch(\n      () => props.currentTabId,\n      (val) => {\n        currentTabbedId.value = val ?? null\n      }\n    )\n\n    useEventListener(rovingFocusGroupRef, ENTRY_FOCUS_EVT, handleEntryFocus)\n  },\n})\n</script>\n", "<template>\n  <el-focus-group-collection>\n    <el-roving-focus-group-impl v-bind=\"$attrs\">\n      <slot />\n    </el-roving-focus-group-impl>\n  </el-focus-group-collection>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport ElRovingFocusGroupImpl from './roving-focus-group-impl.vue'\nimport { ElCollection as ElFocusGroupCollection } from './roving-focus-group'\n\nexport default defineComponent({\n  name: 'ElRovingFocusGroup',\n  components: {\n    ElFocusGroupCollection,\n    ElRovingFocusGroupImpl,\n  },\n})\n</script>\n", "<template>\n  <el-roving-focus-collection-item\n    :id=\"id\"\n    :focusable=\"focusable\"\n    :active=\"active\"\n  >\n    <slot />\n  </el-roving-focus-collection-item>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  unref,\n} from 'vue'\nimport { useId } from '@element-plus/hooks'\nimport { composeEventHandlers } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport {\n  ElCollectionItem as ElRovingFocusCollectionItem,\n  ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n} from './roving-focus-group'\nimport {\n  ROVING_FOCUS_GROUP_INJECTION_KEY,\n  ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY,\n} from './tokens'\nimport { focusFirst, getFocusIntent, reorderArray } from './utils'\n\nexport default defineComponent({\n  components: {\n    ElRovingFocusCollectionItem,\n  },\n  props: {\n    focusable: {\n      type: Boolean,\n      default: true,\n    },\n    active: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['mousedown', 'focus', 'keydown'],\n  setup(props, { emit }) {\n    const { currentTabbedId, loop, onItemFocus, onItemShiftTab } = inject(\n      ROVING_FOCUS_GROUP_INJECTION_KEY,\n      undefined\n    )!\n\n    const { getItems } = inject(\n      ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const id = useId()\n    const rovingFocusGroupItemRef = ref<HTMLElement | null>(null)\n\n    const handleMousedown = composeEventHandlers(\n      (e: Event) => {\n        emit('mousedown', e)\n      },\n      (e) => {\n        if (!props.focusable) {\n          e.preventDefault()\n        } else {\n          onItemFocus(unref(id))\n        }\n      }\n    )\n\n    const handleFocus = composeEventHandlers(\n      (e: Event) => {\n        emit('focus', e)\n      },\n      () => {\n        onItemFocus(unref(id))\n      }\n    )\n\n    const handleKeydown = composeEventHandlers(\n      (e: Event) => {\n        emit('keydown', e)\n      },\n      (e) => {\n        const { key, shiftKey, target, currentTarget } = e as KeyboardEvent\n        if (key === EVENT_CODE.tab && shiftKey) {\n          onItemShiftTab()\n          return\n        }\n        if (target !== currentTarget) return\n        const focusIntent = getFocusIntent(e as KeyboardEvent)\n\n        if (focusIntent) {\n          e.preventDefault()\n          const items = getItems<typeof props>().filter(\n            (item) => item.focusable\n          )\n\n          let elements = items.map((item) => item.ref!)\n\n          switch (focusIntent) {\n            case 'last': {\n              elements.reverse()\n              break\n            }\n            case 'prev':\n            case 'next': {\n              if (focusIntent === 'prev') {\n                elements.reverse()\n              }\n              const currentIdx = elements.indexOf(currentTarget as HTMLElement)\n              elements = loop.value\n                ? reorderArray(elements, currentIdx + 1)\n                : elements.slice(currentIdx + 1)\n              break\n            }\n            default: {\n              break\n            }\n          }\n\n          nextTick(() => {\n            focusFirst(elements)\n          })\n        }\n      }\n    )\n\n    const isCurrentTab = computed(() => currentTabbedId.value === unref(id))\n\n    provide(ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, {\n      rovingFocusGroupItemRef,\n      tabIndex: computed(() => (unref(isCurrentTab) ? 0 : -1)),\n      handleMousedown,\n      handleFocus,\n      handleKeydown,\n    })\n\n    return {\n      id,\n      handleKeydown,\n      handleFocus,\n      handleMousedown,\n    }\n  },\n})\n</script>\n", "// @ts-nocheck\nimport { buildProps, definePropType, iconPropType } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { createCollectionWithScope } from '@element-plus/components/collection'\nimport {\n  useTooltipContentProps,\n  useTooltipTriggerProps,\n} from '@element-plus/components/tooltip'\n\nimport type { Options } from '@popperjs/core'\nimport type { ButtonProps, ButtonType } from '@element-plus/components/button'\nimport type { Placement } from '@element-plus/components/popper'\nimport type { ComponentInternalInstance, ComputedRef } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\n\nexport interface IElDropdownInstance {\n  instance?: ComponentInternalInstance\n  dropdownSize?: ComputedRef<string>\n  handleClick?: () => void\n  commandHandler?: (...arg) => void\n  show?: () => void\n  hide?: () => void\n  trigger?: ComputedRef<string>\n  hideOnClick?: ComputedRef<boolean>\n  triggerElm?: ComputedRef<Nullable<HTMLButtonElement>>\n}\n\nexport const dropdownProps = buildProps({\n  trigger: useTooltipTriggerProps.trigger,\n  effect: {\n    ...useTooltipContentProps.effect,\n    default: 'light',\n  },\n  type: {\n    type: definePropType<ButtonType>(String),\n  },\n  placement: {\n    type: definePropType<Placement>(String),\n    default: 'bottom',\n  },\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({}),\n  },\n  id: String,\n  size: {\n    type: String,\n    default: '',\n  },\n  splitButton: Boolean,\n  hideOnClick: {\n    type: Boolean,\n    default: true,\n  },\n  loop: {\n    type: Boolean,\n    default: true,\n  },\n  showTimeout: {\n    type: Number,\n    default: 150,\n  },\n  hideTimeout: {\n    type: Number,\n    default: 150,\n  },\n  tabindex: {\n    type: definePropType<number | string>([Number, String]),\n    default: 0,\n  },\n  maxHeight: {\n    type: definePropType<number | string>([Number, String]),\n    default: '',\n  },\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  role: {\n    type: String,\n    default: 'menu',\n  },\n  buttonProps: {\n    type: definePropType<ButtonProps>(Object),\n  },\n  teleported: useTooltipContentProps.teleported,\n} as const)\n\nexport const dropdownItemProps = buildProps({\n  command: {\n    type: [Object, String, Number],\n    default: () => ({}),\n  },\n  disabled: Boolean,\n  divided: Boolean,\n  textValue: String,\n  icon: {\n    type: iconPropType,\n  },\n} as const)\n\nexport const dropdownMenuProps = buildProps({\n  onKeydown: { type: definePropType<(e: KeyboardEvent) => void>(Function) },\n})\n\nexport const FIRST_KEYS = [\n  EVENT_CODE.down,\n  EVENT_CODE.pageDown,\n  EVENT_CODE.home,\n]\n\nexport const LAST_KEYS = [EVENT_CODE.up, EVENT_CODE.pageUp, EVENT_CODE.end]\n\nexport const FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS]\n\nconst {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY,\n} = createCollectionWithScope('Dropdown')\n\nexport {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY as DROPDOWN_COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY as DROPDOWN_COLLECTION_ITEM_INJECTION_KEY,\n}\n", "import type { ComputedRef, InjectionKey, Ref } from 'vue'\n\nexport type ElDropdownInjectionContext = {\n  contentRef: Ref<HTMLElement | null>\n  role: ComputedRef<string>\n  triggerId: ComputedRef<string>\n  isUsingKeyboard: Ref<boolean>\n  onItemLeave: (e: PointerEvent) => void\n  onItemEnter: (e: PointerEvent) => void\n}\n\nexport const DROPDOWN_INJECTION_KEY: InjectionKey<ElDropdownInjectionContext> =\n  Symbol('elDropdown')\n", "<template>\n  <div :class=\"[ns.b(), ns.is('disabled', disabled)]\">\n    <el-tooltip\n      ref=\"popperRef\"\n      :role=\"role\"\n      :effect=\"effect\"\n      :fallback-placements=\"['bottom', 'top']\"\n      :popper-options=\"popperOptions\"\n      :gpu-acceleration=\"false\"\n      :hide-after=\"trigger === 'hover' ? hideTimeout : 0\"\n      :manual-mode=\"true\"\n      :placement=\"placement\"\n      :popper-class=\"[ns.e('popper'), popperClass]\"\n      :reference-element=\"referenceElementRef?.$el\"\n      :trigger=\"trigger\"\n      :trigger-keys=\"triggerKeys\"\n      :trigger-target-el=\"contentRef\"\n      :show-after=\"trigger === 'hover' ? showTimeout : 0\"\n      :stop-popper-mouse-event=\"false\"\n      :virtual-ref=\"triggeringElementRef\"\n      :virtual-triggering=\"splitButton\"\n      :disabled=\"disabled\"\n      :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n      :teleported=\"teleported\"\n      pure\n      persistent\n      @before-show=\"handleBeforeShowTooltip\"\n      @show=\"handleShowTooltip\"\n      @before-hide=\"handleBeforeHideTooltip\"\n    >\n      <template #content>\n        <el-scrollbar\n          ref=\"scrollbar\"\n          :wrap-style=\"wrapStyle\"\n          tag=\"div\"\n          :view-class=\"ns.e('list')\"\n        >\n          <el-roving-focus-group\n            :loop=\"loop\"\n            :current-tab-id=\"currentTabId\"\n            orientation=\"horizontal\"\n            @current-tab-id-change=\"handleCurrentTabIdChange\"\n            @entry-focus=\"handleEntryFocus\"\n          >\n            <el-dropdown-collection>\n              <slot name=\"dropdown\" />\n            </el-dropdown-collection>\n          </el-roving-focus-group>\n        </el-scrollbar>\n      </template>\n      <template v-if=\"!splitButton\" #default>\n        <el-only-child\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          role=\"button\"\n          :tabindex=\"tabindex\"\n        >\n          <slot name=\"default\" />\n        </el-only-child>\n      </template>\n    </el-tooltip>\n    <template v-if=\"splitButton\">\n      <el-button-group>\n        <el-button\n          ref=\"referenceElementRef\"\n          v-bind=\"buttonProps\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          @click=\"handlerMainButtonClick\"\n        >\n          <slot name=\"default\" />\n        </el-button>\n        <el-button\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          v-bind=\"buttonProps\"\n          role=\"button\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :class=\"ns.e('caret-button')\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          :aria-label=\"t('el.dropdown.toggleDropdown')\"\n        >\n          <el-icon :class=\"ns.e('icon')\"><arrow-down /></el-icon>\n        </el-button>\n      </el-button-group>\n    </template>\n  </div>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  onBeforeUnmount,\n  provide,\n  ref,\n  toRef,\n  unref,\n  watch,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElIcon from '@element-plus/components/icon'\nimport ElRovingFocusGroup from '@element-plus/components/roving-focus-group'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { useFormSize } from '@element-plus/components/form'\nimport { addUnit, ensureArray } from '@element-plus/utils'\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useId, useLocale, useNamespace } from '@element-plus/hooks'\nimport { ElCollection as ElDropdownCollection, dropdownProps } from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nimport type { CSSProperties } from 'vue'\n\nconst { ButtonGroup: ElButtonGroup } = ElButton\n\nexport default defineComponent({\n  name: 'ElDropdown',\n  components: {\n    ElButton,\n    ElButtonGroup,\n    ElScrollbar,\n    ElDropdownCollection,\n    ElTooltip,\n    ElRovingFocusGroup,\n    ElOnlyChild,\n    ElIcon,\n    ArrowDown,\n  },\n  props: dropdownProps,\n  emits: ['visible-change', 'click', 'command'],\n  setup(props, { emit }) {\n    const _instance = getCurrentInstance()\n    const ns = useNamespace('dropdown')\n    const { t } = useLocale()\n\n    const triggeringElementRef = ref()\n    const referenceElementRef = ref()\n    const popperRef = ref<InstanceType<typeof ElTooltip> | null>(null)\n    const contentRef = ref<HTMLElement | null>(null)\n    const scrollbar = ref(null)\n    const currentTabId = ref<string | null>(null)\n    const isUsingKeyboard = ref(false)\n    const triggerKeys = [EVENT_CODE.enter, EVENT_CODE.space, EVENT_CODE.down]\n\n    const wrapStyle = computed<CSSProperties>(() => ({\n      maxHeight: addUnit(props.maxHeight),\n    }))\n    const dropdownTriggerKls = computed(() => [ns.m(dropdownSize.value)])\n    const trigger = computed(() => ensureArray(props.trigger))\n\n    const defaultTriggerId = useId().value\n    const triggerId = computed<string>(() => {\n      return props.id || defaultTriggerId\n    })\n\n    // The goal of this code is to focus on the tooltip triggering element when it is hovered.\n    // This is a temporary fix for where closing the dropdown through pointerleave event focuses on a\n    // completely different element. For a permanent solution, remove all calls to any \"element.focus()\"\n    // that are triggered through pointer enter/leave events.\n    watch(\n      [triggeringElementRef, trigger],\n      ([triggeringElement, trigger], [prevTriggeringElement]) => {\n        if (prevTriggeringElement?.$el?.removeEventListener) {\n          prevTriggeringElement.$el.removeEventListener(\n            'pointerenter',\n            onAutofocusTriggerEnter\n          )\n        }\n        if (triggeringElement?.$el?.removeEventListener) {\n          triggeringElement.$el.removeEventListener(\n            'pointerenter',\n            onAutofocusTriggerEnter\n          )\n        }\n        if (\n          triggeringElement?.$el?.addEventListener &&\n          trigger.includes('hover')\n        ) {\n          triggeringElement.$el.addEventListener(\n            'pointerenter',\n            onAutofocusTriggerEnter\n          )\n        }\n      },\n      { immediate: true }\n    )\n\n    onBeforeUnmount(() => {\n      if (triggeringElementRef.value?.$el?.removeEventListener) {\n        triggeringElementRef.value.$el.removeEventListener(\n          'pointerenter',\n          onAutofocusTriggerEnter\n        )\n      }\n    })\n\n    function handleClick() {\n      handleClose()\n    }\n\n    function handleClose() {\n      popperRef.value?.onClose()\n    }\n\n    function handleOpen() {\n      popperRef.value?.onOpen()\n    }\n\n    const dropdownSize = useFormSize()\n\n    function commandHandler(...args: any[]) {\n      emit('command', ...args)\n    }\n\n    function onAutofocusTriggerEnter() {\n      triggeringElementRef.value?.$el?.focus()\n    }\n\n    function onItemEnter() {\n      // NOOP for now\n    }\n\n    function onItemLeave() {\n      const contentEl = unref(contentRef)\n\n      trigger.value.includes('hover') && contentEl?.focus()\n      currentTabId.value = null\n    }\n\n    function handleCurrentTabIdChange(id: string) {\n      currentTabId.value = id\n    }\n\n    function handleEntryFocus(e: Event) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n      }\n    }\n\n    function handleBeforeShowTooltip() {\n      emit('visible-change', true)\n    }\n\n    function handleShowTooltip(event?: Event) {\n      if (event?.type === 'keydown') {\n        contentRef.value.focus()\n      }\n    }\n\n    function handleBeforeHideTooltip() {\n      emit('visible-change', false)\n    }\n\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef,\n      role: computed(() => props.role),\n      triggerId,\n      isUsingKeyboard,\n      onItemEnter,\n      onItemLeave,\n    })\n\n    provide('elDropdown', {\n      instance: _instance,\n      dropdownSize,\n      handleClick,\n      commandHandler,\n      trigger: toRef(props, 'trigger'),\n      hideOnClick: toRef(props, 'hideOnClick'),\n    })\n\n    const onFocusAfterTrapped = (e: Event) => {\n      e.preventDefault()\n      contentRef.value?.focus?.({\n        preventScroll: true,\n      })\n    }\n\n    const handlerMainButtonClick = (event: MouseEvent) => {\n      emit('click', event)\n    }\n\n    return {\n      t,\n      ns,\n      scrollbar,\n      wrapStyle,\n      dropdownTriggerKls,\n      dropdownSize,\n      triggerId,\n      triggerKeys,\n      currentTabId,\n      handleCurrentTabIdChange,\n      handlerMainButtonClick,\n      handleEntryFocus,\n      handleClose,\n      handleOpen,\n      handleBeforeShowTooltip,\n      handleShowTooltip,\n      handleBeforeHideTooltip,\n      onFocusAfterTrapped,\n      popperRef,\n      contentRef,\n      triggeringElementRef,\n      referenceElementRef,\n    }\n  },\n})\n</script>\n", "<template>\n  <li\n    v-if=\"divided\"\n    role=\"separator\"\n    :class=\"ns.bem('menu', 'item', 'divided')\"\n    v-bind=\"$attrs\"\n  />\n  <li\n    :ref=\"itemRef\"\n    v-bind=\"{ ...dataset, ...$attrs }\"\n    :aria-disabled=\"disabled\"\n    :class=\"[ns.be('menu', 'item'), ns.is('disabled', disabled)]\"\n    :tabindex=\"tabIndex\"\n    :role=\"role\"\n    @click=\"(e) => $emit('clickimpl', e)\"\n    @focus=\"handleFocus\"\n    @keydown.self=\"handleKeydown\"\n    @mousedown=\"handleMousedown\"\n    @pointermove=\"(e) => $emit('pointermove', e)\"\n    @pointerleave=\"(e) => $emit('pointerleave', e)\"\n  >\n    <el-icon v-if=\"icon\">\n      <component :is=\"icon\" />\n    </el-icon>\n    <slot />\n  </li>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport { computed, defineComponent, inject } from 'vue'\nimport {\n  ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY,\n  ROVING_FOCUS_ITEM_COLLECTION_INJECTION_KEY,\n} from '@element-plus/components/roving-focus-group'\nimport { COLLECTION_ITEM_SIGN } from '@element-plus/components/collection'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { composeEventHandlers, composeRefs } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport {\n  DROPDOWN_COLLECTION_ITEM_INJECTION_KEY,\n  dropdownItemProps,\n} from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'DropdownItemImpl',\n  components: {\n    ElIcon,\n  },\n  props: dropdownItemProps,\n  emits: ['pointermove', 'pointerleave', 'click', 'clickimpl'],\n  setup(_, { emit }) {\n    const ns = useNamespace('dropdown')\n\n    const { role: menuRole } = inject(DROPDOWN_INJECTION_KEY, undefined)!\n\n    const { collectionItemRef: dropdownCollectionItemRef } = inject(\n      DROPDOWN_COLLECTION_ITEM_INJECTION_KEY,\n      undefined\n    )!\n\n    const { collectionItemRef: rovingFocusCollectionItemRef } = inject(\n      ROVING_FOCUS_ITEM_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const {\n      rovingFocusGroupItemRef,\n      tabIndex,\n      handleFocus,\n      handleKeydown: handleItemKeydown,\n      handleMousedown,\n    } = inject(ROVING_FOCUS_GROUP_ITEM_INJECTION_KEY, undefined)!\n\n    const itemRef = composeRefs(\n      dropdownCollectionItemRef,\n      rovingFocusCollectionItemRef,\n      rovingFocusGroupItemRef\n    )\n\n    const role = computed<string>(() => {\n      if (menuRole.value === 'menu') {\n        return 'menuitem'\n      } else if (menuRole.value === 'navigation') {\n        return 'link'\n      }\n      return 'button'\n    })\n\n    const handleKeydown = composeEventHandlers((e: KeyboardEvent) => {\n      const { code } = e\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.space) {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n        emit('clickimpl', e)\n        return true\n      }\n    }, handleItemKeydown)\n\n    return {\n      ns,\n      itemRef,\n      dataset: {\n        [COLLECTION_ITEM_SIGN]: '',\n      },\n      role,\n      tabIndex,\n      handleFocus,\n      handleKeydown,\n      handleMousedown,\n    }\n  },\n})\n</script>\n", "// @ts-nocheck\nimport { computed, inject, ref } from 'vue'\nimport { addClass, generateId } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { Nullable } from '@element-plus/utils'\nimport type { IElDropdownInstance } from './dropdown'\n\nexport const useDropdown = () => {\n  const elDropdown = inject<IElDropdownInstance>('elDropdown', {})\n  const _elDropdownSize = computed(() => elDropdown?.dropdownSize)\n\n  return {\n    elDropdown,\n    _elDropdownSize,\n  }\n}\n\nexport const initDropdownDomEvent = (\n  dropdownChildren,\n  triggerElm,\n  _instance\n) => {\n  const ns = useNamespace('dropdown')\n  const menuItems = ref<Nullable<HTMLButtonElement[]>>(null)\n  const menuItemsArray = ref<Nullable<HTMLElement[]>>(null)\n  const dropdownElm = ref<Nullable<HTMLElement>>(null)\n  const listId = ref(`dropdown-menu-${generateId()}`)\n  dropdownElm.value = dropdownChildren?.subTree.el\n\n  function removeTabindex() {\n    triggerElm.setAttribute('tabindex', '-1')\n    menuItemsArray.value?.forEach((item) => {\n      item.setAttribute('tabindex', '-1')\n    })\n  }\n\n  function resetTabindex(ele) {\n    removeTabindex()\n    ele?.setAttribute('tabindex', '0')\n  }\n\n  function handleTriggerKeyDown(ev: KeyboardEvent) {\n    const code = ev.code\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      removeTabindex()\n      resetTabindex(menuItems.value[0])\n      menuItems.value[0].focus()\n      ev.preventDefault()\n      ev.stopPropagation()\n    } else if (code === EVENT_CODE.enter) {\n      _instance.handleClick()\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide()\n    }\n  }\n\n  function handleItemKeyDown(ev) {\n    const code = ev.code\n    const target = ev.target\n    const currentIndex = menuItemsArray.value.indexOf(target)\n    const max = menuItemsArray.value.length - 1\n    let nextIndex\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex !== 0 ? currentIndex - 1 : 0\n      } else {\n        nextIndex = currentIndex < max ? currentIndex + 1 : max\n      }\n      removeTabindex()\n      resetTabindex(menuItems.value[nextIndex])\n      menuItems.value[nextIndex].focus()\n      ev.preventDefault()\n      ev.stopPropagation()\n    } else if (code === EVENT_CODE.enter) {\n      triggerElmFocus()\n      target.click()\n      if (_instance.props.hideOnClick) {\n        _instance.hide()\n      }\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide()\n      triggerElmFocus()\n    }\n  }\n\n  function initAria() {\n    dropdownElm.value.setAttribute('id', listId.value)\n    triggerElm.setAttribute('aria-haspopup', 'list')\n    triggerElm.setAttribute('aria-controls', listId.value)\n    if (!_instance.props.splitButton) {\n      triggerElm.setAttribute('role', 'button')\n      triggerElm.setAttribute('tabindex', _instance.props.tabindex)\n      addClass(triggerElm, ns.b('selfdefine'))\n    }\n  }\n\n  function initEvent() {\n    triggerElm?.addEventListener('keydown', handleTriggerKeyDown)\n    dropdownElm.value?.addEventListener('keydown', handleItemKeyDown, true)\n  }\n\n  function initDomOperation() {\n    menuItems.value = dropdownElm.value.querySelectorAll(\n      \"[tabindex='-1']\"\n    ) as unknown as HTMLButtonElement[]\n    menuItemsArray.value = Array.from(menuItems.value)\n\n    initEvent()\n    initAria()\n  }\n\n  function triggerElmFocus() {\n    triggerElm.focus()\n  }\n\n  initDomOperation()\n}\n", "<template>\n  <el-dropdown-collection-item\n    :disabled=\"disabled\"\n    :text-value=\"textValue ?? textContent\"\n  >\n    <el-roving-focus-item :focusable=\"!disabled\">\n      <el-dropdown-item-impl\n        v-bind=\"propsAndAttrs\"\n        @pointerleave=\"handlePointerLeave\"\n        @pointermove=\"handlePointerMove\"\n        @clickimpl=\"handleClick\"\n      >\n        <slot />\n      </el-dropdown-item-impl>\n    </el-roving-focus-item>\n  </el-dropdown-collection-item>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  ref,\n  unref,\n} from 'vue'\nimport { ElRovingFocusItem } from '@element-plus/components/roving-focus-group'\nimport { composeEventHandlers, whenMouse } from '@element-plus/utils'\nimport ElDropdownItemImpl from './dropdown-item-impl.vue'\nimport { useDropdown } from './useDropdown'\nimport {\n  ElCollectionItem as ElDropdownCollectionItem,\n  dropdownItemProps,\n} from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nexport default defineComponent({\n  name: 'ElDropdownItem',\n  components: {\n    ElDropdownCollectionItem,\n    ElRovingFocusItem,\n    ElDropdownItemImpl,\n  },\n  inheritAttrs: false,\n  props: dropdownItemProps,\n  emits: ['pointermove', 'pointerleave', 'click'],\n  setup(props, { emit, attrs }) {\n    const { elDropdown } = useDropdown()\n    const _instance = getCurrentInstance()\n    const itemRef = ref<HTMLElement | null>(null)\n    const textContent = computed(() => unref(itemRef)?.textContent ?? '')\n    const { onItemEnter, onItemLeave } = inject(\n      DROPDOWN_INJECTION_KEY,\n      undefined\n    )!\n\n    const handlePointerMove = composeEventHandlers(\n      (e: PointerEvent) => {\n        emit('pointermove', e)\n        return e.defaultPrevented\n      },\n      whenMouse((e) => {\n        if (props.disabled) {\n          onItemLeave(e)\n          return\n        }\n\n        const target = e.currentTarget as HTMLElement\n        /**\n         * This handles the following scenario:\n         *   when the item contains a form element such as input element\n         *   when the mouse is moving over the element itself which is contained by\n         *   the item, the default focusing logic should be prevented so that\n         *   it won't cause weird action.\n         */\n        if (\n          target === document.activeElement ||\n          target.contains(document.activeElement)\n        ) {\n          return\n        }\n\n        onItemEnter(e)\n        if (!e.defaultPrevented) {\n          target?.focus()\n        }\n      })\n    )\n\n    const handlePointerLeave = composeEventHandlers(\n      (e: PointerEvent) => {\n        emit('pointerleave', e)\n        return e.defaultPrevented\n      },\n      whenMouse((e) => {\n        onItemLeave(e)\n      })\n    )\n\n    const handleClick = composeEventHandlers(\n      (e: PointerEvent) => {\n        if (props.disabled) {\n          return\n        }\n        emit('click', e)\n        return e.type !== 'keydown' && e.defaultPrevented\n      },\n      (e) => {\n        if (props.disabled) {\n          e.stopImmediatePropagation()\n          return\n        }\n        if (elDropdown?.hideOnClick?.value) {\n          elDropdown.handleClick?.()\n        }\n        elDropdown.commandHandler?.(props.command, _instance, e)\n      }\n    )\n\n    // direct usage of v-bind={ ...$props, ...$attrs } causes type errors\n    const propsAndAttrs = computed(() => {\n      return { ...props, ...attrs }\n    })\n\n    return {\n      handleClick,\n      handlePointerMove,\n      handlePointerLeave,\n      textContent,\n      propsAndAttrs,\n    }\n  },\n})\n</script>\n", "<template>\n  <ul\n    :ref=\"dropdownListWrapperRef\"\n    :class=\"dropdownKls\"\n    :style=\"rovingFocusGroupRootStyle\"\n    :tabindex=\"-1\"\n    :role=\"role\"\n    :aria-labelledby=\"triggerId\"\n    @blur=\"onBlur\"\n    @focus=\"onFocus\"\n    @keydown.self=\"handleKeydown\"\n    @mousedown.self=\"onMousedown\"\n  >\n    <slot />\n  </ul>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport { computed, defineComponent, inject, unref } from 'vue'\nimport { composeEventHandlers, composeRefs } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { FOCUS_TRAP_INJECTION_KEY } from '@element-plus/components/focus-trap'\nimport {\n  ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n  ROVING_FOCUS_GROUP_INJECTION_KEY,\n  focusFirst,\n} from '@element-plus/components/roving-focus-group'\nimport { useNamespace } from '@element-plus/hooks'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\nimport {\n  DROPDOWN_COLLECTION_INJECTION_KEY,\n  FIRST_LAST_KEYS,\n  LAST_KEYS,\n  dropdownMenuProps,\n} from './dropdown'\nimport { useDropdown } from './useDropdown'\n\nexport default defineComponent({\n  name: 'ElDropdownMenu',\n  props: dropdownMenuProps,\n  setup(props) {\n    const ns = useNamespace('dropdown')\n    const { _elDropdownSize } = useDropdown()\n    const size = _elDropdownSize.value\n\n    const { focusTrapRef, onKeydown } = inject(\n      FOCUS_TRAP_INJECTION_KEY,\n      undefined\n    )!\n\n    const { contentRef, role, triggerId } = inject(\n      DROPDOWN_INJECTION_KEY,\n      undefined\n    )!\n\n    const { collectionRef: dropdownCollectionRef, getItems } = inject(\n      DROPDOWN_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const {\n      rovingFocusGroupRef,\n      rovingFocusGroupRootStyle,\n      tabIndex,\n      onBlur,\n      onFocus,\n      onMousedown,\n    } = inject(ROVING_FOCUS_GROUP_INJECTION_KEY, undefined)!\n\n    const { collectionRef: rovingFocusGroupCollectionRef } = inject(\n      ROVING_FOCUS_COLLECTION_INJECTION_KEY,\n      undefined\n    )!\n\n    const dropdownKls = computed(() => {\n      return [ns.b('menu'), ns.bm('menu', size?.value)]\n    })\n\n    const dropdownListWrapperRef = composeRefs(\n      contentRef,\n      dropdownCollectionRef,\n      focusTrapRef,\n      rovingFocusGroupRef,\n      rovingFocusGroupCollectionRef\n    )\n\n    const composedKeydown = composeEventHandlers(\n      (e: KeyboardEvent) => {\n        props.onKeydown?.(e)\n      },\n      (e) => {\n        const { currentTarget, code, target } = e\n        const isKeydownContained = (currentTarget as Node).contains(\n          target as Node\n        )\n\n        if (isKeydownContained) {\n          // TODO: implement typeahead search\n        }\n\n        if (EVENT_CODE.tab === code) {\n          e.stopImmediatePropagation()\n        }\n\n        e.preventDefault()\n\n        if (target !== unref(contentRef)) return\n        if (!FIRST_LAST_KEYS.includes(code)) return\n        const items = getItems<{ disabled: boolean }>().filter(\n          (item) => !item.disabled\n        )\n        const targets = items.map((item) => item.ref!)\n        if (LAST_KEYS.includes(code)) {\n          targets.reverse()\n        }\n        focusFirst(targets)\n      }\n    )\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      composedKeydown(e)\n      onKeydown(e)\n    }\n\n    return {\n      size,\n      rovingFocusGroupRootStyle,\n      tabIndex,\n      dropdownKls,\n      role,\n      triggerId,\n      dropdownListWrapperRef,\n      handleKeydown,\n      onBlur,\n      onFocus,\n      onMousedown,\n    }\n  },\n})\n</script>\n", "import { withInstall, withNoopInstall } from '@element-plus/utils'\n\nimport Dropdown from './src/dropdown.vue'\nimport DropdownItem from './src/dropdown-item.vue'\nimport DropdownMenu from './src/dropdown-menu.vue'\n\nexport const ElDropdown = withInstall(Dropdown, {\n  DropdownItem,\n  DropdownMenu,\n})\nexport default ElDropdown\nexport const ElDropdownItem = withNoopInstall(DropdownItem)\nexport const ElDropdownMenu = withNoopInstall(DropdownMenu)\nexport * from './src/dropdown'\nexport * from './src/instance'\nexport * from './src/tokens'\n", "import { buildProps, isBoolean } from '@element-plus/utils'\nimport {\n  useTooltipContentProps,\n  useTooltipTriggerProps,\n} from '@element-plus/components/tooltip'\nimport { dropdownProps } from '@element-plus/components/dropdown'\nimport type { ExtractPropTypes, PropType } from 'vue'\nimport type Popover from './popover.vue'\n\nexport const popoverProps = buildProps({\n  trigger: useTooltipTriggerProps.trigger,\n  placement: dropdownProps.placement,\n  disabled: useTooltipTriggerProps.disabled,\n  visible: useTooltipContentProps.visible,\n  transition: useTooltipContentProps.transition,\n  popperOptions: dropdownProps.popperOptions,\n  tabindex: dropdownProps.tabindex,\n  content: useTooltipContentProps.content,\n  popperStyle: useTooltipContentProps.popperStyle,\n  popperClass: useTooltipContentProps.popperClass,\n  enterable: {\n    ...useTooltipContentProps.enterable,\n    default: true,\n  },\n  effect: {\n    ...useTooltipContentProps.effect,\n    default: 'light',\n  },\n  teleported: useTooltipContentProps.teleported,\n  title: String,\n\n  width: {\n    type: [String, Number],\n    default: 150,\n  },\n  offset: {\n    type: Number,\n    default: undefined,\n  },\n  showAfter: {\n    type: Number,\n    default: 0,\n  },\n  hideAfter: {\n    type: Number,\n    default: 200,\n  },\n  autoClose: {\n    type: Number,\n    default: 0,\n  },\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n  persistent: {\n    type: Boolean,\n    default: true,\n  },\n  'onUpdate:visible': {\n    type: Function as PropType<(visible: boolean) => void>,\n  },\n} as const)\nexport type PopoverProps = ExtractPropTypes<typeof popoverProps>\n\nexport const popoverEmits = {\n  'update:visible': (value: boolean) => isBoolean(value),\n  'before-enter': () => true,\n  'before-leave': () => true,\n  'after-enter': () => true,\n  'after-leave': () => true,\n}\nexport type PopoverEmits = typeof popoverEmits\n\nexport type PopoverInstance = InstanceType<typeof Popover>\n", "<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    v-bind=\"$attrs\"\n    :trigger=\"trigger\"\n    :placement=\"placement\"\n    :disabled=\"disabled\"\n    :visible=\"visible\"\n    :transition=\"transition\"\n    :popper-options=\"popperOptions\"\n    :tabindex=\"tabindex\"\n    :content=\"content\"\n    :offset=\"offset\"\n    :show-after=\"showAfter\"\n    :hide-after=\"hideAfter\"\n    :auto-close=\"autoClose\"\n    :show-arrow=\"showArrow\"\n    :aria-label=\"title\"\n    :effect=\"effect\"\n    :enterable=\"enterable\"\n    :popper-class=\"kls\"\n    :popper-style=\"style\"\n    :teleported=\"teleported\"\n    :persistent=\"persistent\"\n    :gpu-acceleration=\"gpuAcceleration\"\n    @update:visible=\"onUpdateVisible\"\n    @before-show=\"beforeEnter\"\n    @before-hide=\"beforeLeave\"\n    @show=\"afterEnter\"\n    @hide=\"afterLeave\"\n  >\n    <template v-if=\"$slots.reference\">\n      <slot name=\"reference\" />\n    </template>\n\n    <template #content>\n      <div v-if=\"title\" :class=\"ns.e('title')\" role=\"title\">\n        {{ title }}\n      </div>\n      <slot>\n        {{ content }}\n      </slot>\n    </template>\n  </el-tooltip>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, ref, unref } from 'vue'\nimport { ElTooltip } from '@element-plus/components/tooltip'\nimport { addUnit } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { popoverEmits, popoverProps } from './popover'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\n\ndefineOptions({\n  name: 'ElPopover',\n})\n\nconst props = defineProps(popoverProps)\nconst emit = defineEmits(popoverEmits)\n\nconst updateEventKeyRaw = `onUpdate:visible` as const\n\nconst onUpdateVisible = computed(() => {\n  return props[updateEventKeyRaw]\n})\n\nconst ns = useNamespace('popover')\nconst tooltipRef = ref<TooltipInstance>()\nconst popperRef = computed(() => {\n  return unref(tooltipRef)?.popperRef\n})\n\nconst style = computed(() => {\n  return [\n    {\n      width: addUnit(props.width),\n    },\n    props.popperStyle!,\n  ]\n})\n\nconst kls = computed(() => {\n  return [ns.b(), props.popperClass!, { [ns.m('plain')]: !!props.content }]\n})\n\nconst gpuAcceleration = computed(() => {\n  return props.transition === `${ns.namespace.value}-fade-in-linear`\n})\n\nconst hide = () => {\n  tooltipRef.value?.hide()\n}\n\nconst beforeEnter = () => {\n  emit('before-enter')\n}\nconst beforeLeave = () => {\n  emit('before-leave')\n}\n\nconst afterEnter = () => {\n  emit('after-enter')\n}\n\nconst afterLeave = () => {\n  emit('update:visible', false)\n  emit('after-leave')\n}\n\ndefineExpose({\n  /** @description popper ref */\n  popperRef,\n  /** @description hide popover */\n  hide,\n})\n</script>\n", "import type { DirectiveBinding, ObjectDirective } from 'vue'\nimport type { PopoverInstance } from './popover'\n\nconst attachEvents = (el: HTMLElement, binding: DirectiveBinding) => {\n  const popperComponent: PopoverInstance = binding.arg || binding.value\n  const popover = popperComponent?.popperRef\n  if (popover) {\n    popover.triggerRef = el\n  }\n}\n\nexport default {\n  mounted(el, binding) {\n    attachEvents(el, binding)\n  },\n  updated(el, binding) {\n    attachEvents(el, binding)\n  },\n} as ObjectDirective\n\nexport const VPopover = 'popover'\n", "import { withInstall, withInstallDirective } from '@element-plus/utils'\n\nimport Popover from './src/popover.vue'\nimport PopoverDirective, { VPopover } from './src/directive'\n\nexport const ElPopoverDirective = withInstallDirective(\n  PopoverDirective,\n  VPopover\n)\n\nexport const ElPopover = withInstall(Popover, {\n  directive: ElPopoverDirective,\n})\nexport default ElPopover\n\nexport * from './src/popover'\n"],
  "mappings": "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",
  "names": ["DO_defineComponent", "_renderSlot", "DO_defineComponent", "_renderSlot", "COLLECTION_INJECTION_KEY", "COLLECTION_ITEM_INJECTION_KEY", "ElCollection", "ElCollectionItem", "_sfc_main", "ROVING_FOCUS_COLLECTION_INJECTION_KEY", "_sfc_main", "ElFocusGroupCollection", "_createBlock", "_withCtx", "_createVNode", "_renderSlot", "_sfc_main", "ElRovingFocusCollectionItem", "ROVING_FOCUS_COLLECTION_INJECTION_KEY", "_createBlock", "_renderSlot", "ElCollection", "ElCollectionItem", "COLLECTION_INJECTION_KEY", "COLLECTION_ITEM_INJECTION_KEY", "_sfc_main", "ElDropdownCollection", "ElOnlyChild", "ensureArray", "_resolveComponent", "_openBlock", "_createElementBlock", "_normalizeClass", "_createVNode", "_createSlots", "_withCtx", "_renderSlot", "_createBlock", "_mergeProps", "_sfc_main", "DROPDOWN_COLLECTION_ITEM_INJECTION_KEY", "ROVING_FOCUS_ITEM_COLLECTION_INJECTION_KEY", "_openBlock", "_createElementBlock", "_mergeProps", "_createCommentVNode", "_createElementVNode", "_createBlock", "_withCtx", "_resolveDynamicComponent", "_renderSlot", "_sfc_main", "ElDropdownCollectionItem", "_resolveComponent", "_openBlock", "_createBlock", "_withCtx", "_createVNode", "_mergeProps", "_sfc_main", "DROPDOWN_COLLECTION_INJECTION_KEY", "ROVING_FOCUS_COLLECTION_INJECTION_KEY", "_openBlock", "_createElementBlock", "_normalizeClass", "_normalizeStyle", "_withModifiers", "_renderSlot"]
}
